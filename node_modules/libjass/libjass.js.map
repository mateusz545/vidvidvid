{"version":3,"file":"libjass.js.map","sources":["utility.ts","web-worker.ts","parts.ts","parser.ts","renderers-clocks.ts","renderers-null.ts","renderers-web.ts","renderers-default.ts","types.ts"],"names":["define","libjass","libjass.SimpleSet","libjass.SimpleSet.constructor","libjass.SimpleSet.add","libjass.SimpleSet.clear","libjass.SimpleSet.has","libjass.SimpleSet.forEach","libjass.SimpleSet.delete","libjass.SimpleSet.size","libjass.SimpleSet._toProperty","libjass.SimpleMap","libjass.SimpleMap.constructor","libjass.SimpleMap.get","libjass.SimpleMap.has","libjass.SimpleMap.set","libjass.SimpleMap.delete","libjass.SimpleMap.clear","libjass.SimpleMap.forEach","libjass.SimpleMap.size","libjass.SimpleMap._keyToProperty","libjass.SimplePromise","libjass.SimplePromise.constructor","libjass.SimplePromise.then","libjass.SimplePromise.isFulfilled","libjass.SimplePromise.isRejected","libjass.SimplePromise.isPending","libjass.SimplePromise.value","libjass.SimplePromise.reason","libjass.SimplePromise.resolve","libjass.SimplePromise.all","libjass.SimplePromise._resolve","libjass.SimplePromise._fulfill","libjass.SimplePromise._reject","libjass.SimplePromise._getThenMethod","libjass.SimplePromise._propagateResolution","libjass.SimplePromiseState","libjass.DeferredPromise","libjass.DeferredPromise.constructor","libjass.DeferredPromise.promise","libjass.DeferredPromise.resolve","libjass.DeferredPromise.reject","libjass.mixin","libjass.webworker","libjass.webworker.createWorker","libjass.webworker.WorkerCommands","libjass.webworker._registerWorkerCommand","libjass.webworker._registerClassPrototype","libjass.webworker.WorkerChannelImpl","libjass.webworker.WorkerChannelImpl.constructor","libjass.webworker.WorkerChannelImpl.request","libjass.webworker.WorkerChannelImpl.cancelRequest","libjass.webworker.WorkerChannelImpl._respond","libjass.webworker.WorkerChannelImpl._onMessage","libjass.webworker.WorkerChannelImpl._toJSON","libjass.webworker.WorkerChannelImpl._fromJSON","libjass.parts","libjass.parts.Color","libjass.parts.Color.constructor","libjass.parts.Color.red","libjass.parts.Color.green","libjass.parts.Color.blue","libjass.parts.Color.alpha","libjass.parts.Color.withAlpha","libjass.parts.Color.toString","libjass.parts.Comment","libjass.parts.Comment.constructor","libjass.parts.Comment.value","libjass.parts.Text","libjass.parts.Text.constructor","libjass.parts.Text.value","libjass.parts.Text.toString","libjass.parts.NewLine","libjass.parts.Italic","libjass.parts.Italic.constructor","libjass.parts.Italic.value","libjass.parts.Bold","libjass.parts.Bold.constructor","libjass.parts.Bold.value","libjass.parts.Underline","libjass.parts.Underline.constructor","libjass.parts.Underline.value","libjass.parts.StrikeThrough","libjass.parts.StrikeThrough.constructor","libjass.parts.StrikeThrough.value","libjass.parts.Border","libjass.parts.Border.constructor","libjass.parts.Border.value","libjass.parts.BorderX","libjass.parts.BorderX.constructor","libjass.parts.BorderX.value","libjass.parts.BorderY","libjass.parts.BorderY.constructor","libjass.parts.BorderY.value","libjass.parts.Shadow","libjass.parts.Shadow.constructor","libjass.parts.Shadow.value","libjass.parts.ShadowX","libjass.parts.ShadowX.constructor","libjass.parts.ShadowX.value","libjass.parts.ShadowY","libjass.parts.ShadowY.constructor","libjass.parts.ShadowY.value","libjass.parts.Blur","libjass.parts.Blur.constructor","libjass.parts.Blur.value","libjass.parts.GaussianBlur","libjass.parts.GaussianBlur.constructor","libjass.parts.GaussianBlur.value","libjass.parts.FontName","libjass.parts.FontName.constructor","libjass.parts.FontName.value","libjass.parts.FontSize","libjass.parts.FontSize.constructor","libjass.parts.FontSize.value","libjass.parts.FontSizePlus","libjass.parts.FontSizePlus.constructor","libjass.parts.FontSizePlus.value","libjass.parts.FontSizeMinus","libjass.parts.FontSizeMinus.constructor","libjass.parts.FontSizeMinus.value","libjass.parts.FontScaleX","libjass.parts.FontScaleX.constructor","libjass.parts.FontScaleX.value","libjass.parts.FontScaleY","libjass.parts.FontScaleY.constructor","libjass.parts.FontScaleY.value","libjass.parts.LetterSpacing","libjass.parts.LetterSpacing.constructor","libjass.parts.LetterSpacing.value","libjass.parts.RotateX","libjass.parts.RotateX.constructor","libjass.parts.RotateX.value","libjass.parts.RotateY","libjass.parts.RotateY.constructor","libjass.parts.RotateY.value","libjass.parts.RotateZ","libjass.parts.RotateZ.constructor","libjass.parts.RotateZ.value","libjass.parts.SkewX","libjass.parts.SkewX.constructor","libjass.parts.SkewX.value","libjass.parts.SkewY","libjass.parts.SkewY.constructor","libjass.parts.SkewY.value","libjass.parts.PrimaryColor","libjass.parts.PrimaryColor.constructor","libjass.parts.PrimaryColor.value","libjass.parts.SecondaryColor","libjass.parts.SecondaryColor.constructor","libjass.parts.SecondaryColor.value","libjass.parts.OutlineColor","libjass.parts.OutlineColor.constructor","libjass.parts.OutlineColor.value","libjass.parts.ShadowColor","libjass.parts.ShadowColor.constructor","libjass.parts.ShadowColor.value","libjass.parts.Alpha","libjass.parts.Alpha.constructor","libjass.parts.Alpha.value","libjass.parts.PrimaryAlpha","libjass.parts.PrimaryAlpha.constructor","libjass.parts.PrimaryAlpha.value","libjass.parts.SecondaryAlpha","libjass.parts.SecondaryAlpha.constructor","libjass.parts.SecondaryAlpha.value","libjass.parts.OutlineAlpha","libjass.parts.OutlineAlpha.constructor","libjass.parts.OutlineAlpha.value","libjass.parts.ShadowAlpha","libjass.parts.ShadowAlpha.constructor","libjass.parts.ShadowAlpha.value","libjass.parts.Alignment","libjass.parts.Alignment.constructor","libjass.parts.Alignment.value","libjass.parts.ColorKaraoke","libjass.parts.ColorKaraoke.constructor","libjass.parts.ColorKaraoke.duration","libjass.parts.SweepingColorKaraoke","libjass.parts.SweepingColorKaraoke.constructor","libjass.parts.SweepingColorKaraoke.duration","libjass.parts.OutlineKaraoke","libjass.parts.OutlineKaraoke.constructor","libjass.parts.OutlineKaraoke.duration","libjass.parts.WrappingStyle","libjass.parts.WrappingStyle.constructor","libjass.parts.WrappingStyle.value","libjass.parts.Reset","libjass.parts.Reset.constructor","libjass.parts.Reset.value","libjass.parts.Position","libjass.parts.Position.constructor","libjass.parts.Position.x","libjass.parts.Position.y","libjass.parts.Move","libjass.parts.Move.constructor","libjass.parts.Move.x1","libjass.parts.Move.y1","libjass.parts.Move.x2","libjass.parts.Move.y2","libjass.parts.Move.t1","libjass.parts.Move.t2","libjass.parts.RotationOrigin","libjass.parts.RotationOrigin.constructor","libjass.parts.RotationOrigin.x","libjass.parts.RotationOrigin.y","libjass.parts.Fade","libjass.parts.Fade.constructor","libjass.parts.Fade.start","libjass.parts.Fade.end","libjass.parts.ComplexFade","libjass.parts.ComplexFade.constructor","libjass.parts.ComplexFade.a1","libjass.parts.ComplexFade.a2","libjass.parts.ComplexFade.a3","libjass.parts.ComplexFade.t1","libjass.parts.ComplexFade.t2","libjass.parts.ComplexFade.t3","libjass.parts.ComplexFade.t4","libjass.parts.Transform","libjass.parts.Transform.constructor","libjass.parts.Transform.start","libjass.parts.Transform.end","libjass.parts.Transform.accel","libjass.parts.Transform.tags","libjass.parts.RectangularClip","libjass.parts.RectangularClip.constructor","libjass.parts.RectangularClip.x1","libjass.parts.RectangularClip.y1","libjass.parts.RectangularClip.x2","libjass.parts.RectangularClip.y2","libjass.parts.RectangularClip.inside","libjass.parts.VectorClip","libjass.parts.VectorClip.constructor","libjass.parts.VectorClip.scale","libjass.parts.VectorClip.instructions","libjass.parts.VectorClip.inside","libjass.parts.DrawingMode","libjass.parts.DrawingMode.constructor","libjass.parts.DrawingMode.scale","libjass.parts.DrawingBaselineOffset","libjass.parts.DrawingBaselineOffset.constructor","libjass.parts.DrawingBaselineOffset.value","libjass.parts.DrawingInstructions","libjass.parts.DrawingInstructions.constructor","libjass.parts.DrawingInstructions.instructions","libjass.parts.drawing","libjass.parts.drawing.MoveInstruction","libjass.parts.drawing.MoveInstruction.constructor","libjass.parts.drawing.MoveInstruction.x","libjass.parts.drawing.MoveInstruction.y","libjass.parts.drawing.LineInstruction","libjass.parts.drawing.LineInstruction.constructor","libjass.parts.drawing.LineInstruction.x","libjass.parts.drawing.LineInstruction.y","libjass.parts.drawing.CubicBezierCurveInstruction","libjass.parts.drawing.CubicBezierCurveInstruction.constructor","libjass.parts.drawing.CubicBezierCurveInstruction.x1","libjass.parts.drawing.CubicBezierCurveInstruction.y1","libjass.parts.drawing.CubicBezierCurveInstruction.x2","libjass.parts.drawing.CubicBezierCurveInstruction.y2","libjass.parts.drawing.CubicBezierCurveInstruction.x3","libjass.parts.drawing.CubicBezierCurveInstruction.y3","ctor","prototype","hasOwnProperty","propertyNames","Object","getOwnPropertyNames","filter","property","toString","_this","this","ctorName","map","name","join","length","libjass.parser","libjass.parser.StringStream","libjass.parser.StringStream.constructor","libjass.parser.StringStream.nextLine","libjass.parser.XhrStream","libjass.parser.XhrStream.constructor","libjass.parser.XhrStream.nextLine","libjass.parser.XhrStream._onXhrProgress","libjass.parser.XhrStream._onXhrLoadEnd","libjass.parser.XhrStream._reportNewLine","libjass.parser.StreamParser","libjass.parser.StreamParser.constructor","libjass.parser.StreamParser.minimalASS","libjass.parser.StreamParser.ass","libjass.parser.StreamParser._onNextLine","libjass.parser.SrtStreamParser","libjass.parser.SrtStreamParser.constructor","libjass.parser.SrtStreamParser.ass","libjass.parser.SrtStreamParser._onNextLine","libjass.parser.parseLineIntoProperty","libjass.parser.parseLineIntoTypedTemplate","libjass.parser.parse","libjass.parser.ParserRun","libjass.parser.ParserRun.constructor","libjass.parser.ParserRun.result","libjass.parser.ParserRun.parse_dialogueParts","libjass.parser.ParserRun.parse_enclosedTags","libjass.parser.ParserRun.parse_newline","libjass.parser.ParserRun.parse_hardspace","libjass.parser.ParserRun.parse_text","libjass.parser.ParserRun.parse_comment","libjass.parser.ParserRun.parse_tag_a","libjass.parser.ParserRun.parse_tag_alpha","libjass.parser.ParserRun.parse_tag_an","libjass.parser.ParserRun.parse_tag_b","libjass.parser.ParserRun.parse_tag_be","libjass.parser.ParserRun.parse_tag_blur","libjass.parser.ParserRun.parse_tag_bord","libjass.parser.ParserRun.parse_tag_c","libjass.parser.ParserRun.parse_tag_clip","libjass.parser.ParserRun.parse_tag_fad","libjass.parser.ParserRun.parse_tag_fade","libjass.parser.ParserRun.parse_tag_fax","libjass.parser.ParserRun.parse_tag_fay","libjass.parser.ParserRun.parse_tag_fn","libjass.parser.ParserRun.parse_tag_fr","libjass.parser.ParserRun.parse_tag_frx","libjass.parser.ParserRun.parse_tag_fry","libjass.parser.ParserRun.parse_tag_frz","libjass.parser.ParserRun.parse_tag_fs","libjass.parser.ParserRun.parse_tag_fsplus","libjass.parser.ParserRun.parse_tag_fsminus","libjass.parser.ParserRun.parse_tag_fscx","libjass.parser.ParserRun.parse_tag_fscy","libjass.parser.ParserRun.parse_tag_fsp","libjass.parser.ParserRun.parse_tag_i","libjass.parser.ParserRun.parse_tag_iclip","libjass.parser.ParserRun.parse_tag_k","libjass.parser.ParserRun.parse_tag_K","libjass.parser.ParserRun.parse_tag_kf","libjass.parser.ParserRun.parse_tag_ko","libjass.parser.ParserRun.parse_tag_move","libjass.parser.ParserRun.parse_tag_org","libjass.parser.ParserRun.parse_tag_p","libjass.parser.ParserRun.parse_tag_pbo","libjass.parser.ParserRun.parse_tag_pos","libjass.parser.ParserRun.parse_tag_q","libjass.parser.ParserRun.parse_tag_r","libjass.parser.ParserRun.parse_tag_s","libjass.parser.ParserRun.parse_tag_shad","libjass.parser.ParserRun.parse_tag_t","libjass.parser.ParserRun.parse_tag_u","libjass.parser.ParserRun.parse_tag_xbord","libjass.parser.ParserRun.parse_tag_xshad","libjass.parser.ParserRun.parse_tag_ybord","libjass.parser.ParserRun.parse_tag_yshad","libjass.parser.ParserRun.parse_tag_1a","libjass.parser.ParserRun.parse_tag_1c","libjass.parser.ParserRun.parse_tag_2a","libjass.parser.ParserRun.parse_tag_2c","libjass.parser.ParserRun.parse_tag_3a","libjass.parser.ParserRun.parse_tag_3c","libjass.parser.ParserRun.parse_tag_4a","libjass.parser.ParserRun.parse_tag_4c","libjass.parser.ParserRun.parse_drawingInstructions","libjass.parser.ParserRun.parse_drawingInstructionMove","libjass.parser.ParserRun.parse_drawingInstructionLine","libjass.parser.ParserRun.parse_drawingInstructionCubicBezierCurve","libjass.parser.ParserRun.parse_decimalInt32","libjass.parser.ParserRun.parse_hexInt32","libjass.parser.ParserRun.parse_decimalOrHexInt32","libjass.parser.ParserRun.parse_decimal","libjass.parser.ParserRun.parse_unsignedDecimal","libjass.parser.ParserRun.parse_enableDisable","libjass.parser.ParserRun.parse_color","libjass.parser.ParserRun.parse_alpha","libjass.parser.ParserRun.parse_colorWithAlpha","libjass.parser.ParserRun.read","libjass.parser.ParserRun._peek","libjass.parser.ParserRun._haveMore","libjass.parser.ParserRun._parse_tag_clip_or_iclip","libjass.parser.makeTagParserFunction","self","current","ParseNode","parent","read","tagName","pop","valueNode","valueParser","call","value","tagConstructor","required","libjass.parser.ParseNode","libjass.parser.ParseNode.constructor","libjass.parser.ParseNode.start","libjass.parser.ParseNode.end","libjass.parser.ParseNode.parent","libjass.parser.ParseNode.children","libjass.parser.ParseNode.value","libjass.parser.ParseNode.pop","libjass.parser.ParseNode._setEnd","libjass.renderers","libjass.renderers.EventSource","libjass.renderers.EventSource.addEventListener","libjass.renderers.EventSource._dispatchEvent","libjass.renderers.ClockEvent","libjass.renderers.ManualClock","libjass.renderers.ManualClock.constructor","libjass.renderers.ManualClock.play","libjass.renderers.ManualClock.tick","libjass.renderers.ManualClock.pause","libjass.renderers.ManualClock.stop","libjass.renderers.ManualClock.currentTime","libjass.renderers.ManualClock.enabled","libjass.renderers.ManualClock.rate","libjass.renderers.ManualClock.enable","libjass.renderers.ManualClock.disable","libjass.renderers.ManualClock.toggle","libjass.renderers.ManualClock.setEnabled","libjass.renderers.ManualClock.setRate","libjass.renderers.VideoState","libjass.renderers.VideoClock","libjass.renderers.VideoClock.constructor","libjass.renderers.VideoClock.currentTime","libjass.renderers.VideoClock.enabled","libjass.renderers.VideoClock.rate","libjass.renderers.VideoClock.enable","libjass.renderers.VideoClock.disable","libjass.renderers.VideoClock.toggle","libjass.renderers.VideoClock.setEnabled","libjass.renderers.VideoClock._onVideoPlaying","libjass.renderers.VideoClock._onVideoPause","libjass.renderers.VideoClock._onVideoSeeking","libjass.renderers.VideoClock._onTimerTick","libjass.renderers.VideoClock._onVideoRateChange","libjass.renderers.VideoClock._startTicking","libjass.renderers.VideoClock._stopTicking","libjass.renderers.NullRenderer","libjass.renderers.NullRenderer.constructor","libjass.renderers.NullRenderer.id","libjass.renderers.NullRenderer.ass","libjass.renderers.NullRenderer.clock","libjass.renderers.NullRenderer.settings","libjass.renderers.NullRenderer.enable","libjass.renderers.NullRenderer.disable","libjass.renderers.NullRenderer.toggle","libjass.renderers.NullRenderer.setEnabled","libjass.renderers.NullRenderer.enabled","libjass.renderers.NullRenderer._onClockPlay","libjass.renderers.NullRenderer._onClockTick","libjass.renderers.NullRenderer._onClockPause","libjass.renderers.NullRenderer._onClockStop","libjass.renderers.NullRenderer._onClockRateChange","libjass.renderers.RendererSettings","libjass.renderers.RendererSettings.makeFontMapFromStyleElement","libjass.renderers.RendererSettings.from","libjass.renderers.RendererSettings._from","libjass.renderers.RendererSettings._stripQuotes","libjass.renderers.WebRenderer","libjass.renderers.WebRenderer.constructor","libjass.renderers.WebRenderer.libjassSubsWrapper","libjass.renderers.WebRenderer.resize","libjass.renderers.WebRenderer.preRender","libjass.renderers.WebRenderer.draw","libjass.renderers.WebRenderer._onClockPlay","libjass.renderers.WebRenderer._onClockTick","libjass.renderers.WebRenderer._onClockPause","libjass.renderers.WebRenderer._onClockStop","libjass.renderers.WebRenderer._onClockRateChange","libjass.renderers.WebRenderer._ready","libjass.renderers.WebRenderer._removeSub","libjass.renderers.WebRenderer._removeAllSubs","libjass.renderers.SpanStyles","libjass.renderers.SpanStyles.constructor","libjass.renderers.SpanStyles.reset","libjass.renderers.SpanStyles.setStylesOnSpan","libjass.renderers.SpanStyles.makeNewLine","libjass.renderers.SpanStyles.italic","libjass.renderers.SpanStyles.bold","libjass.renderers.SpanStyles.underline","libjass.renderers.SpanStyles.strikeThrough","libjass.renderers.SpanStyles.outlineWidth","libjass.renderers.SpanStyles.outlineHeight","libjass.renderers.SpanStyles.shadowDepthX","libjass.renderers.SpanStyles.shadowDepthY","libjass.renderers.SpanStyles.blur","libjass.renderers.SpanStyles.gaussianBlur","libjass.renderers.SpanStyles.fontName","libjass.renderers.SpanStyles.fontSize","libjass.renderers.SpanStyles.fontScaleX","libjass.renderers.SpanStyles.fontScaleY","libjass.renderers.SpanStyles.letterSpacing","libjass.renderers.SpanStyles.rotationX","libjass.renderers.SpanStyles.rotationY","libjass.renderers.SpanStyles.rotationZ","libjass.renderers.SpanStyles.skewX","libjass.renderers.SpanStyles.skewY","libjass.renderers.SpanStyles.primaryColor","libjass.renderers.SpanStyles.secondaryColor","libjass.renderers.SpanStyles.outlineColor","libjass.renderers.SpanStyles.shadowColor","libjass.renderers.SpanStyles.primaryAlpha","libjass.renderers.SpanStyles.secondaryAlpha","libjass.renderers.SpanStyles.outlineAlpha","libjass.renderers.SpanStyles.shadowAlpha","libjass.renderers.SpanStyles._getFontSize","libjass.renderers.AnimationCollection","libjass.renderers.AnimationCollection.constructor","libjass.renderers.AnimationCollection.cssText","libjass.renderers.AnimationCollection.animationStyle","libjass.renderers.AnimationCollection.animationDelays","libjass.renderers.AnimationCollection.add","libjass.renderers.Keyframe","libjass.renderers.Keyframe.constructor","libjass.renderers.Keyframe.time","libjass.renderers.Keyframe.properties","libjass.renderers.DrawingStyles","libjass.renderers.DrawingStyles.constructor","libjass.renderers.DrawingStyles.scale","libjass.renderers.DrawingStyles.baselineOffset","libjass.renderers.DrawingStyles.toSVG","libjass.renderers.DefaultRenderer","libjass.renderers.DefaultRenderer.constructor","libjass.renderers.DefaultRenderer.resizeVideo","libjass.renderers.DefaultRenderer._ready","libjass.renderers.DefaultRenderer._onFullScreenChange","libjass.ASS","libjass.ASS.constructor","libjass.ASS.properties","libjass.ASS.styles","libjass.ASS.dialogues","libjass.ASS.stylesFormatSpecifier","libjass.ASS.dialoguesFormatSpecifier","libjass.ASS.addStyle","libjass.ASS.addEvent","libjass.ASS.fromString","libjass.ASS.fromStream","libjass.ASS.fromUrl","libjass.Format","libjass.WrappingStyle","libjass.ScriptProperties","libjass.ScriptProperties.resolutionX","libjass.ScriptProperties.resolutionY","libjass.ScriptProperties.wrappingStyle","libjass.ScriptProperties.scaleBorderAndShadow","libjass.BorderStyle","libjass.Style","libjass.Style.constructor","libjass.Style.name","libjass.Style.italic","libjass.Style.bold","libjass.Style.underline","libjass.Style.strikeThrough","libjass.Style.fontName","libjass.Style.fontSize","libjass.Style.fontScaleX","libjass.Style.fontScaleY","libjass.Style.letterSpacing","libjass.Style.rotationZ","libjass.Style.primaryColor","libjass.Style.secondaryColor","libjass.Style.outlineColor","libjass.Style.shadowColor","libjass.Style.outlineThickness","libjass.Style.borderStyle","libjass.Style.shadowDepth","libjass.Style.alignment","libjass.Style.marginLeft","libjass.Style.marginRight","libjass.Style.marginVertical","libjass.Dialogue","libjass.Dialogue.constructor","libjass.Dialogue.id","libjass.Dialogue.start","libjass.Dialogue.end","libjass.Dialogue.style","libjass.Dialogue.alignment","libjass.Dialogue.layer","libjass.Dialogue.parts","libjass.Dialogue.toString","libjass.Dialogue._parsePartsString","libjass.Dialogue._toTime","libjass._valueOrDefault"],"mappings":"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","sourcesContent":["/**\r\n * libjass\r\n *\r\n * https://github.com/Arnavion/libjass\r\n *\r\n * Copyright 2013 Arnav Singh\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n///<reference path=\"libjass.ts\" />\r\n\r\n\"use strict\";\r\n\r\ninterface Promise<T> {\r\n\t/**\r\n\t * @param {?function(T):U} fulfilledHandler\r\n\t * @param {?function(*):U} rejectedHandler\r\n\t * @return {!Promise.<U>}\r\n\t */\r\n\tthen<U>(fulfilledHandler?: (value: T) => U, rejectedHandler?: (reason: any) => U): Promise<U>;\r\n\r\n\t/**\r\n\t * @param {?function(T):!Promise.<U>} fulfilledHandler\r\n\t * @param {?function(*):!Promise.<U>} rejectedHandler\r\n\t * @return {!Promise.<U>}\r\n\t */\r\n\tthen<U>(fulfilledHandler?: (value: T) => Promise<U>, rejectedHandler?: (reason: any) => Promise<U>): Promise<U>;\r\n\r\n\t/**\r\n\t * @param {?function(T):U} fulfilledHandler\r\n\t * @param {?function(*):!Promise.<U>} rejectedHandler\r\n\t * @return {!Promise.<U>}\r\n\t */\r\n\tthen<U>(fulfilledHandler?: (value: T) => U, rejectedHandler?: (reason: any) => Promise<U>): Promise<U>;\r\n\r\n\t/**\r\n\t * @param {?function(T):!Promise.<U>} fulfilledHandler\r\n\t * @param {?function(*):U} rejectedHandler\r\n\t * @return {!Promise.<U>}\r\n\t */\r\n\tthen<U>(fulfilledHandler?: (value: T) => Promise<U>, rejectedHandler?: (reason: any) => U): Promise<U>;\r\n}\r\n\r\ninterface Global {\r\n\t/**\r\n\t * @type {function(new:Set.<T>, !Array.<T>=)}\r\n\t */\r\n\tSet: {\r\n\t\tnew <T>(iterable?: T[]): Set<T>; prototype: Set<any>\r\n\t};\r\n\r\n\t/**\r\n\t * @type {function(new:Map.<K, V>, !Array.<!Array.<*>>=)}\r\n\t */\r\n\tMap: {\r\n\t\tnew <K, V>(iterable?: [K, V][]): Map<K, V>; prototype: Map<any, any>\r\n\t};\r\n\r\n\t/**\r\n\t * @type {function(new:Promise.<T>, function(T), function(*)), resolve: function(T):!Promise.<T>, all: function(!Array.<!Promise.<T>>):!Promise.<!Array.<T>>}}\r\n\t */\r\n\tPromise: {\r\n\t\tnew <T>(resolver: (fulfill: (value: T) => void, reject: (reason: any) => void) => void): Promise<T>;\r\n\r\n\t\tresolve<T>(value: T): Promise<T>;\r\n\r\n\t\tall<T>(promises: Promise<T>[]): Promise<T[]>;\r\n\t};\r\n}\r\n\r\ndeclare var global: Global; // Defined as a parameter of the anonymous function wrapper\r\n\r\nmodule libjass {\r\n\t/**\r\n\t * Set implementation for browsers that don't support it. Only supports Number and String elements.\r\n\t *\r\n\t * Elements are stored as properties of an object, with names derived from their type.\r\n\t *\r\n\t * @param {!Array.<T>=} iterable Only an array of values is supported.\r\n\t */\r\n\tclass SimpleSet<T> implements Set<T> {\r\n\t\tprivate _elements: { [key: string]: T };\r\n\t\tprivate _size: number;\r\n\r\n\t\tconstructor(iterable?: T[]) {\r\n\t\t\tthis.clear();\r\n\r\n\t\t\tif (Array.isArray(iterable)) {\r\n\t\t\t\titerable.forEach(value => this.add(value));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {T} value\r\n\t\t * @return {libjass.Set.<T>} This set\r\n\t\t */\r\n\t\tadd(value: T): Set<T> {\r\n\t\t\tvar property = this._toProperty(value);\r\n\r\n\t\t\tif (property === null) {\r\n\t\t\t\tthrow new Error(\"This Set implementation only supports Number and String values.\");\r\n\t\t\t}\r\n\r\n\t\t\tif (!(property in this._elements)) {\r\n\t\t\t\tthis._size++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._elements[property] = value;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t */\r\n\t\tclear(): void {\r\n\t\t\tthis._elements = Object.create(null);\r\n\t\t\tthis._size = 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {T} value\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\thas(value: T): boolean {\r\n\t\t\tvar property = this._toProperty(value);\r\n\r\n\t\t\tif (property === null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn property in this._elements;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {function(T, T, libjass.Set.<T>)} callbackfn A function that is called with each value in the set.\r\n\t\t * @param {*} thisArg\r\n\t\t */\r\n\t\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\r\n\t\t\tObject.keys(this._elements).map((property: string) => {\r\n\t\t\t\tvar element = this._elements[property];\r\n\t\t\t\tcallbackfn.call(thisArg, element, element, this);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Not implemented.\r\n\t\t *\r\n\t\t * @param {T} value\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\tdelete(value: T): boolean {\r\n\t\t\tthrow new Error(\"This Set implementation doesn't support delete().\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget size(): number {\r\n\t\t\treturn this._size;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Converts the given value into a property name for the internal map.\r\n\t\t *\r\n\t\t * @param {T} value\r\n\t\t * @return {string}\r\n\t\t */\r\n\t\tprivate _toProperty(value: T): string {\r\n\t\t\tif (typeof value === \"number\") {\r\n\t\t\t\treturn \"#\" + value;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof value === \"string\") {\r\n\t\t\t\treturn \"'\" + value;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set to browser's implementation of Set if it has one, else set to {@link libjass.SimpleSet}\r\n\t *\r\n\t * @type {function(new:Set, !Array.<T>=)}\r\n\t */\r\n\texport var Set = global.Set;\r\n\tif (Set === undefined || typeof Set.prototype.forEach !== \"function\" || new Set([1, 2]).size !== 2) {\r\n\t\tSet = <any>SimpleSet;\r\n\t}\r\n\r\n\t/**\r\n\t * Map implementation for browsers that don't support it. Only supports keys which are of Number or String type, or which have a property called \"id\".\r\n\t *\r\n\t * Keys and values are stored as properties of an object, with property names derived from the key type.\r\n\t *\r\n\t * @param {!Array.<!Array.<*>>=} iterable Only an array of elements (where each element is a 2-tuple of key and value) is supported.\r\n\t */\r\n\tclass SimpleMap<K, V> implements Map<K, V> {\r\n\t\tprivate _keys: { [key: string]: K };\r\n\t\tprivate _values: { [key: string]: V };\r\n\t\tprivate _size: number;\r\n\r\n\t\tconstructor(iterable?: [K, V][]) {\r\n\t\t\tthis.clear();\r\n\r\n\t\t\tif (Array.isArray(iterable)) {\r\n\t\t\t\titerable.forEach(element => this.set(element[0], element[1]));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {K} key\r\n\t\t * @return {V}\r\n\t\t */\r\n\t\tget(key: K): V {\r\n\t\t\tvar property = this._keyToProperty(key);\r\n\r\n\t\t\tif (property === null) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._values[property];\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {K} key\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\thas(key: K): boolean {\r\n\t\t\tvar property = this._keyToProperty(key);\r\n\r\n\t\t\tif (property === null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn property in this._keys;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {K} key\r\n\t\t * @param {V} value\r\n\t\t * @return {libjass.Map.<K, V>} This map\r\n\t\t */\r\n\t\tset(key: K, value: V): Map<K, V> {\r\n\t\t\tvar property = this._keyToProperty(key);\r\n\r\n\t\t\tif (property === null) {\r\n\t\t\t\tthrow new Error(\"This Map implementation only supports Number and String keys, or keys with an id property.\");\r\n\t\t\t}\r\n\r\n\t\t\tif (!(property in this._keys)) {\r\n\t\t\t\tthis._size++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._keys[property] = key;\r\n\t\t\tthis._values[property] = value;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {K} key\r\n\t\t * @return {boolean} true if the key was present before being deleted, false otherwise\r\n\t\t */\r\n\t\tdelete(key: K): boolean {\r\n\t\t\tvar property = this._keyToProperty(key);\r\n\r\n\t\t\tif (property === null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar result = property in this._keys;\r\n\r\n\t\t\tif (result) {\r\n\t\t\t\tdelete this._keys[property];\r\n\t\t\t\tdelete this._values[property];\r\n\t\t\t\tthis._size--;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t */\r\n\t\tclear(): void {\r\n\t\t\tthis._keys = Object.create(null);\r\n\t\t\tthis._values = Object.create(null);\r\n\t\t\tthis._size = 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {function(V, K, libjass.Map.<K, V>)} callbackfn A function that is called with each key and value in the map.\r\n\t\t * @param {*} thisArg\r\n\t\t */\r\n\t\tforEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void {\r\n\t\t\tvar keysArray = Object.keys(this._keys);\r\n\t\t\tfor (var i = 0; i < keysArray.length; i++) {\r\n\t\t\t\tvar property = keysArray[i];\r\n\t\t\t\tcallbackfn.call(thisArg, this._values[property], this._keys[property], this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget size(): number {\r\n\t\t\treturn this._size;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Converts the given key into a property name for the internal map.\r\n\t\t *\r\n\t\t * @param {K} key\r\n\t\t * @return {string}\r\n\t\t */\r\n\t\tprivate _keyToProperty(key: K): string {\r\n\t\t\tif (typeof key === \"number\") {\r\n\t\t\t\treturn \"#\" + key;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof key === \"string\") {\r\n\t\t\t\treturn \"'\" + key;\r\n\t\t\t}\r\n\r\n\t\t\tif ((<any>key).id !== undefined) {\r\n\t\t\t\treturn \"!\" + (<any>key).id;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set to browser's implementation of Map if it has one, else set to {@link libjass.SimpleMap}\r\n\t *\r\n\t * @type {function(new:Map, !Array.<!Array.<*>>=)}\r\n\t */\r\n\texport var Map = global.Map;\r\n\tif (Map === undefined || typeof Map.prototype.forEach !== \"function\" || new Map([[1, \"foo\"], [2, \"bar\"]]).size !== 2) {\r\n\t\tMap = <any>SimpleMap;\r\n\t}\r\n\r\n\t/**\r\n\t * Promise implementation for browsers that don't support it.\r\n\t *\r\n\t * @param {function(function(T), function(*))} resolver\r\n\t */\r\n\tclass SimplePromise<T> implements Promise<T> {\r\n\t\tprivate _state: SimplePromiseState = SimplePromiseState.PENDING;\r\n\r\n\t\tprivate _thens: { propagateFulfilling: (value: T) => void; propagateRejection: (reason: any) => void }[] = [];\r\n\t\tprivate _pendingPropagateTimeout: number = null;\r\n\r\n\t\tprivate _alreadyFulfilledValue: T = null;\r\n\t\tprivate _alreadyRejectedReason: any = null;\r\n\r\n\t\tconstructor(private _resolver: (resolve: (value: T) => void, reject: (reason: any) => void) => void) {\r\n\t\t\ttry {\r\n\t\t\t\t_resolver(value => this._resolve(value), reason => this._reject(reason));\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tthis._reject(ex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {?function(T):(U|Promise.<U>)} fulfilledHandler\r\n\t\t * @param {?function(*):(U|Promise.<U>)} rejectedHandler\r\n\t\t * @return {!Promise.<U>}\r\n\t\t */\r\n\t\tthen<U>(fulfilledHandler?: (value: T) => U, rejectedHandler?: (reason: any) => U): Promise<U> {\r\n\t\t\tfulfilledHandler = (typeof fulfilledHandler === \"function\") ? fulfilledHandler : null;\r\n\t\t\trejectedHandler = (typeof rejectedHandler === \"function\") ? rejectedHandler : null;\r\n\r\n\t\t\tif (fulfilledHandler === null && rejectedHandler === null) {\r\n\t\t\t\treturn <any>this;\r\n\t\t\t}\r\n\r\n\t\t\tif (fulfilledHandler === null) {\r\n\t\t\t\tfulfilledHandler = value => <U><any>value;\r\n\t\t\t}\r\n\r\n\t\t\tif (rejectedHandler === null) {\r\n\t\t\t\trejectedHandler = (reason): U => { throw reason; };\r\n\t\t\t}\r\n\r\n\t\t\tvar result = new SimplePromise<U>((resolve, reject) => {\r\n\t\t\t\tthis._thens.push({\r\n\t\t\t\t\tpropagateFulfilling: value => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresolve(fulfilledHandler(value));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\treject(ex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, propagateRejection: reason => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresolve(rejectedHandler(reason));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (ex) {\r\n\t\t\t\t\t\t\treject(ex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif ((this._state === SimplePromiseState.FULFILLED || this._state === SimplePromiseState.REJECTED) && this._pendingPropagateTimeout === null) {\r\n\t\t\t\tthis._pendingPropagateTimeout = setTimeout(() => this._propagateResolution(), 0);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\tisFulfilled(): boolean {\r\n\t\t\treturn (this._state !== SimplePromiseState.FULFILLED);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\tisRejected(): boolean {\r\n\t\t\treturn (this._state !== SimplePromiseState.REJECTED);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\tisPending(): boolean {\r\n\t\t\treturn (this._state !== SimplePromiseState.PENDING);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {T}\r\n\t\t */\r\n\t\tvalue(): T {\r\n\t\t\tif (this._state !== SimplePromiseState.FULFILLED) {\r\n\t\t\t\tthrow new Error(\"This promise is not in FULFILLED state.\");\r\n\t\t\t}\r\n\r\n\t\t\treturn this._alreadyFulfilledValue;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {*}\r\n\t\t */\r\n\t\treason(): any {\r\n\t\t\tif (this._state !== SimplePromiseState.REJECTED) {\r\n\t\t\t\tthrow new Error(\"This promise is not in FULFILLED state.\");\r\n\t\t\t}\r\n\r\n\t\t\treturn this._alreadyRejectedReason;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {T} value\r\n\t\t * @return {!Promise.<T>}\r\n\t\t */\r\n\t\tstatic resolve<T>(value: T): Promise<T> {\r\n\t\t\treturn new SimplePromise<T>(resolve => resolve(value));\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!Array.<!Promise.<T>>} promises\r\n\t\t * @return {!Promise.<!Array.<T>>}\r\n\t\t */\r\n\t\tstatic all<T>(promises: Promise<T>[]): Promise<T[]> {\r\n\t\t\treturn new Promise<T[]>((resolve, reject) => {\r\n\t\t\t\tvar result: T[] = [];\r\n\r\n\t\t\t\tvar numUnresolved = promises.length;\r\n\t\t\t\tif (numUnresolved === 0) {\r\n\t\t\t\t\tresolve(result);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpromises.forEach((promise, index) => promise.then(value => {\r\n\t\t\t\t\tresult[index] = value;\r\n\t\t\t\t\tnumUnresolved--;\r\n\r\n\t\t\t\t\tif (numUnresolved === 0) {\r\n\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t}), reject);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {T} value\r\n\t\t */\r\n\t\tprivate _resolve(value: T): void {\r\n\t\t\tvar alreadyCalled = false;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (<any>value === this) {\r\n\t\t\t\t\tthrow new TypeError(\"2.3.1\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar thenMethod = SimplePromise._getThenMethod<T>(value);\r\n\t\t\t\tif (thenMethod === null) {\r\n\t\t\t\t\tthis._fulfill(value);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthenMethod.call(\r\n\t\t\t\t\t<Promise<T>><any>value,\r\n\t\t\t\t\t(value: T) => {\r\n\t\t\t\t\t\tif (alreadyCalled) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\talreadyCalled = true;\r\n\r\n\t\t\t\t\t\tthis._resolve(value);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(reason: any) => {\r\n\t\t\t\t\t\tif (alreadyCalled) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\talreadyCalled = true;\r\n\r\n\t\t\t\t\t\tthis._reject(reason);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tcatch (ex) {\r\n\t\t\t\tif (alreadyCalled) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._reject(ex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {T} value\r\n\t\t */\r\n\t\tprivate _fulfill(value: T): void {\r\n\t\t\tif (this._state !== SimplePromiseState.PENDING) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._state = SimplePromiseState.FULFILLED;\r\n\t\t\tthis._alreadyFulfilledValue = value;\r\n\r\n\t\t\tif (this._pendingPropagateTimeout === null) {\r\n\t\t\t\tthis._pendingPropagateTimeout = setTimeout(() => this._propagateResolution(), 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {*} reason\r\n\t\t */\r\n\t\tprivate _reject(reason: any): void {\r\n\t\t\tif (this._state !== SimplePromiseState.PENDING) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._state = SimplePromiseState.REJECTED;\r\n\t\t\tthis._alreadyRejectedReason = reason;\r\n\r\n\t\t\tif (this._pendingPropagateTimeout === null) {\r\n\t\t\t\tthis._pendingPropagateTimeout = setTimeout(() => this._propagateResolution(), 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!*} obj\r\n\t\t * @return {?function(function(T):T, function(*):T):!Promise.<T>}\r\n\t\t */\r\n\t\tprivate static _getThenMethod<T>(obj: any): (fulfilledHandler: (value: T) => T, rejectedHandler: (reason: any) => T) => Promise<T> {\r\n\t\t\tif (typeof obj !== \"object\" && typeof obj !== \"function\") {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (obj === null || obj === undefined) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar then: any = obj.then;\r\n\t\t\tif (typeof then !== \"function\") {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn then;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Propagates the result of the current promise to all its children.\r\n\t\t */\r\n\t\tprivate _propagateResolution(): void {\r\n\t\t\tthis._pendingPropagateTimeout = null;\r\n\r\n\t\t\tif (this._state === SimplePromiseState.FULFILLED) {\r\n\t\t\t\twhile (this._thens.length > 0) {\r\n\t\t\t\t\tvar nextThen = this._thens.shift();\r\n\t\t\t\t\tnextThen.propagateFulfilling(this._alreadyFulfilledValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._state === SimplePromiseState.REJECTED) {\r\n\t\t\t\twhile (this._thens.length > 0) {\r\n\t\t\t\t\tvar nextThen = this._thens.shift();\r\n\t\t\t\t\tnextThen.propagateRejection(this._alreadyRejectedReason);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The state of the {@link libjass.SimplePromise}\r\n\t */\r\n\tenum SimplePromiseState {\r\n\t\tPENDING = 0,\r\n\t\tFULFILLED = 1,\r\n\t\tREJECTED = 2,\r\n\t}\r\n\r\n\t/**\r\n\t * Set to browser's implementation of Promise if it has one, else set to {@link libjass.SimplePromise}\r\n\t *\r\n\t * @type {function(new:Promise)}\r\n\t */\r\n\texport var Promise = global.Promise;\r\n\tif (Promise === undefined) {\r\n\t\tPromise = <any>SimplePromise;\r\n\t}\r\n\r\n\t/**\r\n\t * A deferred promise.\r\n\t */\r\n\texport class DeferredPromise<T> {\r\n\t\tprivate _promise: Promise<T>;\r\n\t\tprivate _resolve: (value: T) => void;\r\n\t\tprivate _reject: (reason: any) => void;\r\n\r\n\t\tconstructor() {\r\n\t\t\tthis._promise = new Promise<T>((resolve, reject) => {\r\n\t\t\t\tthis._resolve = resolve;\r\n\t\t\t\tthis._reject = reject;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {!Promise.<T>}\r\n\t\t */\r\n\t\tget promise(): Promise<T> {\r\n\t\t\treturn this._promise;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {T} value\r\n\t\t */\r\n\t\tresolve(value: T): void {\r\n\t\t\tthis._resolve(value);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {*} reason\r\n\t\t */\r\n\t\treject(reason: any): void {\r\n\t\t\tthis._reject(reason);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds properties of the given mixins' prototypes to the given class's prototype.\r\n\t *\r\n\t * @param {!*} clazz\r\n\t * @param {!Array.<*>} mixins\r\n\t */\r\n\texport function mixin(clazz: any, mixins: any[]): void {\r\n\t\tmixins.forEach((mixin: any) => {\r\n\t\t\tObject.getOwnPropertyNames(mixin.prototype).forEach(name => {\r\n\t\t\t\tclazz.prototype[name] = mixin.prototype[name];\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Debug mode. When true, libjass logs some debug messages.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\texport var debugMode: boolean = false;\r\n\r\n\t/**\r\n\t * Verbose debug mode. When true, libjass logs some more debug messages. This setting is independent of {@link libjass.debugMode}\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\texport var verboseMode: boolean = false;\r\n}\r\n","/**\r\n * libjass\r\n *\r\n * https://github.com/Arnavion/libjass\r\n *\r\n * Copyright 2013 Arnav Singh\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n///<reference path=\"libjass.ts\" />\r\n\r\ninterface Document {\r\n\t/**\r\n\t * @type {!HTMLScriptElement}\r\n\t */\r\n\tcurrentScript: HTMLScriptElement;\r\n}\r\n\r\ninterface WorkerGlobalScope {\r\n\t/**\r\n\t * @param {*} message\r\n\t */\r\n\tpostMessage(message: any): void;\r\n\r\n\t/**\r\n\t * @param {string} type\r\n\t * @param {function(*)} listener\r\n\t * @param {boolean} useCapture\r\n\t */\r\n\taddEventListener(type: string, listener: (message: any) => void, useCapture: boolean): void;\r\n}\r\ndeclare var WorkerGlobalScope: {\r\n\tprototype: WorkerGlobalScope;\r\n\tnew (): WorkerGlobalScope;\r\n};\r\n\r\nmodule libjass.webworker {\r\n\tObject.defineProperty(webworker, \"supported\", {\r\n\t\tvalue: typeof Worker !== \"undefined\",\r\n\t\tconfigurable: true,\r\n\t\tenumerable: true\r\n\t});\r\n\r\n\t/**\r\n\t * Represents a communication channel between the host and the web worker. An instance of this class is created by calling {@link libjass.webworker.createWorker}\r\n\t */\r\n\texport interface WorkerChannel {\r\n\t\t/**\r\n\t\t * Sends a request to the other side to execute the given command with the given parameters.\r\n\t\t *\r\n\t\t * @param {number} command\r\n\t\t * @param {*} parameters\r\n\t\t * @return {!Promise.<*>} A promise that will get resolved when the other side computes the result\r\n\t\t */\r\n\t\trequest(command: WorkerCommands, parameters: any): Promise<any>;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new web worker and returns a {@link libjass.webworker.WorkerChannel} to it.\r\n\t *\r\n\t * @param {string=} scriptPath The path to libjass.js to be loaded in the web worker. If the browser supports document.currentScript, the parameter is optional and, if not provided,\r\n\t * the path will be determined from the src attribute of the <script> element that contains the currently running copy of libjass.js\r\n\t * @return {!libjass.webworker.WorkerChannel} A communication channel to the new web worker.\r\n\t */\r\n\texport function createWorker(scriptPath: string = _scriptNode.src): WorkerChannel {\r\n\t\treturn new WorkerChannelImpl(new Worker(scriptPath));\r\n\t}\r\n\r\n\t/**\r\n\t * The commands that can be sent to or from a web worker.\r\n\t */\r\n\texport enum WorkerCommands {\r\n\t\tResponse = 0\r\n\t}\r\n\r\n\t/**\r\n\t * The signature of a handler registered to handle a particular command in {@link libjass.webworker.WorkerCommands}\r\n\t */\r\n\texport interface WorkerCommandHandler {\r\n\t\t(parameters: any, response: WorkerResultCallback): void;\r\n\t}\r\n\r\n\t/**\r\n\t * The signature of a callback called by a {@link libjass.webworker.WorkerCommandHandler} to report its result back to the caller.\r\n\t */\r\n\texport interface WorkerResultCallback {\r\n\t\t(error: any, result: any): void;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a handler for the given worker command.\r\n\t *\r\n\t * @param {number} command The command that this handler will handle. One of the {@link libjass.webworker.WorkerCommands} constants.\r\n\t * @param {function(*, function(*, *))} handler The handler. A function of the form (parameters: *, response: function(error: *, result: *): void): void\r\n\t */\r\n\texport function _registerWorkerCommand(command: WorkerCommands, handler: WorkerCommandHandler): void {\r\n\t\tworkerCommands.set(command, handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a prototype as a deserializable type.\r\n\t *\r\n\t * @param {!*} prototype\r\n\t */\r\n\texport function _registerClassPrototype(prototype: any): void {\r\n\t\tprototype._classTag = classPrototypes.size;\r\n\t\tclassPrototypes.set(prototype._classTag, prototype);\r\n\t}\r\n\r\n\tvar _scriptNode: HTMLScriptElement = null;\r\n\tif (typeof document !== \"undefined\" && document.currentScript !== undefined) {\r\n\t\t_scriptNode = document.currentScript;\r\n\t}\r\n\r\n\tvar workerCommands = new Map<WorkerCommands, WorkerCommandHandler>();\r\n\r\n\tvar classPrototypes = new Map<number, any>();\r\n\r\n\t/**\r\n\t * The interface implemented by a communication channel to the other side.\r\n\t */\r\n\tinterface WorkerCommunication {\r\n\t\t/**\r\n\t\t * @param {\"message\"} type\r\n\t\t * @param {function(!MessageEvent): *} listener\r\n\t\t * @param {?boolean} useCapture\r\n\t\t */\r\n\t\taddEventListener(type: \"message\", listener: (ev: MessageEvent) => any, useCapture?: boolean): void;\r\n\r\n\t\t/**\r\n\t\t * @param {string} type\r\n\t\t * @param {!EventListener} listener\r\n\t\t * @param {?boolean} useCapture\r\n\t\t */\r\n\t\taddEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n\r\n\t\t/**\r\n\t\t * @param {*} message\r\n\t\t */\r\n\t\tpostMessage(message: any): void;\r\n\t}\r\n\r\n\t/**\r\n\t * The interface implemented by a request sent to the other side of the communication channel.\r\n\t */\r\n\tinterface WorkerRequestMessage {\r\n\t\t/**\r\n\t\t * An internal identifier for this request. Used to connect responses to their corresponding requests.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\trequestId: number;\r\n\r\n\t\t/**\r\n\t\t * The command type of this request.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tcommand: WorkerCommands;\r\n\r\n\t\t/**\r\n\t\t * Any parameters serialized with this request.\r\n\t\t *\r\n\t\t * @type {*}\r\n\t\t */\r\n\t\tparameters: any;\r\n\t}\r\n\r\n\t/**\r\n\t * The interface implemented by a response received from the other side of the communication channel.\r\n\t */\r\n\tinterface WorkerResponseMessage {\r\n\t\t/**\r\n\t\t * An internal identifier for this response. Used to connect responses to their corresponding requests.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\trequestId: number;\r\n\r\n\t\t/**\r\n\t\t * Set if the computation of this response resulted in an error.\r\n\t\t *\r\n\t\t * @type {*}\r\n\t\t */\r\n\t\terror: any;\r\n\r\n\t\t/**\r\n\t\t * The result of computing this response.\r\n\t\t *\r\n\t\t * @type {*}\r\n\t\t */\r\n\t\tresult: any;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal implementation of libjass.webworker.WorkerChannel\r\n\t *\r\n\t * @param {!*} comm The other side of the channel. When created by the host, this is the web worker. When created by the web worker, this is its global object.\r\n\t */\r\n\tclass WorkerChannelImpl implements WorkerChannel {\r\n\t\tprivate static _lastRequestId: number = -1;\r\n\r\n\t\tprivate _pendingRequests = new Map<number, DeferredPromise<any>>();\r\n\r\n\t\tconstructor(private _comm: WorkerCommunication) {\r\n\t\t\tthis._comm.addEventListener(\"message\", ev => this._onMessage(<string>ev.data), false);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {number} command\r\n\t\t * @param {*} parameters\r\n\t\t * @return {!Promise.<*>}\r\n\t\t */\r\n\t\trequest(command: WorkerCommands, parameters: any): Promise<any> {\r\n\t\t\tvar deferred = new DeferredPromise<any>();\r\n\t\t\tvar requestId = ++WorkerChannelImpl._lastRequestId;\r\n\t\t\tthis._pendingRequests.set(requestId, deferred);\r\n\r\n\t\t\tvar requestMessage: WorkerRequestMessage = { requestId: requestId, command: command, parameters: parameters };\r\n\t\t\tthis._comm.postMessage(WorkerChannelImpl._toJSON(requestMessage));\r\n\r\n\t\t\treturn deferred.promise;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {number} requestId\r\n\t\t */\r\n\t\tcancelRequest(requestId: number): void {\r\n\t\t\tvar deferred = this._pendingRequests.get(requestId);\r\n\t\t\tif (deferred === undefined) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._pendingRequests.delete(requestId);\r\n\t\t\tdeferred.reject(new Error(\"Cancelled.\"));\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!WorkerResponseMessage} message\r\n\t\t */\r\n\t\tprivate _respond(message: WorkerResponseMessage): void {\r\n\t\t\tthis._comm.postMessage(WorkerChannelImpl._toJSON({ command: WorkerCommands.Response, requestId: message.requestId, error: message.error, result: message.result }));\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {string} rawMessage\r\n\t\t */\r\n\t\tprivate _onMessage(rawMessage: string): void {\r\n\t\t\tvar message = <{ command: WorkerCommands }>WorkerChannelImpl._fromJSON(rawMessage);\r\n\r\n\t\t\tif (message.command === WorkerCommands.Response) {\r\n\t\t\t\tvar responseMessage = <WorkerResponseMessage><any>message;\r\n\r\n\t\t\t\tvar deferred = this._pendingRequests.get(responseMessage.requestId);\r\n\t\t\t\tif (deferred !== undefined) {\r\n\t\t\t\t\tthis._pendingRequests.delete(responseMessage.requestId);\r\n\t\t\t\t\tif (responseMessage.error === null) {\r\n\t\t\t\t\t\tdeferred.resolve(responseMessage.result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdeferred.reject(responseMessage.error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar requestMessage = <WorkerRequestMessage>message;\r\n\r\n\t\t\tvar commandCallback = workerCommands.get(requestMessage.command);\r\n\t\t\tif (commandCallback === undefined) {\r\n\t\t\t\tthis._respond({ requestId: requestMessage.requestId, error: new Error(\"Unrecognized command: \" + requestMessage.command), result: null });\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcommandCallback(requestMessage.parameters, (error: any, result: any) => this._respond({ requestId: requestMessage.requestId, error: error, result: result }));\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {*} obj\r\n\t\t * @return {string}\r\n\t\t */\r\n\t\tprivate static _toJSON(obj: any): string {\r\n\t\t\treturn JSON.stringify(obj, (/* ujs:unreferenced */ key: string, value: any) => {\r\n\t\t\t\tif (value && value._classTag !== undefined) {\r\n\t\t\t\t\tvalue._classTag = value._classTag;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {string} str\r\n\t\t * @return {*}\r\n\t\t */\r\n\t\tprivate static _fromJSON(str: string): any {\r\n\t\t\treturn JSON.parse(str, (/* ujs:unreferenced */ key: string, value: any) => {\r\n\t\t\t\tif (value && value._classTag !== undefined) {\r\n\t\t\t\t\tvar hydratedValue = Object.create(classPrototypes.get(value._classTag));\r\n\t\t\t\t\tObject.keys(value).forEach(key => {\r\n\t\t\t\t\t\tif (key !== \"_classTag\") {\r\n\t\t\t\t\t\t\thydratedValue[key] = value[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvalue = hydratedValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tvar inWorker = (typeof WorkerGlobalScope !== \"undefined\" && global instanceof WorkerGlobalScope);\r\n\tif (inWorker) {\r\n\t\tnew WorkerChannelImpl(<WorkerGlobalScope><any>global);\r\n\t}\r\n}\r\n","/**\r\n * libjass\r\n *\r\n * https://github.com/Arnavion/libjass\r\n *\r\n * Copyright 2013 Arnav Singh\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n///<reference path=\"libjass.ts\" />\r\n\r\nmodule libjass.parts {\r\n\t/**\r\n\t * Represents a CSS color with red, green, blue and alpha components.\r\n\t *\r\n\t * Instances of this class are immutable.\r\n\t *\r\n\t * @param {number} red\r\n\t * @param {number} green\r\n\t * @param {number} blue\r\n\t * @param {number=1} alpha\r\n\t */\r\n\texport class Color {\r\n\t\tconstructor(private _red: number, private _green: number, private _blue: number, private _alpha: number = 1) { }\r\n\r\n\t\t/**\r\n\t\t * The red component of this color as a number between 0 and 255.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget red(): number {\r\n\t\t\treturn this._red;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The green component of this color as a number between 0 and 255.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget green(): number {\r\n\t\t\treturn this._green;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The blue component of this color as a number between 0 and 255.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget blue(): number {\r\n\t\t\treturn this._blue;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The alpha component of this color as a number between 0 and 1, where 0 means transparent and 1 means opaque.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget alpha(): number {\r\n\t\t\treturn this._alpha;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {?number} value The new alpha. If null, the existing alpha is used.\r\n\t\t * @return {!libjass.parts.Color} Returns a new Color instance with the same color but the provided alpha.\r\n\t\t */\r\n\t\twithAlpha(value: number): Color {\r\n\t\t\tif (value !== null) {\r\n\t\t\t\treturn new Color(this._red, this._green, this._blue, value);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {string} The CSS representation \"rgba(...)\" of this color.\r\n\t\t */\r\n\t\ttoString(): string {\r\n\t\t\treturn \"rgba(\" + this._red + \", \" + this._green + \", \" + this._blue + \", \" + this._alpha.toFixed(3) + \")\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The base interface of the ASS tag classes.\r\n\t */\r\n\texport interface Part { }\r\n\r\n\t/**\r\n\t * A comment, i.e., any text enclosed in {} that is not understood as an ASS tag.\r\n\t *\r\n\t * @param {string} value The text of this comment\r\n\t */\r\n\texport class Comment {\r\n\t\tconstructor(private _value: string) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this comment.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tget value(): string {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A block of text, i.e., any text not enclosed in {}. Also includes \\h.\r\n\t *\r\n\t * @param {string} value The content of this block of text\r\n\t */\r\n\texport class Text {\r\n\t\tconstructor(private _value: string) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this text part.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tget value(): string {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {string}\r\n\t\t */\r\n\t\ttoString(): string {\r\n\t\t\treturn \"Text { value: \" + this._value.replace(/\\u00A0/g, \"\\\\h\") + \" }\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A newline character \\N.\r\n\t */\r\n\texport class NewLine {\r\n\t}\r\n\r\n\t/**\r\n\t * An italic tag {\\i}\r\n\t *\r\n\t * @param {?boolean} value {\\i1} -> true, {\\i0} -> false, {\\i} -> null\r\n\t */\r\n\texport class Italic {\r\n\t\tconstructor(private _value: boolean) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this italic tag.\r\n\t\t *\r\n\t\t * @type {?boolean}\r\n\t\t */\r\n\t\tget value(): boolean {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A bold tag {\\b}\r\n\t *\r\n\t * @param {*} value {\\b1} -> true, {\\b0} -> false, {\\b###} -> weight of the bold (number), {\\b} -> null\r\n\t */\r\n\texport class Bold {\r\n\t\tconstructor(private _value: Object) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this bold tag.\r\n\t\t *\r\n\t\t * @type {?boolean|?number}\r\n\t\t */\r\n\t\tget value(): Object {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An underline tag {\\u}\r\n\t *\r\n\t * @param {?boolean} value {\\u1} -> true, {\\u0} -> false, {\\u} -> null\r\n\t */\r\n\texport class Underline {\r\n\t\tconstructor(private _value: boolean) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this underline tag.\r\n\t\t *\r\n\t\t * @type {?boolean}\r\n\t\t */\r\n\t\tget value(): boolean {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A strike-through tag {\\s}\r\n\t *\r\n\t * @param {?boolean} value {\\s1} -> true, {\\s0} -> false, {\\s} -> null\r\n\t */\r\n\texport class StrikeThrough {\r\n\t\tconstructor(private _value: boolean) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this strike-through tag.\r\n\t\t *\r\n\t\t * @type {?boolean}\r\n\t\t */\r\n\t\tget value(): boolean {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A border tag {\\bord}\r\n\t *\r\n\t * @param {?number} value {\\bord###} -> width (number), {\\bord} -> null\r\n\t */\r\n\texport class Border {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this border tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A horizontal border tag {\\xbord}\r\n\t *\r\n\t * @param {?number} value {\\xbord###} -> width (number), {\\xbord} -> null\r\n\t */\r\n\texport class BorderX {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this horizontal border tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A vertical border tag {\\ybord}\r\n\t *\r\n\t * @param {?number} value {\\ybord###} -> height (number), {\\ybord} -> null\r\n\t */\r\n\texport class BorderY {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this vertical border tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A shadow tag {\\shad}\r\n\t *\r\n\t * @param {?number} value {\\shad###} -> depth (number), {\\shad} -> null\r\n\t */\r\n\texport class Shadow {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this shadow tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A horizontal shadow tag {\\xshad}\r\n\t *\r\n\t * @param {?number} value {\\xshad###} -> depth (number), {\\xshad} -> null\r\n\t */\r\n\texport class ShadowX {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this horizontal shadow tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A vertical shadow tag {\\yshad}\r\n\t *\r\n\t * @param {?number} value {\\yshad###} -> depth (number), {\\yshad} -> null\r\n\t */\r\n\texport class ShadowY {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this vertical shadow tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A blur tag {\\be}\r\n\t *\r\n\t * @param {?number} value {\\be###} -> strength (number), {\\be} -> null\r\n\t */\r\n\texport class Blur {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this blur tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A Gaussian blur tag {\\blur}\r\n\t *\r\n\t * @param {?number} value {\\blur###} -> strength (number), {\\blur} -> null\r\n\t */\r\n\texport class GaussianBlur {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this Gaussian blur tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A font name tag {\\fn}\r\n\t *\r\n\t * @param {?string} value {\\fn###} -> name (string), {\\fn} -> null\r\n\t */\r\n\texport class FontName {\r\n\t\tconstructor(private _value: string) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this font name tag.\r\n\t\t *\r\n\t\t * @type {?string}\r\n\t\t */\r\n\t\tget value(): string {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A font size tag {\\fs}\r\n\t *\r\n\t * @param {?number} value {\\fs###} -> size (number), {\\fs} -> null\r\n\t */\r\n\texport class FontSize {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this font size tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A font size increase tag {\\fs+}\r\n\t *\r\n\t * @param {?number} value {\\fs+###} -> difference (number)\r\n\t */\r\n\texport class FontSizePlus {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this font size increase tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A font size decrease tag {\\fs-}\r\n\t *\r\n\t * @param {?number} value {\\fs-###} -> difference (number)\r\n\t */\r\n\texport class FontSizeMinus {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this font size decrease tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A horizontal font scaling tag {\\fscx}\r\n\t *\r\n\t * @param {?number} value {\\fscx###} -> scale (number), {\\fscx} -> null\r\n\t */\r\n\texport class FontScaleX {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this horizontal font scaling tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A vertical font scaling tag {\\fscy}\r\n\t *\r\n\t * @param {?number} value {\\fscy###} -> scale (number), {\\fscy} -> null\r\n\t */\r\n\texport class FontScaleY {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this vertical font scaling tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A letter-spacing tag {\\fsp}\r\n\t *\r\n\t * @param {?number} value {\\fsp###} -> spacing (number), {\\fsp} -> null\r\n\t */\r\n\texport class LetterSpacing {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this letter-spacing tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An X-axis rotation tag {\\frx}\r\n\t *\r\n\t * @param {?number} value {\\frx###} -> angle (number), {\\frx} -> null\r\n\t */\r\n\texport class RotateX {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this X-axis rotation tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A Y-axis rotation tag {\\fry}\r\n\t *\r\n\t * @param {?number} value {\\fry###} -> angle (number), {\\fry} -> null\r\n\t */\r\n\texport class RotateY {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this Y-axis rotation tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A Z-axis rotation tag {\\fr} or {\\frz}\r\n\t *\r\n\t * @param {?number} value {\\frz###} -> angle (number), {\\frz} -> null\r\n\t */\r\n\texport class RotateZ {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this Z-axis rotation tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An X-axis shearing tag {\\fax}\r\n\t *\r\n\t * @param {?number} value {\\fax###} -> angle (number), {\\fax} -> null\r\n\t */\r\n\texport class SkewX {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this X-axis shearing tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value() {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A Y-axis shearing tag {\\fay}\r\n\t *\r\n\t * @param {?number} value {\\fay###} -> angle (number), {\\fay} -> null\r\n\t */\r\n\texport class SkewY {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this Y-axis shearing tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A primary color tag {\\c} or {\\1c}\r\n\t *\r\n\t * @param {libjass.parts.Color} value {\\1c###} -> color (Color), {\\1c} -> null\r\n\t */\r\n\texport class PrimaryColor {\r\n\t\tconstructor(private _value: Color) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this primary color tag.\r\n\t\t *\r\n\t\t * @type {libjass.parts.Color}\r\n\t\t */\r\n\t\tget value(): Color {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A secondary color tag {\\2c}\r\n\t *\r\n\t * @param {libjass.parts.Color} value {\\2c###} -> color (Color), {\\2c} -> null\r\n\t */\r\n\texport class SecondaryColor {\r\n\t\tconstructor(private _value: Color) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this secondary color tag.\r\n\t\t *\r\n\t\t * @type {libjass.parts.Color}\r\n\t\t */\r\n\t\tget value(): Color {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An outline color tag {\\3c}\r\n\t *\r\n\t * @param {libjass.parts.Color} value {\\3c###} -> color (Color), {\\3c} -> null\r\n\t */\r\n\texport class OutlineColor {\r\n\t\tconstructor(private _value: Color) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this outline color tag.\r\n\t\t *\r\n\t\t * @type {libjass.parts.Color}\r\n\t\t */\r\n\t\tget value(): Color {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A shadow color tag {\\4c}\r\n\t *\r\n\t * @param {libjass.parts.Color} value {\\4c###} -> color (Color), {\\4c} -> null\r\n\t */\r\n\texport class ShadowColor {\r\n\t\tconstructor(private _value: Color) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this shadow color tag.\r\n\t\t *\r\n\t\t * @type {libjass.parts.Color}\r\n\t\t */\r\n\t\tget value(): Color {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An alpha tag {\\alpha}\r\n\t *\r\n\t * @param {?number} value {\\alpha###} -> alpha (number), {\\alpha} -> null\r\n\t */\r\n\texport class Alpha {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this alpha tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A primary alpha tag {\\1a}\r\n\t *\r\n\t * @param {?number} value {\\1a###} -> alpha (number), {\\1a} -> null\r\n\t */\r\n\texport class PrimaryAlpha {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this primary alpha tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A secondary alpha tag {\\2a}\r\n\t *\r\n\t * @param {?number} value {\\2a###} -> alpha (number), {\\2a} -> null\r\n\t */\r\n\texport class SecondaryAlpha {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this secondary alpha tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An outline alpha tag {\\3a}\r\n\t *\r\n\t * @param {?number} value {\\3a###} -> alpha (number), {\\3a} -> null\r\n\t */\r\n\texport class OutlineAlpha {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this outline alpha tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A shadow alpha tag {\\4a}\r\n\t *\r\n\t * @param {?number} value {\\4a###} -> alpha (number), {\\4a} -> null\r\n\t */\r\n\texport class ShadowAlpha {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this shadow alpha tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An alignment tag {\\an} or {\\a}\r\n\t *\r\n\t * @param {number} value {\\an###} -> alignment (number)\r\n\t */\r\n\texport class Alignment {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this alignment tag.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A color karaoke tag {\\k}\r\n\t *\r\n\t * @param {number} duration {\\k###} -> duration (number)\r\n\t */\r\n\texport class ColorKaraoke {\r\n\t\tconstructor(private _duration: number) { }\r\n\r\n\t\t/**\r\n\t\t * The duration of this color karaoke tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget duration(): number {\r\n\t\t\treturn this._duration;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A sweeping color karaoke tag {\\K} or {\\kf}\r\n\t *\r\n\t * @param {number} duration {\\kf###} -> duration (number)\r\n\t */\r\n\texport class SweepingColorKaraoke {\r\n\t\tconstructor(private _duration: number) { }\r\n\r\n\t\t/**\r\n\t\t * The duration of this sweeping color karaoke tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget duration(): number {\r\n\t\t\treturn this._duration;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An outline karaoke tag {\\ko}\r\n\t *\r\n\t * @param {number} duration {\\ko###} -> duration (number)\r\n\t */\r\n\texport class OutlineKaraoke {\r\n\t\tconstructor(private _duration: number) { }\r\n\r\n\t\t/**\r\n\t\t * The duration of this outline karaoke tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget duration(): number {\r\n\t\t\treturn this._duration;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A wrapping style tag {\\q}\r\n\t *\r\n\t * @param {number} value {\\q###} -> style (number)\r\n\t */\r\n\texport class WrappingStyle {\r\n\t\tconstructor(private _value: libjass.WrappingStyle) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this wrapping style tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget value(): libjass.WrappingStyle {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A style reset tag {\\r}\r\n\t *\r\n\t * @param {?string} value {\\r###} -> style name (string), {\\r} -> null\r\n\t */\r\n\texport class Reset {\r\n\t\tconstructor(private _value: string) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this style reset tag.\r\n\t\t *\r\n\t\t * @type {?string}\r\n\t\t */\r\n\t\tget value(): string {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A position tag {\\pos}\r\n\t *\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\texport class Position {\r\n\t\tconstructor(private _x: number, private _y: number) { }\r\n\r\n\t\t/**\r\n\t\t * The x value of this position tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget x(): number {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The y value of this position tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget y(): number {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A movement tag {\\move}\r\n\t *\r\n\t * @param {number} x1\r\n\t * @param {number} y1\r\n\t * @param {number} x2\r\n\t * @param {number} y2\r\n\t * @param {number} t1\r\n\t * @param {number} t2\r\n\t */\r\n\texport class Move {\r\n\t\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _t1: number, private _t2: number) { }\r\n\r\n\t\t/**\r\n\t\t * The starting x value of this move tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget x1(): number {\r\n\t\t\treturn this._x1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The starting y value of this move tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget y1(): number {\r\n\t\t\treturn this._y1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The ending x value of this move tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget x2(): number {\r\n\t\t\treturn this._x2;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The ending y value of this move tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget y2(): number {\r\n\t\t\treturn this._y2;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The start time of this move tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget t1(): number {\r\n\t\t\treturn this._t1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The end time value of this move tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget t2(): number {\r\n\t\t\treturn this._t2;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A rotation origin tag {\\org}\r\n\t *\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t */\r\n\texport class RotationOrigin {\r\n\t\tconstructor(private _x: number, private _y: number) { }\r\n\r\n\t\t/**\r\n\t\t * The x value of this rotation origin tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget x(): number {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The y value of this rotation origin tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget y(): number {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A simple fade tag {\\fad}\r\n\t *\r\n\t * @param {number} start\r\n\t * @param {number} end\r\n\t */\r\n\texport class Fade {\r\n\t\tconstructor(private _start: number, private _end: number) { }\r\n\r\n\t\t/**\r\n\t\t * The start time of this fade tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget start(): number {\r\n\t\t\treturn this._start;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The end time of this fade tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget end(): number {\r\n\t\t\treturn this._end;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A complex fade tag {\\fade}\r\n\t *\r\n\t * @param {number} a1\r\n\t * @param {number} a2\r\n\t * @param {number} a3\r\n\t * @param {number} t1\r\n\t * @param {number} t2\r\n\t * @param {number} t3\r\n\t * @param {number} t4\r\n\t */\r\n\texport class ComplexFade {\r\n\t\tconstructor(\r\n\t\t\tprivate _a1: number, private _a2: number, private _a3: number,\r\n\t\t\tprivate _t1: number, private _t2: number, private _t3: number, private _t4: number\r\n\t\t) { }\r\n\r\n\t\t/**\r\n\t\t * The alpha value of this complex fade tag at time t2.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget a1(): number {\r\n\t\t\treturn this._a1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The alpha value of this complex fade tag at time t3.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget a2(): number {\r\n\t\t\treturn this._a2;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The alpha value of this complex fade tag at time t4.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget a3(): number {\r\n\t\t\treturn this._a3;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The starting time of this complex fade tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget t1(): number {\r\n\t\t\treturn this._t1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The first intermediate time of this complex fade tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget t2(): number {\r\n\t\t\treturn this._t2;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The second intermediate time of this complex fade tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget t3(): number {\r\n\t\t\treturn this._t3;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The ending time of this complex fade tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget t4(): number {\r\n\t\t\treturn this._t4;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A transform tag {\\t}\r\n\t *\r\n\t * @param {number} start\r\n\t * @param {number} end\r\n\t * @param {number} accel\r\n\t * @param {!Array.<!libjass.parts.Tag>} tags\r\n\t */\r\n\texport class Transform {\r\n\t\tconstructor(private _start: number, private _end: number, private _accel: number, private _tags: Part[]) { }\r\n\r\n\t\t/**\r\n\t\t * The starting time of this transform tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget start(): number {\r\n\t\t\treturn this._start;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The ending time of this transform tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget end(): number {\r\n\t\t\treturn this._end;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The acceleration of this transform tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget accel(): number {\r\n\t\t\treturn this._accel;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The tags animated by this transform tag.\r\n\t\t *\r\n\t\t * @type {!Array.<!libjass.parts.Tag>}\r\n\t\t */\r\n\t\tget tags(): Part[] {\r\n\t\t\treturn this._tags;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A rectangular clip tag {\\clip} or {\\iclip}\r\n\t *\r\n\t * @param {number} x1\r\n\t * @param {number} y1\r\n\t * @param {number} x2\r\n\t * @param {number} y2\r\n\t * @param {boolean} inside\r\n\t */\r\n\texport class RectangularClip {\r\n\t\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _inside: boolean) { }\r\n\r\n\t\t/**\r\n\t\t * The X coordinate of the starting position of this rectangular clip tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget x1(): number {\r\n\t\t\treturn this._x1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The Y coordinate of the starting position of this rectangular clip tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget y1(): number {\r\n\t\t\treturn this._y1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The X coordinate of the ending position of this rectangular clip tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget x2(): number {\r\n\t\t\treturn this._x2;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The Y coordinate of the ending position of this rectangular clip tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget y2(): number {\r\n\t\t\treturn this._y2;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Whether this rectangular clip tag clips the region it encloses or the region it excludes.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tget inside(): boolean {\r\n\t\t\treturn this._inside;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A vector clip tag {\\clip} or {\\iclip}\r\n\t *\r\n\t * @param {number} scale\r\n\t * @param {!Array.<!libjass.parts.drawing.Instruction>} instructions\r\n\t * @param {boolean} inside\r\n\t */\r\n\texport class VectorClip {\r\n\t\tconstructor(private _scale: number, private _instructions: drawing.Instruction[], private _inside: boolean) { }\r\n\r\n\t\t/**\r\n\t\t * The scale of this vector clip tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget scale(): number {\r\n\t\t\treturn this._scale;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The clip commands of this vector clip tag.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tget instructions(): drawing.Instruction[] {\r\n\t\t\treturn this._instructions;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Whether this vector clip tag clips the region it encloses or the region it excludes.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tget inside(): boolean {\r\n\t\t\treturn this._inside;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A drawing mode tag {\\p}\r\n\t *\r\n\t * @param {number} scale\r\n\t */\r\n\texport class DrawingMode {\r\n\t\tconstructor(private _scale: number) { }\r\n\r\n\t\t/**\r\n\t\t * The scale of this drawing mode tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget scale(): number {\r\n\t\t\treturn this._scale;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A drawing mode baseline offset tag {\\pbo}\r\n\t *\r\n\t * @param {number} value\r\n\t */\r\n\texport class DrawingBaselineOffset {\r\n\t\tconstructor(private _value: number) { }\r\n\r\n\t\t/**\r\n\t\t * The value of this drawing mode baseline offset tag.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget value(): number {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A pseudo-part representing text interpreted as drawing instructions\r\n\t *\r\n\t * @param {!Array.<!libjass.parts.drawing.Instruction>} instructions\r\n\t */\r\n\texport class DrawingInstructions {\r\n\t\tconstructor(private _instructions: drawing.Instruction[]) { }\r\n\r\n\t\t/**\r\n\t\t * The instructions contained in this drawing instructions part.\r\n\t\t *\r\n\t\t * @type {!Array.<!libjass.parts.drawing.Instruction>}\r\n\t\t */\r\n\t\tget instructions(): drawing.Instruction[] {\r\n\t\t\treturn this._instructions;\r\n\t\t}\r\n\t}\r\n\r\n\texport module drawing {\r\n\t\t/**\r\n\t\t * The base interface of the drawing instructions.\r\n\t\t */\r\n\t\texport interface Instruction { }\r\n\r\n\t\t/**\r\n\t\t * An instruction to move to a particular position.\r\n\t\t *\r\n\t\t * @param {number} x\r\n\t\t * @param {number} y\r\n\t\t */\r\n\t\texport class MoveInstruction implements Instruction {\r\n\t\t\tconstructor(private _x: number, private _y: number) { }\r\n\r\n\t\t\t/**\r\n\t\t\t * The X position of this move instruction.\r\n\t\t\t *\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tget x(): number {\r\n\t\t\t\treturn this._x;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * The Y position of this move instruction.\r\n\t\t\t *\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tget y(): number {\r\n\t\t\t\treturn this._y;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * An instruction to draw a line to a particular position.\r\n\t\t *\r\n\t\t * @param {number} x\r\n\t\t * @param {number} y\r\n\t\t */\r\n\t\texport class LineInstruction implements Instruction {\r\n\t\t\tconstructor(private _x: number, private _y: number) { }\r\n\r\n\t\t\t/**\r\n\t\t\t * The X position of this line instruction.\r\n\t\t\t *\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tget x(): number {\r\n\t\t\t\treturn this._x;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * The Y position of this line instruction.\r\n\t\t\t *\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tget y(): number {\r\n\t\t\t\treturn this._y;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * An instruction to draw a cubic bezier curve to a particular position, with two given control points.\r\n\t\t *\r\n\t\t * @param {number} x1\r\n\t\t * @param {number} y1\r\n\t\t * @param {number} x2\r\n\t\t * @param {number} y2\r\n\t\t * @param {number} x3\r\n\t\t * @param {number} y3\r\n\t\t */\r\n\t\texport class CubicBezierCurveInstruction implements Instruction {\r\n\t\t\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _x3: number, private _y3: number) { }\r\n\r\n\t\t\t/**\r\n\t\t\t * The X position of the first control point of this cubic bezier curve instruction.\r\n\t\t\t *\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tget x1(): number {\r\n\t\t\t\treturn this._x1;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * The Y position of the first control point of this cubic bezier curve instruction.\r\n\t\t\t *\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tget y1(): number {\r\n\t\t\t\treturn this._y1;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * The X position of the second control point of this cubic bezier curve instruction.\r\n\t\t\t *\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tget x2(): number {\r\n\t\t\t\treturn this._x2;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * The Y position of the second control point of this cubic bezier curve instruction.\r\n\t\t\t *\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tget y2(): number {\r\n\t\t\t\treturn this._y2;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * The ending X position of this cubic bezier curve instruction.\r\n\t\t\t *\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tget x3(): number {\r\n\t\t\t\treturn this._x3;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * The ending Y position of this cubic bezier curve instruction.\r\n\t\t\t *\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tget y3(): number {\r\n\t\t\t\treturn this._y3;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar addToString = function (ctor: Function, ctorName: string) {\r\n\t\tif (!ctor.prototype.hasOwnProperty(\"toString\")) {\r\n\t\t\tvar propertyNames = Object.getOwnPropertyNames(ctor.prototype).filter(property => property !== \"constructor\");\r\n\r\n\t\t\tctor.prototype.toString = function () {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tctorName + \" { \" +\r\n\t\t\t\t\tpropertyNames.map(name => name + \": \" + (<any>this)[name]).join(\", \") +\r\n\t\t\t\t\t((propertyNames.length > 0) ? \" \" : \"\") +\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tObject.keys(libjass.parts).forEach(key => {\r\n\t\tvar value = (<any>libjass.parts)[key];\r\n\t\tif (value instanceof Function) {\r\n\t\t\taddToString(value, key);\r\n\t\t\tlibjass.webworker._registerClassPrototype(value.prototype);\r\n\t\t}\r\n\t});\r\n\r\n\tObject.keys(libjass.parts.drawing).forEach(key => {\r\n\t\tvar value = (<any>libjass.parts.drawing)[key];\r\n\t\tif (value instanceof Function) {\r\n\t\t\taddToString(value, \"Drawing\" + key);\r\n\t\t\tlibjass.webworker._registerClassPrototype(value.prototype);\r\n\t\t}\r\n\t});\r\n}\r\n","/**\r\n * libjass\r\n *\r\n * https://github.com/Arnavion/libjass\r\n *\r\n * Copyright 2013 Arnav Singh\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n///<reference path=\"libjass.ts\" />\r\n\r\nmodule libjass.parser {\r\n\t/**\r\n\t * An interface for a stream.\r\n\t */\r\n\texport interface Stream {\r\n\t\t/**\r\n\t\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the stream is exhausted.\r\n\t\t */\r\n\t\tnextLine(): Promise<string>;\r\n\t}\r\n\r\n\t/**\r\n\t * A {@link libjass.parser.Stream} that reads from a string in memory.\r\n\t *\r\n\t * @param {string} str The string\r\n\t */\r\n\texport class StringStream implements Stream {\r\n\t\tprivate _readTill: number = 0;\r\n\r\n\t\tconstructor(private _str: string) { }\r\n\r\n\t\t/**\r\n\t\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the string has been completely read.\r\n\t\t */\r\n\t\tnextLine(): Promise<string> {\r\n\t\t\tvar result: Promise<string> = null;\r\n\r\n\t\t\tif (this._readTill < this._str.length) {\r\n\t\t\t\tvar nextNewLinePos = this._str.indexOf(\"\\n\", this._readTill);\r\n\t\t\t\tif (nextNewLinePos !== -1) {\r\n\t\t\t\t\tresult = Promise.resolve(this._str.substring(this._readTill, nextNewLinePos));\r\n\t\t\t\t\tthis._readTill = nextNewLinePos + 1;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tresult = Promise.resolve(this._str.substr(this._readTill));\r\n\t\t\t\t\tthis._readTill = this._str.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult = Promise.resolve<string>(null);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A {@link libjass.parser.Stream} that reads from an XMLHttpRequest object.\r\n\t *\r\n\t * @param {!XMLHttpRequest} xhr The XMLHttpRequest object\r\n\t */\r\n\texport class XhrStream implements Stream {\r\n\t\tprivate _readTill: number = 0;\r\n\t\tprivate _pendingDeferred: DeferredPromise<string> = null;\r\n\r\n\t\tconstructor(private _xhr: XMLHttpRequest) {\r\n\t\t\t_xhr.addEventListener(\"progress\", event=> this._onXhrProgress(event), false);\r\n\t\t\t_xhr.addEventListener(\"loadend\", event=> this._onXhrLoadEnd(event), false);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the stream is exhausted.\r\n\t\t */\r\n\t\tnextLine(): Promise<string> {\r\n\t\t\tif (this._pendingDeferred !== null) {\r\n\t\t\t\tthrow new Error(\"Streaming parser only supports one pending unfulfilled read at a time.\");\r\n\t\t\t}\r\n\r\n\t\t\tvar deferred = this._pendingDeferred = new DeferredPromise<string>();\r\n\r\n\t\t\tthis._reportNewLine();\r\n\r\n\t\t\treturn deferred.promise;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!ProgressEvent} event\r\n\t\t */\r\n\t\tprivate _onXhrProgress(event: ProgressEvent): void {\r\n\t\t\tif (this._pendingDeferred === null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._reportNewLine();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!ProgressEvent} event\r\n\t\t */\r\n\t\tprivate _onXhrLoadEnd(event: ProgressEvent): void {\r\n\t\t\tif (this._pendingDeferred === null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._reportNewLine();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t */\r\n\t\tprivate _reportNewLine(): void {\r\n\t\t\tvar response = this._xhr.responseText;\r\n\r\n\t\t\tvar nextNewLinePos = response.indexOf(\"\\n\", this._readTill);\r\n\t\t\tif (nextNewLinePos !== -1) {\r\n\t\t\t\tthis._pendingDeferred.resolve(response.substring(this._readTill, nextNewLinePos));\r\n\t\t\t\tthis._readTill = nextNewLinePos + 1;\r\n\t\t\t\tthis._pendingDeferred = null;\r\n\t\t\t}\r\n\r\n\t\t\telse if (this._xhr.readyState === XMLHttpRequest.DONE) {\r\n\t\t\t\t// No more data. This is the last line.\r\n\t\t\t\tif (this._readTill < response.length) {\r\n\t\t\t\t\tthis._pendingDeferred.resolve(response.substr(this._readTill));\r\n\t\t\t\t\tthis._readTill = response.length;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._pendingDeferred.resolve(null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._pendingDeferred = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A parser that parses an {@link libjass.ASS} object from a {@link libjass.parser.Stream}.\r\n\t *\r\n\t * @param {!libjass.parser.Stream} stream The {@link libjass.parser.Stream} to parse\r\n\t */\r\n\texport class StreamParser {\r\n\t\tprivate _ass: ASS = new ASS();\r\n\t\tprivate _minimalDeferred: DeferredPromise<ASS> = new DeferredPromise<ASS>();\r\n\t\tprivate _deferred: DeferredPromise<ASS> = new DeferredPromise<ASS>();\r\n\r\n\t\tprivate _currentSectionName: string = null;\r\n\r\n\t\tconstructor(private _stream: Stream) {\r\n\t\t\tthis._stream.nextLine().then(line => this._onNextLine(line));\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {!Promise.<!libjass.ASS>} A promise that will be resolved when the script properties of the ASS script have been parsed from the stream. Styles and events have not necessarily been\r\n\t\t * parsed at the point this promise becomes resolved.\r\n\t\t */\r\n\t\tget minimalASS(): Promise<ASS> {\r\n\t\t\treturn this._minimalDeferred.promise;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {!Promise.<!libjass.ASS>} A promise that will be resolved when the entire stream has been parsed.\r\n\t\t */\r\n\t\tget ass(): Promise<ASS> {\r\n\t\t\treturn this._deferred.promise;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {string} line\r\n\t\t */\r\n\t\tprivate _onNextLine(line: string): void {\r\n\t\t\tif (line === null) {\r\n\t\t\t\tthis._minimalDeferred.resolve(this._ass);\r\n\t\t\t\tthis._deferred.resolve(this._ass);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (line[line.length - 1] === \"\\r\") {\r\n\t\t\t\tline = line.substr(0, line.length - 1);\r\n\t\t\t}\r\n\r\n\t\t\tif (line === \"\" || line[0] === \";\") {\r\n\t\t\t\t// Ignore empty lines and comments\r\n\t\t\t}\r\n\r\n\t\t\telse if (line[0] === \"[\" && line[line.length - 1] === \"]\") {\r\n\t\t\t\t// Start of new section\r\n\r\n\t\t\t\tif (this._currentSectionName === \"Script Info\") {\r\n\t\t\t\t\t// Exiting script info section\r\n\t\t\t\t\tthis._minimalDeferred.resolve(this._ass);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._currentSectionName = line.substring(1, line.length - 1);\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tswitch (this._currentSectionName) {\r\n\t\t\t\t\tcase \"Script Info\":\r\n\t\t\t\t\t\tvar property = parseLineIntoProperty(line);\r\n\t\t\t\t\t\tswitch (property.name) {\r\n\t\t\t\t\t\t\tcase \"PlayResX\":\r\n\t\t\t\t\t\t\t\tthis._ass.properties.resolutionX = parseInt(property.value);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"PlayResY\":\r\n\t\t\t\t\t\t\t\tthis._ass.properties.resolutionY = parseInt(property.value);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"WrapStyle\":\r\n\t\t\t\t\t\t\t\tthis._ass.properties.wrappingStyle = parseInt(property.value);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"ScaledBorderAndShadow\":\r\n\t\t\t\t\t\t\t\tthis._ass.properties.scaleBorderAndShadow = (property.value === \"yes\");\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"V4+ Styles\":\r\n\t\t\t\t\t\tif (this._ass.stylesFormatSpecifier === null) {\r\n\t\t\t\t\t\t\tvar property = parseLineIntoProperty(line);\r\n\t\t\t\t\t\t\tif (property !== null && property.name === \"Format\") {\r\n\t\t\t\t\t\t\t\tthis._ass.stylesFormatSpecifier = property.value.split(\",\").map(str => str.trim());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t// Ignore any non-format lines\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._ass.addStyle(line);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"Events\":\r\n\t\t\t\t\t\tif (this._ass.dialoguesFormatSpecifier === null) {\r\n\t\t\t\t\t\t\tvar property = parseLineIntoProperty(line);\r\n\t\t\t\t\t\t\tif (property !== null && property.name === \"Format\") {\r\n\t\t\t\t\t\t\t\tthis._ass.dialoguesFormatSpecifier = property.value.split(\",\").map(str => str.trim());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t// Ignore any non-format lines\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._ass.addEvent(line);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Ignore other sections\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._stream.nextLine().then(line => this._onNextLine(line));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A parser that parses an {@link libjass.ASS} object from a {@link libjass.parser.Stream} of an SRT script.\r\n\t *\r\n\t * @param {!libjass.parser.Stream} stream The {@link libjass.parser.Stream} to parse\r\n\t */\r\n\texport class SrtStreamParser {\r\n\t\tprivate _ass: ASS = new ASS();\r\n\t\tprivate _deferred: DeferredPromise<ASS> = new DeferredPromise<ASS>();\r\n\r\n\t\tprivate _currentDialogueNumber: string = null;\r\n\t\tprivate _currentDialogueStart: string = null;\r\n\t\tprivate _currentDialogueEnd: string = null;\r\n\t\tprivate _currentDialogueText: string = null;\r\n\r\n\t\tconstructor(private _stream: Stream) {\r\n\t\t\tthis._stream.nextLine().then(line => this._onNextLine(line));\r\n\r\n\t\t\tthis._ass.properties.resolutionX = 1280;\r\n\t\t\tthis._ass.properties.resolutionY = 720;\r\n\t\t\tthis._ass.properties.wrappingStyle = 1;\r\n\t\t\tthis._ass.properties.scaleBorderAndShadow = true;\r\n\r\n\t\t\tvar newStyle = new Style(new Map([[\"Name\", \"Default\"]]));\r\n\t\t\tthis._ass.styles.set(newStyle.name, newStyle);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {!Promise.<!libjass.ASS>} A promise that will be resolved when the entire stream has been parsed.\r\n\t\t */\r\n\t\tget ass(): Promise<ASS> {\r\n\t\t\treturn this._deferred.promise;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {string} line\r\n\t\t */\r\n\t\tprivate _onNextLine(line: string): void {\r\n\t\t\tif (line === null) {\r\n\t\t\t\tif (this._currentDialogueNumber !== null && this._currentDialogueStart !== null && this._currentDialogueEnd !== null && this._currentDialogueText !== null) {\r\n\t\t\t\t\tthis._ass.dialogues.push(new Dialogue(new Map([\r\n\t\t\t\t\t\t[\"Style\", \"Default\"],\r\n\t\t\t\t\t\t[\"Start\", this._currentDialogueStart],\r\n\t\t\t\t\t\t[\"End\", this._currentDialogueEnd],\r\n\t\t\t\t\t\t[\"Text\", this._currentDialogueText],\r\n\t\t\t\t\t]), this._ass));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._deferred.resolve(this._ass);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (line[line.length - 1] === \"\\r\") {\r\n\t\t\t\tline = line.substr(0, line.length - 1);\r\n\t\t\t}\r\n\r\n\t\t\tif (line === \"\") {\r\n\t\t\t\tif (this._currentDialogueNumber !== null && this._currentDialogueStart !== null && this._currentDialogueEnd !== null && this._currentDialogueText !== null) {\r\n\t\t\t\t\tthis._ass.dialogues.push(new Dialogue(new Map([\r\n\t\t\t\t\t\t[\"Style\", \"Default\"],\r\n\t\t\t\t\t\t[\"Start\", this._currentDialogueStart],\r\n\t\t\t\t\t\t[\"End\", this._currentDialogueEnd],\r\n\t\t\t\t\t\t[\"Text\", this._currentDialogueText],\r\n\t\t\t\t\t]), this._ass));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._currentDialogueNumber = this._currentDialogueStart = this._currentDialogueEnd = this._currentDialogueText = null;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._currentDialogueNumber === null) {\r\n\t\t\t\t\tif (/^\\d+$/.test(line)) {\r\n\t\t\t\t\t\tthis._currentDialogueNumber = line;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._currentDialogueStart === null && this._currentDialogueEnd === null) {\r\n\t\t\t\t\tvar match = /^(\\d\\d:\\d\\d:\\d\\d,\\d\\d\\d) --> (\\d\\d:\\d\\d:\\d\\d,\\d\\d\\d)/.exec(line);\r\n\t\t\t\t\tif (match !== null) {\r\n\t\t\t\t\t\tthis._currentDialogueStart = match[1].replace(\",\", \".\");\r\n\t\t\t\t\t\tthis._currentDialogueEnd = match[2].replace(\",\", \".\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tline = line\r\n\t\t\t\t\t\t.replace(/<b>/g, \"{\\\\b1}\").replace(/\\{b\\}/g, \"{\\\\b1}\")\r\n\t\t\t\t\t\t.replace(/<\\/b>/g, \"{\\\\b0}\").replace(/\\{\\/b\\}/g, \"{\\\\b0}\")\r\n\t\t\t\t\t\t.replace(/<i>/g, \"{\\\\i1}\").replace(/\\{i\\}/g, \"{\\\\i1}\")\r\n\t\t\t\t\t\t.replace(/<\\/i>/g, \"{\\\\i0}\").replace(/\\{\\/i\\}/g, \"{\\\\i0}\")\r\n\t\t\t\t\t\t.replace(/<u>/g, \"{\\\\u1}\").replace(/\\{u\\}/g, \"{\\\\u1}\")\r\n\t\t\t\t\t\t.replace(/<\\/u>/g, \"{\\\\u0}\").replace(/\\{\\/u\\}/g, \"{\\\\u0}\")\r\n\t\t\t\t\t\t.replace(\r\n\t\t\t\t\t\t\t/<font color=\"#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})\">/g,\r\n\t\t\t\t\t\t\t(/* ujs:unreferenced */ substring: string, red: string, green: string, blue: string) => \"{\\c&H\" + blue + green + red + \"&}\"\r\n\t\t\t\t\t\t).replace(/<\\/font>/g, \"{\\\\c}\");\r\n\r\n\t\t\t\t\tif (this._currentDialogueText !== null) {\r\n\t\t\t\t\t\tthis._currentDialogueText += \"\\\\N\" + line;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._currentDialogueText = line;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._stream.nextLine().then(line => this._onNextLine(line));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a line into a {@link libjass.Property}.\r\n\t *\r\n\t * @param {string} line\r\n\t * @return {!libjass.Property}\r\n\t */\r\n\texport function parseLineIntoProperty(line: string): Property {\r\n\t\tvar colonPos = line.indexOf(\":\");\r\n\t\tif (colonPos === -1) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar name = line.substr(0, colonPos);\r\n\t\tvar value = line.substr(colonPos + 1).replace(/^\\s+/, \"\");\r\n\r\n\t\treturn { name: name, value: value };\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a line into a {@link libjass.TypedTemplate} according to the given format specifier.\r\n\t *\r\n\t * @param {string} line\r\n\t * @param {!Array.<string>} formatSpecifier\r\n\t * @return {!libjass.TypedTemplate}\r\n\t */\r\n\texport function parseLineIntoTypedTemplate(line: string, formatSpecifier: string[]): TypedTemplate {\r\n\t\tvar property = parseLineIntoProperty(line);\r\n\t\tif (property === null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar value = property.value.split(\",\");\r\n\r\n\t\tif (value.length > formatSpecifier.length) {\r\n\t\t\tvalue[formatSpecifier.length - 1] = value.slice(formatSpecifier.length - 1).join(\",\");\r\n\t\t}\r\n\r\n\t\tvar template = new Map<string, string>();\r\n\t\tformatSpecifier.forEach((formatKey, index) => {\r\n\t\t\ttemplate.set(formatKey, value[index]);\r\n\t\t});\r\n\r\n\t\treturn { type: property.name, template: template };\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a given string with the specified rule.\r\n\t *\r\n\t * @param {string} input The string to be parsed.\r\n\t * @param {string} rule The rule to parse the string with\r\n\t * @return {*} The value returned depends on the rule used.\r\n\t */\r\n\texport function parse(input: string, rule: string): any {\r\n\t\tvar run = new ParserRun(input, rule);\r\n\r\n\t\tif (run.result === null || run.result.end !== input.length) {\r\n\t\t\tif (libjass.debugMode) {\r\n\t\t\t\tconsole.error(\"Parse failed. %s %s %o\", rule, input, run.result);\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(\"Parse failed.\");\r\n\t\t}\r\n\r\n\t\treturn run.result.value;\r\n\t}\r\n\r\n\t/**\r\n\t * This class represents a single run of the parser.\r\n\t *\r\n\t * @param {string} input\r\n\t * @param {string} rule\r\n\t */\r\n\tclass ParserRun {\r\n\t\tprivate _parseTree: ParseNode;\r\n\t\tprivate _result: ParseNode;\r\n\r\n\t\tconstructor(private _input: string, rule: string) {\r\n\t\t\tthis._parseTree = new ParseNode(null);\r\n\r\n\t\t\tthis._result = rules.get(rule).call(this, this._parseTree);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tget result(): ParseNode {\r\n\t\t\treturn this._result;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_dialogueParts(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tcurrent.value = [];\r\n\r\n\t\t\twhile (this._haveMore()) {\r\n\t\t\t\tvar enclosedTagsNode = this.parse_enclosedTags(current);\r\n\r\n\t\t\t\tif (enclosedTagsNode !== null) {\r\n\t\t\t\t\tcurrent.value.push.apply(current.value, enclosedTagsNode.value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar whiteSpaceOrTextNode = this.parse_newline(current) || this.parse_hardspace(current) || this.parse_text(current);\r\n\r\n\t\t\t\t\tif (whiteSpaceOrTextNode === null) {\r\n\t\t\t\t\t\tparent.pop();\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (whiteSpaceOrTextNode.value instanceof parts.Text && current.value[current.value.length - 1] instanceof parts.Text) {\r\n\t\t\t\t\t\t// Merge consecutive text parts into one part\r\n\t\t\t\t\t\tvar previousTextPart = <parts.Text>current.value[current.value.length - 1];\r\n\t\t\t\t\t\tcurrent.value[current.value.length - 1] = new parts.Text(previousTextPart.value + (<parts.Text>whiteSpaceOrTextNode.value).value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcurrent.value.push(whiteSpaceOrTextNode.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar inDrawingMode = false;\r\n\r\n\t\t\tcurrent.value.forEach((part: parts.Part, i: number) => {\r\n\t\t\t\tif (part instanceof parts.DrawingMode) {\r\n\t\t\t\t\tinDrawingMode = (<parts.DrawingMode>part).scale !== 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Text && inDrawingMode) {\r\n\t\t\t\t\tcurrent.value[i] = new parts.DrawingInstructions(<parts.drawing.Instruction[]>parser.parse((<parts.Text>part).value, \"drawingInstructions\"));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_enclosedTags(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tcurrent.value = [];\r\n\r\n\t\t\tif (this.read(current, \"{\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \"}\"; next = this._peek()) {\r\n\t\t\t\tvar childNode: ParseNode = null;\r\n\r\n\t\t\t\tif (this.read(current, \"\\\\\") !== null) {\r\n\t\t\t\t\tchildNode =\r\n\t\t\t\t\t\tthis.parse_tag_alpha(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_iclip(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_xbord(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_ybord(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_xshad(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_yshad(current) ||\r\n\r\n\t\t\t\t\t\tthis.parse_tag_blur(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_bord(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_clip(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fade(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fscx(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fscy(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_move(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_shad(current) ||\r\n\r\n\t\t\t\t\t\tthis.parse_tag_fad(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fax(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fay(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_frx(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fry(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_frz(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fsp(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fsplus(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fsminus(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_org(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_pbo(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_pos(current) ||\r\n\r\n\t\t\t\t\t\tthis.parse_tag_an(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_be(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fn(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fr(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fs(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_kf(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_ko(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_1a(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_1c(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_2a(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_2c(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_3a(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_3c(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_4a(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_4c(current) ||\r\n\r\n\t\t\t\t\t\tthis.parse_tag_a(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_b(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_c(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_i(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_k(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_K(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_p(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_q(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_r(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_s(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_t(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_u(current);\r\n\r\n\t\t\t\t\tif (childNode === null) {\r\n\t\t\t\t\t\tcurrent.pop(); // Unread backslash\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (childNode === null) {\r\n\t\t\t\t\tchildNode = this.parse_comment(current);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (childNode !== null) {\r\n\t\t\t\t\tif (childNode.value instanceof parts.Comment && current.value[current.value.length - 1] instanceof parts.Comment) {\r\n\t\t\t\t\t\t// Merge consecutive comment parts into one part\r\n\t\t\t\t\t\tcurrent.value[current.value.length - 1] =\r\n\t\t\t\t\t\t\tnew parts.Comment(\r\n\t\t\t\t\t\t\t\t(<parts.Comment>current.value[current.value.length - 1]).value +\r\n\t\t\t\t\t\t\t\t(<parts.Comment>childNode.value).value\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcurrent.value.push(childNode.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \"}\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_newline(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"\\\\N\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.NewLine();\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_hardspace(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"\\\\h\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.Text(\"\\u00A0\");\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_text(parent: ParseNode): ParseNode {\r\n\t\t\tvar value = this._peek();\r\n\r\n\t\t\tvar current = new ParseNode(parent);\r\n\t\t\tvar valueNode = new ParseNode(current, value);\r\n\r\n\t\t\tcurrent.value = new parts.Text(valueNode.value);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_comment(parent: ParseNode): ParseNode {\r\n\t\t\tvar value = this._peek();\r\n\r\n\t\t\tvar current = new ParseNode(parent);\r\n\t\t\tvar valueNode = new ParseNode(current, value);\r\n\r\n\t\t\tcurrent.value = new parts.Comment(valueNode.value);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_a(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"a\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar next = this._peek();\r\n\r\n\t\t\tswitch (next) {\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\tvar next2 = this._peek(2);\r\n\r\n\t\t\t\t\tswitch (next2) {\r\n\t\t\t\t\t\tcase \"10\":\r\n\t\t\t\t\t\tcase \"11\":\r\n\t\t\t\t\t\t\tnext = next2;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\tcase \"3\":\r\n\t\t\t\tcase \"5\":\r\n\t\t\t\tcase \"6\":\r\n\t\t\t\tcase \"7\":\r\n\t\t\t\tcase \"9\":\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode = new ParseNode(current, next);\r\n\r\n\t\t\tvar value: number = null;\r\n\t\t\tswitch (valueNode.value) {\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\tvalue = 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\tvalue = 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"3\":\r\n\t\t\t\t\tvalue = 3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"5\":\r\n\t\t\t\t\tvalue = 7;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"6\":\r\n\t\t\t\t\tvalue = 8;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"7\":\r\n\t\t\t\t\tvalue = 9;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"9\":\r\n\t\t\t\t\tvalue = 4;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"10\":\r\n\t\t\t\t\tvalue = 5;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"11\":\r\n\t\t\t\t\tvalue = 6;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.Alignment(value);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_alpha(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_an(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"an\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar next = this._peek();\r\n\r\n\t\t\tif (next < \"1\" || next > \"9\") {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode = new ParseNode(current, next);\r\n\r\n\t\t\tcurrent.value = new parts.Alignment(parseInt(valueNode.value));\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_b(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"b\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode: ParseNode = null;\r\n\r\n\t\t\tvar next = this._peek();\r\n\r\n\t\t\tif (next >= \"1\" && next <= \"9\") {\r\n\t\t\t\tnext = this._peek(3);\r\n\t\t\t\tif (next.substr(1) === \"00\") {\r\n\t\t\t\t\tvalueNode = new ParseNode(current, next);\r\n\t\t\t\t\tvalueNode.value = parseInt(valueNode.value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (valueNode === null) {\r\n\t\t\t\tvalueNode = this.parse_enableDisable(current);\r\n\t\t\t}\r\n\r\n\t\t\tif (valueNode !== null) {\r\n\t\t\t\tcurrent.value = new parts.Bold(valueNode.value);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcurrent.value = new parts.Bold(null);\r\n\t\t\t}\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_be(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_blur(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_bord(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_c(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_clip(parent: ParseNode): ParseNode {\r\n\t\t\treturn this._parse_tag_clip_or_iclip(\"clip\", parent);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fad(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"fad\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \"(\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar startNode = this.parse_decimal(current);\r\n\t\t\tif (startNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar endNode = this.parse_decimal(current);\r\n\t\t\tif (endNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \")\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.Fade(startNode.value / 1000, endNode.value / 1000);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fade(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"fade\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \"(\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar a1Node = this.parse_decimal(current);\r\n\t\t\tif (a1Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar a2Node = this.parse_decimal(current);\r\n\t\t\tif (a2Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar a3Node = this.parse_decimal(current);\r\n\t\t\tif (a3Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar t1Node = this.parse_decimal(current);\r\n\t\t\tif (t1Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar t2Node = this.parse_decimal(current);\r\n\t\t\tif (t2Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar t3Node = this.parse_decimal(current);\r\n\t\t\tif (t3Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar t4Node = this.parse_decimal(current);\r\n\t\t\tif (t4Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \")\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value =\r\n\t\t\t\tnew parts.ComplexFade(\r\n\t\t\t\t\t1 - a1Node.value / 255, 1 - a2Node.value / 255, 1 - a3Node.value / 255,\r\n\t\t\t\t\tt1Node.value / 1000, t2Node.value / 1000, t3Node.value / 1000, t4Node.value / 1000\r\n\t\t\t\t);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fax(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fay(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fn(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"fn\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode = new ParseNode(current, \"\");\r\n\r\n\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \"\\\\\" && next !== \"}\"; next = this._peek()) {\r\n\t\t\t\tvalueNode.value += next;\r\n\t\t\t}\r\n\r\n\t\t\tif (valueNode.value.length > 0) {\r\n\t\t\t\tcurrent.value = new parts.FontName(valueNode.value);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcurrent.value = new parts.FontName(null);\r\n\t\t\t}\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fr(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_frx(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fry(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_frz(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fs(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fsplus(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"fs+\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode = this.parse_decimal(current);\r\n\r\n\t\t\tif (valueNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.FontSizePlus(valueNode.value);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fsminus(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"fs-\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode = this.parse_decimal(current);\r\n\r\n\t\t\tif (valueNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.FontSizeMinus(valueNode.value);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fscx(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"fscx\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode = this.parse_decimal(current);\r\n\r\n\t\t\tif (valueNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.FontScaleX(valueNode.value / 100);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fscy(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"fscy\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode = this.parse_decimal(current);\r\n\r\n\t\t\tif (valueNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.FontScaleY(valueNode.value / 100);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_fsp(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_i(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_iclip(parent: ParseNode): ParseNode {\r\n\t\t\treturn this._parse_tag_clip_or_iclip(\"iclip\", parent);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_k(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_K(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_kf(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_ko(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_move(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"move\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \"(\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar x1Node = this.parse_decimal(current);\r\n\t\t\tif (x1Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar y1Node = this.parse_decimal(current);\r\n\t\t\tif (y1Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar x2Node = this.parse_decimal(current);\r\n\t\t\tif (x2Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar y2Node = this.parse_decimal(current);\r\n\t\t\tif (y2Node === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar t1Node: ParseNode = null;\r\n\t\t\tvar t2Node: ParseNode = null;\r\n\r\n\t\t\tif (this.read(current, \",\") !== null) {\r\n\t\t\t\tt1Node = this.parse_decimal(current);\r\n\t\t\t\tif (t1Node === null) {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tt2Node = this.parse_decimal(current);\r\n\t\t\t\tif (t2Node === null) {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \")\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.Move(\r\n\t\t\t\tx1Node.value, y1Node.value, x2Node.value, y2Node.value,\r\n\t\t\t\t(t1Node !== null) ? (t1Node.value / 1000) : null, (t2Node !== null) ? (t2Node.value / 1000) : null\r\n\t\t\t);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_org(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"org\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \"(\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar xNode = this.parse_decimal(current);\r\n\t\t\tif (xNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar yNode = this.parse_decimal(current);\r\n\t\t\tif (yNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \")\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.RotationOrigin(xNode.value, yNode.value);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_p(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_pbo(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_pos(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"pos\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \"(\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar xNode = this.parse_decimal(current);\r\n\t\t\tif (xNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar yNode = this.parse_decimal(current);\r\n\t\t\tif (yNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \")\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.Position(xNode.value, yNode.value);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_q(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"q\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar next = this._peek();\r\n\r\n\t\t\tif (next < \"0\" || next > \"3\") {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode = new ParseNode(current, next);\r\n\r\n\t\t\tcurrent.value = new parts.WrappingStyle(parseInt(valueNode.value));\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_r(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"r\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode = new ParseNode(current, \"\");\r\n\r\n\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \"\\\\\" && next !== \"}\"; next = this._peek()) {\r\n\t\t\t\tvalueNode.value += next;\r\n\t\t\t}\r\n\r\n\t\t\tif (valueNode.value.length > 0) {\r\n\t\t\t\tcurrent.value = new parts.Reset(valueNode.value);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcurrent.value = new parts.Reset(null);\r\n\t\t\t}\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_s(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_shad(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_t(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, \"t\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \"(\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar startNode: ParseNode = null;\r\n\t\t\tvar endNode: ParseNode = null;\r\n\t\t\tvar accelNode: ParseNode = null;\r\n\r\n\t\t\tvar firstNode = this.parse_decimal(current);\r\n\t\t\tif (firstNode !== null) {\r\n\t\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar secondNode = this.parse_decimal(current);\r\n\t\t\t\tif (secondNode !== null) {\r\n\t\t\t\t\tstartNode = firstNode;\r\n\t\t\t\t\tendNode = secondNode;\r\n\r\n\t\t\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\t\t\tparent.pop();\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar thirdNode = this.parse_decimal(current);\r\n\t\t\t\t\tif (thirdNode !== null) {\r\n\t\t\t\t\t\taccelNode = thirdNode;\r\n\r\n\t\t\t\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\t\t\t\tparent.pop();\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\taccelNode = firstNode;\r\n\r\n\t\t\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\t\t\tparent.pop();\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar transformTags: parts.Part[] = [];\r\n\r\n\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \")\" && next !== \"}\"; next = this._peek()) {\r\n\t\t\t\tvar childNode: ParseNode = null;\r\n\r\n\t\t\t\tif (this.read(current, \"\\\\\") !== null) {\r\n\t\t\t\t\tchildNode =\r\n\t\t\t\t\t\tthis.parse_tag_alpha(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_iclip(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_xbord(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_ybord(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_xshad(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_yshad(current) ||\r\n\r\n\t\t\t\t\t\tthis.parse_tag_blur(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_bord(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_clip(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fscx(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fscy(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_shad(current) ||\r\n\r\n\t\t\t\t\t\tthis.parse_tag_fax(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fay(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_frx(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fry(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_frz(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fsp(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fsplus(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fsminus(current) ||\r\n\r\n\t\t\t\t\t\tthis.parse_tag_be(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fr(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_fs(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_1a(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_1c(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_2a(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_2c(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_3a(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_3c(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_4a(current) ||\r\n\t\t\t\t\t\tthis.parse_tag_4c(current) ||\r\n\r\n\t\t\t\t\t\tthis.parse_tag_c(current);\r\n\r\n\t\t\t\t\tif (childNode === null) {\r\n\t\t\t\t\t\tcurrent.pop(); // Unread backslash\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (childNode === null) {\r\n\t\t\t\t\tchildNode = this.parse_comment(current);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (childNode !== null) {\r\n\t\t\t\t\tif (childNode.value instanceof parts.Comment && transformTags[transformTags.length - 1] instanceof parts.Comment) {\r\n\t\t\t\t\t\t// Merge consecutive comment parts into one part\r\n\t\t\t\t\t\ttransformTags[transformTags.length - 1] =\r\n\t\t\t\t\t\t\tnew parts.Comment(\r\n\t\t\t\t\t\t\t\t(<parts.Comment>transformTags[transformTags.length - 1]).value +\r\n\t\t\t\t\t\t\t\t(<parts.Comment>childNode.value).value\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttransformTags.push(childNode.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.read(current, \")\");\r\n\r\n\t\t\tcurrent.value =\r\n\t\t\t\tnew parts.Transform(\r\n\t\t\t\t\t(startNode !== null) ? (startNode.value / 1000) : null,\r\n\t\t\t\t\t(endNode !== null) ? (endNode.value / 1000) : null,\r\n\t\t\t\t\t(accelNode !== null) ? (accelNode.value / 1000) : null,\r\n\t\t\t\t\ttransformTags\r\n\t\t\t\t);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_u(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_xbord(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_xshad(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_ybord(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_yshad(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_1a(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_1c(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_2a(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_2c(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_3a(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_3c(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_4a(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_tag_4c(parent: ParseNode): ParseNode {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_drawingInstructions(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tvar lastType: string = null;\r\n\r\n\t\t\tcurrent.value = [];\r\n\r\n\t\t\twhile (this._haveMore()) {\r\n\t\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\t\t\t\tif (!this._haveMore()) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar currentType: string = null;\r\n\r\n\t\t\t\tvar typePart = this.parse_text(current);\r\n\t\t\t\tif (typePart === null) {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentType = typePart.value.value;\r\n\t\t\t\tswitch (currentType) {\r\n\t\t\t\t\tcase \"m\":\r\n\t\t\t\t\tcase \"l\":\r\n\t\t\t\t\tcase \"b\":\r\n\t\t\t\t\t\tlastType = currentType;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif (lastType === null) {\r\n\t\t\t\t\t\t\tparent.pop();\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrentType = lastType;\r\n\t\t\t\t\t\tcurrent.pop();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (currentType) {\r\n\t\t\t\t\tcase \"m\":\r\n\t\t\t\t\t\tvar movePart = this.parse_drawingInstructionMove(current);\r\n\t\t\t\t\t\tif (movePart === null) {\r\n\t\t\t\t\t\t\tparent.pop();\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrent.value.push(movePart.value);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"l\":\r\n\t\t\t\t\t\tvar linePart = this.parse_drawingInstructionLine(current);\r\n\t\t\t\t\t\tif (linePart === null) {\r\n\t\t\t\t\t\t\tparent.pop();\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrent.value.push(linePart.value);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"b\":\r\n\t\t\t\t\t\tvar cubicBezierCurvePart = this.parse_drawingInstructionCubicBezierCurve(current);\r\n\t\t\t\t\t\tif (cubicBezierCurvePart === null) {\r\n\t\t\t\t\t\t\tparent.pop();\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrent.value.push(cubicBezierCurvePart.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_drawingInstructionMove(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\tvar xPart = this.parse_decimal(current);\r\n\t\t\tif (xPart === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\tvar yPart = this.parse_decimal(current);\r\n\t\t\tif (yPart === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.drawing.MoveInstruction(xPart.value, yPart.value);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_drawingInstructionLine(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\tvar xPart = this.parse_decimal(current);\r\n\t\t\tif (xPart === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\tvar yPart = this.parse_decimal(current);\r\n\t\t\tif (yPart === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.drawing.LineInstruction(xPart.value, yPart.value);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_drawingInstructionCubicBezierCurve(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\tvar x1Part = this.parse_decimal(current);\r\n\t\t\tif (x1Part === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\tvar y1Part = this.parse_decimal(current);\r\n\t\t\tif (y1Part === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\tvar x2Part = this.parse_decimal(current);\r\n\t\t\tif (x2Part === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\tvar y2Part = this.parse_decimal(current);\r\n\t\t\tif (y2Part === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\tvar x3Part = this.parse_decimal(current);\r\n\t\t\tif (x3Part === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\twhile (this.read(current, \" \") !== null) { }\r\n\r\n\t\t\tvar y3Part = this.parse_decimal(current);\r\n\t\t\tif (y3Part === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = new parts.drawing.CubicBezierCurveInstruction(x1Part.value, y1Part.value, x2Part.value, y2Part.value, x3Part.value, y3Part.value);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_decimalInt32(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tvar isNegative = this.read(current, \"-\") !== null;\r\n\r\n\t\t\tvar numberNode = new ParseNode(current, \"\");\r\n\t\t\tfor (var next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\r\n\t\t\t\tnumberNode.value += next;\r\n\t\t\t}\r\n\r\n\t\t\tif (numberNode.value.length === 0) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar value = parseInt(numberNode.value);\r\n\t\t\tif (value >= 0xFFFFFFFF) {\r\n\t\t\t\tvalue = 0xFFFFFFFF;\r\n\t\t\t}\r\n\t\t\telse if (isNegative) {\r\n\t\t\t\tvalue = -value;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = value;\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_hexInt32(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tvar isNegative = this.read(current, \"-\") !== null;\r\n\r\n\t\t\tvar numberNode = new ParseNode(current, \"\");\r\n\t\t\tfor (\r\n\t\t\t\tvar next = this._peek();\r\n\t\t\t\tthis._haveMore() && (\r\n\t\t\t\t\t(next >= \"0\" && next <= \"9\") ||\r\n\t\t\t\t\t(next >= \"a\" && next <= \"f\") ||\r\n\t\t\t\t\t(next >= \"A\" && next <= \"F\")\r\n\t\t\t\t);\r\n\t\t\t\tnext = this._peek()) {\r\n\r\n\t\t\t\tnumberNode.value += next;\r\n\t\t\t}\r\n\r\n\t\t\tif (numberNode.value.length === 0) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar value = parseInt(numberNode.value, 16);\r\n\t\t\tif (value >= 0xFFFFFFFF) {\r\n\t\t\t\tvalue = 0xFFFFFFFF;\r\n\t\t\t}\r\n\t\t\telse if (isNegative) {\r\n\t\t\t\tvalue = -value;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = value;\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_decimalOrHexInt32(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tvar valueNode: ParseNode = null;\r\n\t\t\tif (this.read(current, \"&H\") !== null || this.read(current, \"&h\") !== null) {\r\n\t\t\t\tvalueNode = this.parse_hexInt32(current);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalueNode = this.parse_decimalInt32(current);\r\n\t\t\t}\r\n\r\n\t\t\tif (valueNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = valueNode.value;\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_decimal(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tvar negative = (this.read(current, \"-\") !== null);\r\n\r\n\t\t\tvar numericalPart = this.parse_unsignedDecimal(current);\r\n\r\n\t\t\tif (numericalPart === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = numericalPart.value;\r\n\r\n\t\t\tif (negative) {\r\n\t\t\t\tcurrent.value = -current.value;\r\n\t\t\t}\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_unsignedDecimal(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tvar characteristicNode = new ParseNode(current, \"\");\r\n\r\n\t\t\tvar mantissaNode: ParseNode = null;\r\n\r\n\t\t\tvar next: string;\r\n\t\t\tfor (next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\r\n\t\t\t\tcharacteristicNode.value += next;\r\n\t\t\t}\r\n\r\n\t\t\tif (characteristicNode.value.length === 0) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \".\") !== null) {\r\n\t\t\t\tmantissaNode = new ParseNode(current, \"\");\r\n\r\n\t\t\t\tfor (next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\r\n\t\t\t\t\tmantissaNode.value += next;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mantissaNode.value.length === 0) {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.value = parseFloat(characteristicNode.value + ((mantissaNode !== null) ? (\".\" + mantissaNode.value) : \"\"));\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_enableDisable(parent: ParseNode): ParseNode {\r\n\t\t\tvar next = this._peek();\r\n\r\n\t\t\tif (next === \"0\" || next === \"1\") {\r\n\t\t\t\tvar result = new ParseNode(parent, next);\r\n\t\t\t\tresult.value = (result.value === \"1\");\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_color(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\r\n\r\n\t\t\tvar valueNode = this.parse_hexInt32(current);\r\n\t\t\tif (valueNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar value = valueNode.value;\r\n\r\n\t\t\tcurrent.value = new parts.Color(\r\n\t\t\t\tvalue & 0xFF,\r\n\t\t\t\t(value >> 8) & 0xFF,\r\n\t\t\t\t(value >> 16) & 0xFF\r\n\t\t\t);\r\n\r\n\t\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_alpha(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\r\n\r\n\t\t\tvar valueNode = this.parse_hexInt32(current);\r\n\t\t\tif (valueNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar value = valueNode.value;\r\n\r\n\t\t\tcurrent.value = 1 - (value & 0xFF) / 0xFF;\r\n\r\n\t\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tparse_colorWithAlpha(parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tvar valueNode = this.parse_decimalOrHexInt32(current);\r\n\t\t\tif (valueNode === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar value = valueNode.value;\r\n\r\n\t\t\tcurrent.value = new parts.Color(\r\n\t\t\t\tvalue & 0xFF,\r\n\t\t\t\t(value >> 8) & 0xFF,\r\n\t\t\t\t(value >> 16) & 0xFF,\r\n\t\t\t\t1 - ((value >> 24) & 0xFF) / 0xFF\r\n\t\t\t);\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @param {string} next\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tread(parent: ParseNode, next: string): ParseNode {\r\n\t\t\tif (this._peek(next.length) !== next) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn new ParseNode(parent, next);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {number=1} count\r\n\t\t * @return {string}\r\n\t\t */\r\n\t\tprivate _peek(count: number = 1): string {\r\n\t\t\t// Fastpath for count === 1. http://jsperf.com/substr-vs-indexer\r\n\t\t\tif (count === 1) { return this._input[this._parseTree.end]; }\r\n\r\n\t\t\treturn this._input.substr(this._parseTree.end, count);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\tprivate _haveMore(): boolean {\r\n\t\t\treturn this._parseTree.end < this._input.length;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {string} tagName One of \"clip\" and \"iclip\"\r\n\t\t * @param {!libjass.parser.ParseNode} parent\r\n\t\t * @return {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tprivate _parse_tag_clip_or_iclip(tagName: string, parent: ParseNode): ParseNode {\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (this.read(current, tagName) === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \"(\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar x1Node: ParseNode = null;\r\n\t\t\tvar x2Node: ParseNode = null;\r\n\t\t\tvar y1Node: ParseNode = null;\r\n\t\t\tvar y2Node: ParseNode = null;\r\n\t\t\tvar scaleNode: ParseNode = null;\r\n\t\t\tvar commandsNode: ParseNode = null;\r\n\r\n\t\t\tvar firstNode = this.parse_decimal(current);\r\n\r\n\t\t\tif (firstNode !== null) {\r\n\t\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar secondNode = this.parse_decimal(current);\r\n\r\n\t\t\t\tif (secondNode !== null) {\r\n\t\t\t\t\tx1Node = firstNode;\r\n\t\t\t\t\ty1Node = secondNode;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tscaleNode = firstNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (x1Node !== null && y1Node !== null) {\r\n\t\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx2Node = this.parse_decimal(current);\r\n\r\n\t\t\t\tif (this.read(current, \",\") === null) {\r\n\t\t\t\t\tparent.pop();\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ty2Node = this.parse_decimal(current);\r\n\r\n\t\t\t\tcurrent.value = new parts.RectangularClip(x1Node.value, y1Node.value, x2Node.value, y2Node.value, tagName === \"clip\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcommandsNode = new ParseNode(current, \"\");\r\n\r\n\t\t\t\tfor (var next = this._peek(); this._haveMore() && next !== \")\" && next !== \"}\"; next = this._peek()) {\r\n\t\t\t\t\tcommandsNode.value += next;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrent.value = new parts.VectorClip((scaleNode !== null) ? scaleNode.value : 1, <parts.drawing.Instruction[]>parser.parse(commandsNode.value, \"drawingInstructions\"), tagName === \"clip\");\r\n\t\t\t}\r\n\r\n\t\t\tif (this.read(current, \")\") === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn current;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a simple tag parser function and sets it on the ParserRun class's prototype.\r\n\t *\r\n\t * @param {string} tagName The name of the tag to generate the parser function for\r\n\t * @param {function(new: !libjass.parts.Part, *)} tagConstructor The type of tag to be returned by the generated parser function\r\n\t * @param {function(!ParseNode): ParseNode} valueParser The parser for the tag's value\r\n\t * @param {boolean} required Whether the tag's value is required or optional\r\n\t */\r\n\tfunction makeTagParserFunction(\r\n\t\ttagName: string,\r\n\t\ttagConstructor: { new (value: any): parts.Part },\r\n\t\tvalueParser: (current: ParseNode) => ParseNode,\r\n\t\trequired: boolean\r\n\t): void {\r\n\t\t(<any>ParserRun.prototype)[\"parse_tag_\" + tagName] = function (parent: ParseNode): ParseNode {\r\n\t\t\tvar self = <ParserRun>this;\r\n\t\t\tvar current = new ParseNode(parent);\r\n\r\n\t\t\tif (self.read(current, tagName) === null) {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar valueNode = valueParser.call(self, current);\r\n\r\n\t\t\tif (valueNode !== null) {\r\n\t\t\t\tcurrent.value = new tagConstructor(valueNode.value);\r\n\t\t\t}\r\n\t\t\telse if (!required) {\r\n\t\t\t\tcurrent.value = new tagConstructor(null);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparent.pop();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn current;\r\n\t\t};\r\n\t}\r\n\r\n\tmakeTagParserFunction(\"alpha\", parts.Alpha, ParserRun.prototype.parse_alpha, false);\r\n\tmakeTagParserFunction(\"be\", parts.Blur, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"blur\", parts.GaussianBlur, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"bord\", parts.Border, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"c\", parts.PrimaryColor, ParserRun.prototype.parse_color, false);\r\n\tmakeTagParserFunction(\"fax\", parts.SkewX, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"fay\", parts.SkewY, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"fr\", parts.RotateZ, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"frx\", parts.RotateX, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"fry\", parts.RotateY, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"frz\", parts.RotateZ, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"fs\", parts.FontSize, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"fsp\", parts.LetterSpacing, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"i\", parts.Italic, ParserRun.prototype.parse_enableDisable, false);\r\n\tmakeTagParserFunction(\"k\", parts.ColorKaraoke, ParserRun.prototype.parse_decimal, true);\r\n\tmakeTagParserFunction(\"K\", parts.SweepingColorKaraoke, ParserRun.prototype.parse_decimal, true);\r\n\tmakeTagParserFunction(\"kf\", parts.SweepingColorKaraoke, ParserRun.prototype.parse_decimal, true);\r\n\tmakeTagParserFunction(\"ko\", parts.OutlineKaraoke, ParserRun.prototype.parse_decimal, true);\r\n\tmakeTagParserFunction(\"p\", parts.DrawingMode, ParserRun.prototype.parse_decimal, true);\r\n\tmakeTagParserFunction(\"pbo\", parts.DrawingBaselineOffset, ParserRun.prototype.parse_decimal, true);\r\n\tmakeTagParserFunction(\"s\", parts.StrikeThrough, ParserRun.prototype.parse_enableDisable, false);\r\n\tmakeTagParserFunction(\"shad\", parts.Shadow, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"u\", parts.Underline, ParserRun.prototype.parse_enableDisable, false);\r\n\tmakeTagParserFunction(\"xbord\", parts.BorderX, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"xshad\", parts.ShadowX, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"ybord\", parts.BorderY, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"yshad\", parts.ShadowY, ParserRun.prototype.parse_decimal, false);\r\n\tmakeTagParserFunction(\"1a\", parts.PrimaryAlpha, ParserRun.prototype.parse_alpha, false);\r\n\tmakeTagParserFunction(\"1c\", parts.PrimaryColor, ParserRun.prototype.parse_color, false);\r\n\tmakeTagParserFunction(\"2a\", parts.SecondaryAlpha, ParserRun.prototype.parse_alpha, false);\r\n\tmakeTagParserFunction(\"2c\", parts.SecondaryColor, ParserRun.prototype.parse_color, false);\r\n\tmakeTagParserFunction(\"3a\", parts.OutlineAlpha, ParserRun.prototype.parse_alpha, false);\r\n\tmakeTagParserFunction(\"3c\", parts.OutlineColor, ParserRun.prototype.parse_color, false);\r\n\tmakeTagParserFunction(\"4a\", parts.ShadowAlpha, ParserRun.prototype.parse_alpha, false);\r\n\tmakeTagParserFunction(\"4c\", parts.ShadowColor, ParserRun.prototype.parse_color, false);\r\n\r\n\tvar rules = new Map<string, (parent: ParseNode) => ParseNode>();\r\n\tObject.keys(ParserRun.prototype).forEach(key => {\r\n\t\tif (key.indexOf(\"parse_\") === 0 && typeof (<any>ParserRun.prototype)[key] === \"function\") {\r\n\t\t\trules.set(key.substr(\"parse_\".length), (<any>ParserRun.prototype)[key]);\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * This class represents a single parse node. It has a start and end position, and an optional value object.\r\n\t *\r\n\t * @param {libjass.parser.ParseNode} parent The parent of this parse node.\r\n\t * @param {*=null} value If provided, it is assigned as the value of the node.\r\n\t */\r\n\texport class ParseNode {\r\n\t\tprivate _children: ParseNode[] = [];\r\n\r\n\t\tprivate _start: number;\r\n\t\tprivate _end: number;\r\n\t\tprivate _value: any;\r\n\r\n\t\tconstructor(private _parent: ParseNode, value: any = null) {\r\n\t\t\tif (_parent !== null) {\r\n\t\t\t\t_parent.children.push(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._start = ((_parent !== null) ? _parent.end : 0);\r\n\t\t\tthis._end = this._start;\r\n\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The start position of this parse node.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget start(): number {\r\n\t\t\treturn this._start;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The end position of this parse node.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget end(): number {\r\n\t\t\treturn this._end;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {libjass.parser.ParseNode}\r\n\t\t */\r\n\t\tget parent(): ParseNode {\r\n\t\t\treturn this._parent;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {!Array.<!ParseNode>}\r\n\t\t */\r\n\t\tget children(): ParseNode[] {\r\n\t\t\treturn this._children;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * An optional object associated with this parse node.\r\n\t\t *\r\n\t\t * @type {*}\r\n\t\t */\r\n\t\tget value(): any {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * An optional object associated with this parse node.\r\n\t\t *\r\n\t\t * If the value is a string, then the end property is updated to be the length of the string.\r\n\t\t *\r\n\t\t * @type {*}\r\n\t\t */\r\n\t\tset value(newValue: any) {\r\n\t\t\tthis._value = newValue;\r\n\r\n\t\t\tif (this._value !== null && this._value.constructor === String && this._children.length === 0) {\r\n\t\t\t\tthis._setEnd(this._start + this._value.length);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Removes the last child of this node and updates the end position to be end position of the new last child.\r\n\t\t */\r\n\t\tpop(): void {\r\n\t\t\tthis._children.splice(this._children.length - 1, 1);\r\n\r\n\t\t\tif (this._children.length > 0) {\r\n\t\t\t\tthis._setEnd(this._children[this._children.length - 1].end);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._setEnd(this.start);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Updates the end property of this node and its parent recursively to the root node.\r\n\t\t *\r\n\t\t * @param {number} newEnd\r\n\t\t */\r\n\t\tprivate _setEnd(newEnd: number): void {\r\n\t\t\tthis._end = newEnd;\r\n\r\n\t\t\tif (this._parent !== null && this._parent.end !== this._end) {\r\n\t\t\t\tthis._parent._setEnd(this._end);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule libjass.webworker {\r\n\texport enum WorkerCommands {\r\n\t\tParse = 1\r\n\t}\r\n\r\n\tlibjass.webworker._registerWorkerCommand(WorkerCommands.Parse, (parameters: any, response: WorkerResultCallback): void => {\r\n\t\tvar result: any;\r\n\r\n\t\ttry {\r\n\t\t\tresult = libjass.parser.parse(parameters.input, parameters.rule);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tresponse(ex, null);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tresponse(null, result);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t}\r\n\t});\r\n}\r\n","/**\r\n * libjass\r\n *\r\n * https://github.com/Arnavion/libjass\r\n *\r\n * Copyright 2013 Arnav Singh\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n///<reference path=\"libjass.ts\" />\r\n\r\nmodule libjass.renderers {\r\n\t/**\r\n\t * A mixin class that represents an event source.\r\n\t */\r\n\texport class EventSource<T> {\r\n\t\t/**\r\n\t\t * A map from event type to an array of all the listeners registered for that event type.\r\n\t\t *\r\n\t\t * @type {!Map.<T, !Array.<Function>>}\r\n\t\t */\r\n\t\t_eventListeners: Map<T, Function[]>;\r\n\r\n\t\t/**\r\n\t\t * Add a listener for the given event.\r\n\t\t *\r\n\t\t * @param {!T} type The type of event to attach the listener for\r\n\t\t * @param {!Function} listener The listener\r\n\t\t */\r\n\t\taddEventListener(type: T, listener: Function): void {\r\n\t\t\tvar listeners = this._eventListeners.get(type);\r\n\r\n\t\t\tif (listeners === undefined) {\r\n\t\t\t\tthis._eventListeners.set(type, listeners = []);\r\n\t\t\t}\r\n\r\n\t\t\tlisteners.push(listener);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Calls all listeners registered for the given event type.\r\n\t\t *\r\n\t\t * @param {!T} type The type of event to dispatch\r\n\t\t * @param {!Array.<*>} args Arguments for the listeners of the event\r\n\t\t */\r\n\t\t_dispatchEvent(type: T, args: Object[]): void {\r\n\t\t\tvar listeners = this._eventListeners.get(type);\r\n\t\t\tif (listeners !== undefined) {\r\n\t\t\t\tlisteners.forEach((listener: Function) => {\r\n\t\t\t\t\tlistener.apply(this, args);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The type of clock event.\r\n\t */\r\n\texport enum ClockEvent {\r\n\t\tPlay,\r\n\t\tTick,\r\n\t\tPause,\r\n\t\tStop,\r\n\t\tRateChange,\r\n\t}\r\n\r\n\t/**\r\n\t * The clock interface. A clock is used by a renderer as a source of {@link libjass.renderers.ClockEvent}s.\r\n\t */\r\n\texport interface Clock extends EventSource<ClockEvent> {\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tcurrentTime: number;\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tenabled: boolean;\r\n\r\n\t\t/**\r\n\t\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\trate: number;\r\n\r\n\t\t/**\r\n\t\t * Enable the clock.\r\n\t\t *\r\n\t\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\r\n\t\t */\r\n\t\tenable(): boolean;\r\n\r\n\t\t/**\r\n\t\t * Disable the clock.\r\n\t\t *\r\n\t\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\r\n\t\t */\r\n\t\tdisable(): boolean;\r\n\r\n\t\t/**\r\n\t\t * Toggle the clock.\r\n\t\t */\r\n\t\ttoggle(): void;\r\n\r\n\t\t/**\r\n\t\t * Enable or disable the clock.\r\n\t\t *\r\n\t\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\r\n\t\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\r\n\t\t */\r\n\t\tsetEnabled(enabled: boolean): boolean;\r\n\r\n\t\t// EventSource members\r\n\r\n\t\t/**\r\n\t\t * @param {number} type\r\n\t\t * @param {!Function} listener\r\n\t\t */\r\n\t\taddEventListener(type: ClockEvent, listener: Function): void;\r\n\t}\r\n\r\n\t/**\r\n\t * An implementation of {@link libjass.renderers.Clock} that allows user script to manually trigger play, pause and timeUpdate events.\r\n\t */\r\n\texport class ManualClock implements Clock {\r\n\t\tprivate _currentTime: number = -1;\r\n\t\tprivate _enabled: boolean = true;\r\n\t\tprivate _rate: number = 1;\r\n\r\n\t\t/**\r\n\t\t * Trigger a {@link libjass.renderers.ClockEvent.Play}\r\n\t\t */\r\n\t\tplay(): void {\r\n\t\t\tthis._dispatchEvent(ClockEvent.Play, []);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Trigger a {@link libjass.renderers.ClockEvent.Tick}\r\n\t\t *\r\n\t\t * @param {number} currentTime\r\n\t\t */\r\n\t\ttick(currentTime: number): void {\r\n\t\t\tthis._currentTime = currentTime;\r\n\t\t\tthis._dispatchEvent(ClockEvent.Tick, []);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Trigger a {@link libjass.renderers.ClockEvent.Pause}\r\n\t\t */\r\n\t\tpause(): void {\r\n\t\t\tthis._dispatchEvent(ClockEvent.Pause, []);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Trigger a {@link libjass.renderers.ClockEvent.Stop}\r\n\t\t */\r\n\t\tstop(): void {\r\n\t\t\tthis._dispatchEvent(ClockEvent.Stop, []);\r\n\t\t}\r\n\r\n\t\t// Clock members\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget currentTime(): number {\r\n\t\t\treturn this._currentTime;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tget enabled(): boolean {\r\n\t\t\treturn this._enabled;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget rate(): number {\r\n\t\t\treturn this._rate;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Enable the clock.\r\n\t\t *\r\n\t\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\r\n\t\t */\r\n\t\tenable(): boolean {\r\n\t\t\tif (this._enabled) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tthis._enabled = true;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Disable the clock.\r\n\t\t *\r\n\t\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\r\n\t\t */\r\n\t\tdisable(): boolean {\r\n\t\t\tif (!this._enabled) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tthis._enabled = false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Toggle the clock.\r\n\t\t */\r\n\t\ttoggle(): void {\r\n\t\t\tif (this._enabled) {\r\n\t\t\t\tthis.disable();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.enable();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Enable or disable the clock.\r\n\t\t *\r\n\t\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\r\n\t\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\r\n\t\t */\r\n\t\tsetEnabled(enabled: boolean): boolean {\r\n\t\t\tif (enabled) {\r\n\t\t\t\treturn this.enable();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.disable();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the rate of the clock - how fast the clock ticks compared to real time.\r\n\t\t *\r\n\t\t * @param {number} rate The new rate of the clock.\r\n\t\t */\r\n\t\tsetRate(rate: number): void {\r\n\t\t\tthis._rate = rate;\r\n\r\n\t\t\tthis._dispatchEvent(ClockEvent.RateChange, []);\r\n\t\t}\r\n\r\n\t\t// EventSource members\r\n\r\n\t\t/**\r\n\t\t * @type {!Map.<T, !Array.<Function>>}\r\n\t\t */\r\n\t\t_eventListeners: Map<ClockEvent, Function[]> = new Map<ClockEvent, Function[]>();\r\n\r\n\t\t/**\r\n\t\t * @type {function(number, !Function)}\r\n\t\t */\r\n\t\taddEventListener: (type: ClockEvent, listener: Function) => void;\r\n\r\n\t\t/**\r\n\t\t * @type {function(number, Array.<*>)}\r\n\t\t */\r\n\t\t_dispatchEvent: (type: ClockEvent, args: Object[]) => void;\r\n\t}\r\n\tmixin(ManualClock, [EventSource]);\r\n\r\n\t/**\r\n\t * The state of the video.\r\n\t */\r\n\tenum VideoState {\r\n\t\tPlaying = 0,\r\n\t\tPaused = 1,\r\n\t}\r\n\r\n\t/**\r\n\t * An implementation of libjass.renderers.Clock that generates play, pause and timeUpdate events according to the state of a <video> element.\r\n\t *\r\n\t * @param {!HTMLVideoElement} video\r\n\t */\r\n\texport class VideoClock implements Clock {\r\n\t\tprivate _currentTime: number = -1;\r\n\r\n\t\tprivate _enabled: boolean = true;\r\n\r\n\t\tprivate _videoState: VideoState;\r\n\r\n\t\tprivate _nextAnimationFrameRequestId: number = null;\r\n\r\n\t\tconstructor(private _video: HTMLVideoElement) {\r\n\t\t\tthis._video.addEventListener(\"playing\", () => this._onVideoPlaying(), false);\r\n\t\t\tthis._video.addEventListener(\"pause\", () => this._onVideoPause(), false);\r\n\t\t\tthis._video.addEventListener(\"seeking\", () => this._onVideoSeeking(), false);\r\n\t\t\tthis._video.addEventListener(\"ratechange\", () => this._onVideoRateChange(), false);\r\n\t\t}\r\n\r\n\t\t// Clock members\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget currentTime(): number {\r\n\t\t\treturn this._currentTime;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tget enabled(): boolean {\r\n\t\t\treturn this._enabled;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget rate(): number {\r\n\t\t\treturn this._video.playbackRate;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Enable the clock.\r\n\t\t *\r\n\t\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\r\n\t\t */\r\n\t\tenable(): boolean {\r\n\t\t\tif (this._enabled) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._videoState !== VideoState.Paused) {\r\n\t\t\t\tif (libjass.debugMode) {\r\n\t\t\t\t\tconsole.warn(\"VideoClock.enable: Abnormal state detected. VideoClock._videoState should have been VideoState.Paused\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._enabled = true;\r\n\r\n\t\t\tthis._startTicking();\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Disable the clock.\r\n\t\t *\r\n\t\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\r\n\t\t */\r\n\t\tdisable(): boolean {\r\n\t\t\tif (!this._enabled) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._videoState === VideoState.Playing) {\r\n\t\t\t\tthis._videoState = VideoState.Paused;\r\n\t\t\t\tthis._dispatchEvent(ClockEvent.Pause, []);\r\n\t\t\t}\r\n\r\n\t\t\tthis._enabled = false;\r\n\r\n\t\t\tthis._dispatchEvent(ClockEvent.Stop, []);\r\n\r\n\t\t\tthis._stopTicking();\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Toggle the clock.\r\n\t\t */\r\n\t\ttoggle(): void {\r\n\t\t\tif (this._enabled) {\r\n\t\t\t\tthis.disable();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.enable();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Enable or disable the clock.\r\n\t\t *\r\n\t\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\r\n\t\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\r\n\t\t */\r\n\t\tsetEnabled(enabled: boolean): boolean {\r\n\t\t\tif (enabled) {\r\n\t\t\t\treturn this.enable();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.disable();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate _onVideoPlaying(): void {\r\n\t\t\tif (!this._enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._videoState === VideoState.Playing) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._startTicking();\r\n\t\t}\r\n\r\n\t\tprivate _onVideoPause(): void {\r\n\t\t\tif (!this._enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._videoState === VideoState.Paused) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._videoState = VideoState.Paused;\r\n\r\n\t\t\tthis._dispatchEvent(ClockEvent.Pause, []);\r\n\r\n\t\t\tif (this._nextAnimationFrameRequestId === null) {\r\n\t\t\t\tif (libjass.debugMode) {\r\n\t\t\t\t\tconsole.warn(\"VideoClock._onVideoPause: Abnormal state detected. VideoClock._nextAnimationFrameRequestId should not have been null\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._stopTicking();\r\n\t\t}\r\n\r\n\t\tprivate _onVideoSeeking(): void {\r\n\t\t\tif (!this._enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._videoState === VideoState.Playing) {\r\n\t\t\t\tthis._videoState = VideoState.Paused;\r\n\t\t\t\tthis._dispatchEvent(ClockEvent.Pause, []);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._currentTime === this._video.currentTime) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._currentTime = this._video.currentTime;\r\n\r\n\t\t\tthis._dispatchEvent(ClockEvent.Tick, []);\r\n\t\t}\r\n\r\n\t\tprivate _onTimerTick(): void {\r\n\t\t\tif (!this._enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._videoState === VideoState.Playing) {\r\n\t\t\t\tif (this._currentTime !== this._video.currentTime) {\r\n\t\t\t\t\tthis._currentTime = this._video.currentTime;\r\n\t\t\t\t\tthis._dispatchEvent(ClockEvent.Tick, []);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._videoState = VideoState.Paused;\r\n\t\t\t\t\tthis._dispatchEvent(ClockEvent.Pause, []);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._currentTime !== this._video.currentTime) {\r\n\t\t\t\t\tthis._currentTime = this._video.currentTime;\r\n\t\t\t\t\tthis._videoState = VideoState.Playing;\r\n\t\t\t\t\tthis._dispatchEvent(ClockEvent.Play, []);\r\n\t\t\t\t\tthis._dispatchEvent(ClockEvent.Tick, []);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._nextAnimationFrameRequestId = requestAnimationFrame(() => this._onTimerTick());\r\n\t\t}\r\n\r\n\t\tprivate _onVideoRateChange(): void {\r\n\t\t\tthis._dispatchEvent(ClockEvent.RateChange, []);\r\n\t\t}\r\n\r\n\t\tprivate _startTicking(): void {\r\n\t\t\tif (this._nextAnimationFrameRequestId === null) {\r\n\t\t\t\tthis._nextAnimationFrameRequestId = requestAnimationFrame(() => this._onTimerTick());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate _stopTicking(): void {\r\n\t\t\tif (this._nextAnimationFrameRequestId !== null) {\r\n\t\t\t\tcancelAnimationFrame(this._nextAnimationFrameRequestId);\r\n\t\t\t\tthis._nextAnimationFrameRequestId = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// EventSource members\r\n\r\n\t\t/**\r\n\t\t * @type {!Map.<T, !Array.<Function>>}\r\n\t\t */\r\n\t\t_eventListeners: Map<ClockEvent, Function[]> = new Map<ClockEvent, Function[]>();\r\n\r\n\t\t/**\r\n\t\t * @type {function(number, !Function)}\r\n\t\t */\r\n\t\taddEventListener: (type: ClockEvent, listener: Function) => void;\r\n\r\n\t\t/**\r\n\t\t * @type {function(number, Array.<*>)}\r\n\t\t */\r\n\t\t_dispatchEvent: (type: ClockEvent, args: Object[]) => void;\r\n\t}\r\n\tmixin(VideoClock, [EventSource]);\r\n}\r\n","/**\r\n * libjass\r\n *\r\n * https://github.com/Arnavion/libjass\r\n *\r\n * Copyright 2013 Arnav Singh\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n///<reference path=\"libjass.ts\" />\r\n\r\nmodule libjass.renderers {\r\n\t/**\r\n\t * A renderer implementation that doesn't output anything.\r\n\t *\r\n\t * @param {!libjass.ASS} ass\r\n\t * @param {!libjass.renderers.Clock} clock\r\n\t * @param {libjass.renderers.RendererSettings} settings\r\n\t */\r\n\texport class NullRenderer {\r\n\t\tprivate static _lastRendererId = -1;\r\n\r\n\t\tprivate _id: number;\r\n\r\n\t\tprivate _settings: RendererSettings;\r\n\r\n\t\tconstructor(private _ass: ASS, private _clock: Clock, settings?: RendererSettings) {\r\n\t\t\tthis._id = ++NullRenderer._lastRendererId;\r\n\r\n\t\t\tthis._settings = RendererSettings.from(settings);\r\n\r\n\t\t\tthis._clock.addEventListener(ClockEvent.Play, () => this._onClockPlay());\r\n\t\t\tthis._clock.addEventListener(ClockEvent.Tick, () => this._onClockTick());\r\n\t\t\tthis._clock.addEventListener(ClockEvent.Pause, () => this._onClockPause());\r\n\t\t\tthis._clock.addEventListener(ClockEvent.Stop, () => this._onClockStop());\r\n\t\t\tthis._clock.addEventListener(ClockEvent.RateChange, () => this._onClockRateChange());\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The unique ID of this renderer. Auto-generated.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget id(): number {\r\n\t\t\treturn this._id;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {!libjass.ASS}\r\n\t\t */\r\n\t\tget ass(): ASS {\r\n\t\t\treturn this._ass;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {!libjass.renderers.Clock}\r\n\t\t */\r\n\t\tget clock(): Clock {\r\n\t\t\treturn this._clock;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {!libjass.renderers.RendererSettings}\r\n\t\t */\r\n\t\tget settings(): RendererSettings {\r\n\t\t\treturn this._settings;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Pre-render a dialogue. This is a no-op for this type.\r\n\t\t *\r\n\t\t * @param {!libjass.Dialogue} dialogue\r\n\t\t */\r\n\t\tpreRender(dialogue: Dialogue): void { }\r\n\r\n\t\t/**\r\n\t\t * Draw a dialogue. This is a no-op for this type.\r\n\t\t *\r\n\t\t * @param {!libjass.Dialogue} dialogue\r\n\t\t */\r\n\t\tdraw(dialogue: Dialogue): void { }\r\n\r\n\t\t/**\r\n\t\t * Enable the renderer.\r\n\t\t *\r\n\t\t * @return {boolean} True if the renderer is now enabled, false if it was already enabled.\r\n\t\t */\r\n\t\tenable(): boolean {\r\n\t\t\treturn this._clock.enable();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Disable the renderer.\r\n\t\t *\r\n\t\t * @return {boolean} True if the renderer is now disabled, false if it was already disabled.\r\n\t\t */\r\n\t\tdisable(): boolean {\r\n\t\t\treturn this._clock.disable();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Toggle the renderer.\r\n\t\t */\r\n\t\ttoggle(): void {\r\n\t\t\tthis._clock.toggle();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Enable or disable the renderer.\r\n\t\t *\r\n\t\t * @param {boolean} enabled If true, the renderer is enabled, otherwise it's disabled.\r\n\t\t * @return {boolean} True if the renderer is now in the given state, false if it was already in that state.\r\n\t\t */\r\n\t\tsetEnabled(enabled: boolean): boolean {\r\n\t\t\treturn this._clock.setEnabled(enabled);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tget enabled(): boolean {\r\n\t\t\treturn this._clock.enabled;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Runs when the clock is enabled, or starts playing, or is resumed from pause.\r\n\t\t */\r\n\t\tprotected _onClockPlay(): void {\r\n\t\t\tif (libjass.verboseMode) {\r\n\t\t\t\tconsole.log(\"NullRenderer._onClockPlay\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Runs when the clock's current time changed. This might be a result of either regular playback or seeking.\r\n\t\t */\r\n\t\tprotected _onClockTick(): void {\r\n\t\t\tvar currentTime = this._clock.currentTime;\r\n\r\n\t\t\tif (libjass.verboseMode) {\r\n\t\t\t\tconsole.log(\"NullRenderer._onClockTick: currentTime = \" + currentTime);\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < this._ass.dialogues.length; i++) {\r\n\t\t\t\tvar dialogue = this._ass.dialogues[i];\r\n\r\n\t\t\t\tif (dialogue.end > currentTime) {\r\n\t\t\t\t\tif (dialogue.start <= currentTime) {\r\n\t\t\t\t\t\t// This dialogue is visible right now. Draw it.\r\n\t\t\t\t\t\tthis.draw(dialogue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (dialogue.start <= (currentTime + this._settings.preRenderTime)) {\r\n\t\t\t\t\t\t// This dialogue will be visible soon. Pre-render it.\r\n\t\t\t\t\t\tthis.preRender(dialogue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Runs when the clock is paused.\r\n\t\t */\r\n\t\tprotected _onClockPause(): void {\r\n\t\t\tif (libjass.verboseMode) {\r\n\t\t\t\tconsole.log(\"NullRenderer._onClockPause\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Runs when the clock is disabled.\r\n\t\t */\r\n\t\tprotected _onClockStop(): void {\r\n\t\t\tif (libjass.verboseMode) {\r\n\t\t\t\tconsole.log(\"NullRenderer._onClockStop\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Runs when the clock changes its rate.\r\n\t\t */\r\n\t\tprotected _onClockRateChange(): void {\r\n\t\t\tif (libjass.verboseMode) {\r\n\t\t\t\tconsole.log(\"NullRenderer._onClockRateChange\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Settings for the renderer.\r\n\t */\r\n\texport class RendererSettings {\r\n\t\t/**\r\n\t\t * A map of font name to one or more URLs of that font. If provided, the fonts in this map are pre-loaded by the WebRenderer when it's created.\r\n\t\t *\r\n\t\t * If you have a <style> or <link> element on the page containing @font-face rules, you can use the {@link libjass.renderers.RendererSettings.makeFontMapFromStyleElement}\r\n\t\t * convenience method to create a font map.\r\n\t\t *\r\n\t\t * @type {!Map.<string, !Array.<string>>}\r\n\t\t */\r\n\t\tfontMap: Map<string, string[]>;\r\n\r\n\t\t/**\r\n\t\t * Subtitles will be pre-rendered for this amount of time (seconds).\r\n\t\t *\r\n\t\t * Defaults to 5.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tpreRenderTime: number;\r\n\r\n\t\t/**\r\n\t\t * Subtitle outlines will be rendered in full detail. When false, the value of blur is used to draw less outlines for better performance and (hopefully) similar output.\r\n\t\t *\r\n\t\t * Defaults to false.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tpreciseOutlines: boolean;\r\n\r\n\t\t/**\r\n\t\t * Outlines and blur are implemented using SVG filters by default. When false, they will be rendered using alternative means.\r\n\t\t *\r\n\t\t * IE 11 and below do not support SVG filters on HTML elements so this should be set to false there. See http://caniuse.com/svg-html for details.\r\n\t\t *\r\n\t\t * Defaults to true.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tenableSvg: boolean;\r\n\r\n\t\t/**\r\n\t\t * A convenience method to create a font map from a <style> or <link> element that contains @font-face rules. There should be one @font-face rule for each font name, mapping to a font file URL.\r\n\t\t *\r\n\t\t * For example:\r\n\t\t *\r\n\t\t *     @font-face {\r\n\t\t *         font-family: \"Helvetica\";\r\n\t\t *         src: url(\"/fonts/helvetica.ttf\");\r\n\t\t *     }\r\n\t\t *\r\n\t\t * @param {!LinkStyle} linkStyle\r\n\t\t * @return {!Map.<string, !Array.<string>>}\r\n\t\t */\r\n\t\tstatic makeFontMapFromStyleElement(linkStyle: LinkStyle): Map<string, string[]> {\r\n\t\t\tvar map = new Map<string, string[]>();\r\n\r\n\t\t\tvar styleSheet = <CSSStyleSheet>linkStyle.sheet;\r\n\t\t\tvar rules: CSSFontFaceRule[] = Array.prototype.filter.call(styleSheet.cssRules, (rule: CSSRule) => rule.type === CSSRule.FONT_FACE_RULE);\r\n\t\t\trules.forEach((rule: CSSFontFaceRule) => {\r\n\t\t\t\tvar src = rule.style.getPropertyValue(\"src\");\r\n\t\t\t\tvar urls: string[] = [];\r\n\r\n\t\t\t\tif (!src) {\r\n\t\t\t\t\tsrc = rule.cssText.split(\"\\n\")\r\n\t\t\t\t\t\t.map((line: string) => line.match(/src: ([^;]+);/))\r\n\t\t\t\t\t\t.filter((matches: string[]) => matches !== null)\r\n\t\t\t\t\t\t.map((matches: string[]) => matches[1])[0];\r\n\t\t\t\t}\r\n\r\n\t\t\t\turls = src.split(/,\\s*/).map((url: string) => url.match(/^url\\((.+)\\)$/)[1]);\r\n\r\n\t\t\t\tif (urls.length > 0) {\r\n\t\t\t\t\tvar name = RendererSettings._stripQuotes(rule.style.getPropertyValue(\"font-family\"));\r\n\t\t\t\t\tvar existingList = map.get(name);\r\n\t\t\t\t\tif (existingList === undefined) {\r\n\t\t\t\t\t\texistingList = [];\r\n\t\t\t\t\t\tmap.set(name, existingList);\r\n\t\t\t\t\t}\r\n\t\t\t\t\texistingList.unshift.apply(existingList, urls.map(RendererSettings._stripQuotes));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn map;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Converts an arbitrary object into a {@link libjass.renderers.RendererSettings} object.\r\n\t\t *\r\n\t\t * @param {*} object\r\n\t\t * @return {!libjass.renderers.RendererSettings}\r\n\t\t */\r\n\t\tstatic from(object?: any): RendererSettings {\r\n\t\t\tif (object === undefined || object === null) {\r\n\t\t\t\tobject = {};\r\n\t\t\t}\r\n\r\n\t\t\treturn RendererSettings._from(object.fontMap, object.preRenderTime, object.preciseOutlines, object.enableSvg);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {Map.<string, !Array.<string>>=null} fontMap\r\n\t\t * @param {number=5} preRenderTime\r\n\t\t * @param {boolean=false} preciseOutlines\r\n\t\t * @param {boolean=true} enableSvg\r\n\t\t * @return {!libjass.renderers.RendererSettings}\r\n\t\t */\r\n\t\tprivate static _from(fontMap: Map<string, string[]> = null, preRenderTime: number = 5, preciseOutlines: boolean = false, enableSvg: boolean = true): RendererSettings {\r\n\t\t\tvar result = new RendererSettings();\r\n\t\t\tresult.fontMap = fontMap;\r\n\t\t\tresult.preRenderTime = preRenderTime;\r\n\t\t\tresult.preciseOutlines = preciseOutlines;\r\n\t\t\tresult.enableSvg = enableSvg;\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {string} str\r\n\t\t * @return {string}\r\n\t\t */\r\n\t\tprivate static _stripQuotes(str: string): string {\r\n\t\t\treturn str.match(/^[\"']?(.*?)[\"']?$/)[1];\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * libjass\r\n *\r\n * https://github.com/Arnavion/libjass\r\n *\r\n * Copyright 2013 Arnav Singh\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n///<reference path=\"libjass.ts\" />\r\n\r\ninterface CSSStyleDeclaration {\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\twebkitAnimation: string;\r\n\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\twebkitAnimationDelay: string;\r\n\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\twebkitFilter: string;\r\n\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\twebkitTransform: string;\r\n\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\twebkitTransformOrigin: string;\r\n}\r\n\r\nmodule libjass.renderers {\r\n\t/**\r\n\t * A renderer implementation that draws subtitles to the given <div>\r\n\t *\r\n\t * @param {!libjass.ASS} ass\r\n\t * @param {!libjass.renderers.Clock} clock\r\n\t * @param {!HTMLDivElement} libjassSubsWrapper Subtitles will be rendered to this <div>\r\n\t * @param {!libjass.renderers.RendererSettings} settings\r\n\t */\r\n\texport class WebRenderer extends NullRenderer implements EventSource<string> {\r\n\t\tprivate _subsWrapper: HTMLDivElement;\r\n\t\tprivate _layerWrappers: HTMLDivElement[] = [];\r\n\t\tprivate _layerAlignmentWrappers: HTMLDivElement[][] = [];\r\n\t\tprivate _fontSizeElement: HTMLDivElement = null;\r\n\t\tprivate _animationStyleElement: HTMLStyleElement = null;\r\n\t\tprivate _svgDefsElement: SVGDefsElement = null;\r\n\r\n\t\tprivate _currentSubs: Map<Dialogue, HTMLDivElement> = new Map<Dialogue, HTMLDivElement>();\r\n\t\tprivate _preRenderedSubs: Map<number, { sub: HTMLDivElement; animationDelays: number[] }> = new Map<number, { sub: HTMLDivElement; animationDelays: number[] }>();\r\n\r\n\t\tprivate _scaleX: number;\r\n\t\tprivate _scaleY: number;\r\n\r\n\t\tconstructor(ass: ASS, clock: Clock, private _libjassSubsWrapper: HTMLDivElement, settings?: RendererSettings) {\r\n\t\t\tsuper(ass, clock, (() => {\r\n\t\t\t\tif (!(_libjassSubsWrapper instanceof HTMLDivElement)) {\r\n\t\t\t\t\tvar temp = settings;\r\n\t\t\t\t\tsettings = <any>_libjassSubsWrapper;\r\n\t\t\t\t\t_libjassSubsWrapper = <any>temp;\r\n\t\t\t\t\tconsole.warn(\"WebRenderer's constructor now takes libjassSubsWrapper as the third parameter and settings as the fourth parameter. Please update the caller.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn settings;\r\n\t\t\t})());\r\n\r\n\t\t\tthis._libjassSubsWrapper.classList.add(\"libjass-wrapper\");\r\n\r\n\t\t\tthis._subsWrapper = document.createElement(\"div\");\r\n\t\t\tthis._libjassSubsWrapper.appendChild(this._subsWrapper);\r\n\t\t\tthis._subsWrapper.className = \"libjass-subs\";\r\n\r\n\t\t\tthis._fontSizeElement = document.createElement(\"div\");\r\n\t\t\tthis._libjassSubsWrapper.appendChild(this._fontSizeElement);\r\n\t\t\tthis._fontSizeElement.className = \"libjass-font-measure\";\r\n\t\t\tthis._fontSizeElement.appendChild(document.createTextNode(\"M\"));\r\n\r\n\t\t\tvar svgElement = <SVGSVGElement>document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n\t\t\tthis._libjassSubsWrapper.appendChild(svgElement);\r\n\t\t\tsvgElement.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\r\n\t\t\tsvgElement.setAttribute(\"version\", \"1.1\");\r\n\t\t\tsvgElement.setAttribute(\"class\", \"libjass-filters\");\r\n\t\t\tsvgElement.setAttribute(\"width\", \"0\");\r\n\t\t\tsvgElement.setAttribute(\"height\", \"0\");\r\n\r\n\t\t\tthis._svgDefsElement = <SVGDefsElement>document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\r\n\t\t\tsvgElement.appendChild(this._svgDefsElement);\r\n\r\n\t\t\t// Preload fonts\r\n\r\n\t\t\tvar urlsToPreload = new Set<string>();\r\n\t\t\tif (this.settings.fontMap !== null) {\r\n\t\t\t\tthis.settings.fontMap.forEach(srcs => {\r\n\t\t\t\t\tsrcs.forEach(src => urlsToPreload.add(src));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (libjass.debugMode) {\r\n\t\t\t\tconsole.log(\"Preloading \" + urlsToPreload.size + \" fonts...\");\r\n\t\t\t}\r\n\r\n\t\t\tvar xhrPromises: Promise<void>[] = [];\r\n\t\t\turlsToPreload.forEach(url => {\r\n\t\t\t\txhrPromises.push(new Promise<void>((resolve, reject) => {\r\n\t\t\t\t\tvar xhr = new XMLHttpRequest();\r\n\t\t\t\t\txhr.addEventListener(\"load\", () => {\r\n\t\t\t\t\t\tif (libjass.debugMode) {\r\n\t\t\t\t\t\t\tconsole.log(\"Preloaded \" + url + \".\");\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tresolve(null);\r\n\t\t\t\t\t});\r\n\t\t\t\t\txhr.open(\"GET\", url, true);\r\n\t\t\t\t\txhr.send();\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\r\n\t\t\tPromise.all(xhrPromises).then(() => {\r\n\t\t\t\tif (libjass.debugMode) {\r\n\t\t\t\t\tconsole.log(\"All fonts have been preloaded.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._ready();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {!HTMLDivElement}\r\n\t\t */\r\n\t\tget libjassSubsWrapper(): HTMLDivElement {\r\n\t\t\treturn this._libjassSubsWrapper;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Resize the subtitles to the given new dimensions.\r\n\t\t *\r\n\t\t * @param {number} width\r\n\t\t * @param {number} height\r\n\t\t */\r\n\t\tresize(width: number, height: number): void {\r\n\t\t\tthis._removeAllSubs();\r\n\r\n\t\t\tvar ratio = Math.min(width / this.ass.properties.resolutionX, height / this.ass.properties.resolutionY);\r\n\t\t\tvar subsWrapperWidth = this.ass.properties.resolutionX * ratio;\r\n\t\t\tvar subsWrapperHeight = this.ass.properties.resolutionY * ratio;\r\n\t\t\tthis._subsWrapper.style.width = subsWrapperWidth.toFixed(3) + \"px\";\r\n\t\t\tthis._subsWrapper.style.height = subsWrapperHeight.toFixed(3) + \"px\";\r\n\t\t\tthis._subsWrapper.style.left = ((width - subsWrapperWidth) / 2).toFixed(3) + \"px\";\r\n\t\t\tthis._subsWrapper.style.top = ((height - subsWrapperHeight) / 2).toFixed(3) + \"px\";\r\n\r\n\t\t\tthis._scaleX = subsWrapperWidth / this.ass.properties.resolutionX;\r\n\t\t\tthis._scaleY = subsWrapperHeight / this.ass.properties.resolutionY;\r\n\r\n\t\t\t// Any dialogues which have been pre-rendered will need to be pre-rendered again.\r\n\t\t\tthis._preRenderedSubs.clear();\r\n\r\n\t\t\tif (this._animationStyleElement !== null) {\r\n\t\t\t\twhile (this._animationStyleElement.firstChild !== null) {\r\n\t\t\t\t\tthis._animationStyleElement.removeChild(this._animationStyleElement.firstChild);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile (this._svgDefsElement.firstChild !== null) {\r\n\t\t\t\tthis._svgDefsElement.removeChild(this._svgDefsElement.firstChild);\r\n\t\t\t}\r\n\r\n\t\t\t// this.currentTime will be -1 if resize() is called before the clock begins playing for the first time. In this situation, there is no need to force a redraw.\r\n\t\t\tif (this.clock.currentTime !== -1) {\r\n\t\t\t\tthis._onClockTick();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The magic happens here. The subtitle div is rendered and stored. Call {@link libjass.renderers.WebRenderer.draw} to get a clone of the div to display.\r\n\t\t *\r\n\t\t * @param {!libjass.Dialogue} dialogue\r\n\t\t */\r\n\t\tpreRender(dialogue: Dialogue): void {\r\n\t\t\tif (this._preRenderedSubs.has(dialogue.id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sub = document.createElement(\"div\");\r\n\r\n\t\t\tsub.style.marginLeft = (this._scaleX * dialogue.style.marginLeft).toFixed(3) + \"px\";\r\n\t\t\tsub.style.marginRight = (this._scaleX * dialogue.style.marginRight).toFixed(3) + \"px\";\r\n\t\t\tsub.style.marginTop = sub.style.marginBottom = (this._scaleY * dialogue.style.marginVertical).toFixed(3) + \"px\";\r\n\t\t\tsub.style.minWidth = (this._subsWrapper.offsetWidth - this._scaleX * (dialogue.style.marginLeft + dialogue.style.marginRight)).toFixed(3) + \"px\";\r\n\r\n\t\t\tvar animationCollection = new AnimationCollection(this, dialogue);\r\n\r\n\t\t\tvar currentSpan: HTMLSpanElement = null;\r\n\t\t\tvar currentSpanStyles = new SpanStyles(this, dialogue, this._scaleX, this._scaleY, this.settings, this._fontSizeElement, this._svgDefsElement);\r\n\r\n\t\t\tvar previousAddNewLine = false; // If two or more \\N's are encountered in sequence, then all but the first will be created using currentSpanStyles.makeNewLine() instead\r\n\t\t\tvar startNewSpan = (addNewLine: boolean): void => {\r\n\t\t\t\tif (currentSpan !== null && currentSpan.textContent !== \"\") {\r\n\t\t\t\t\tsub.appendChild(currentSpanStyles.setStylesOnSpan(currentSpan));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (addNewLine) {\r\n\t\t\t\t\tif (previousAddNewLine) {\r\n\t\t\t\t\t\tsub.appendChild(currentSpanStyles.makeNewLine());\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsub.appendChild(document.createElement(\"br\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentSpan = document.createElement(\"span\");\r\n\t\t\t\tpreviousAddNewLine = addNewLine;\r\n\t\t\t};\r\n\t\t\tstartNewSpan(false);\r\n\r\n\t\t\tvar currentDrawingStyles: DrawingStyles = new DrawingStyles(this._scaleX, this._scaleY);\r\n\r\n\t\t\tvar wrappingStyle = this.ass.properties.wrappingStyle;\r\n\r\n\t\t\tdialogue.parts.forEach(part => {\r\n\t\t\t\tif (part instanceof parts.Italic) {\r\n\t\t\t\t\tcurrentSpanStyles.italic = (<parts.Italic>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Bold) {\r\n\t\t\t\t\tcurrentSpanStyles.bold = (<parts.Bold>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Underline) {\r\n\t\t\t\t\tcurrentSpanStyles.underline = (<parts.Underline>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.StrikeThrough) {\r\n\t\t\t\t\tcurrentSpanStyles.strikeThrough = (<parts.StrikeThrough>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Border) {\r\n\t\t\t\t\tcurrentSpanStyles.outlineWidth = (<parts.Border>part).value;\r\n\t\t\t\t\tcurrentSpanStyles.outlineHeight = (<parts.Border>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.BorderX) {\r\n\t\t\t\t\tcurrentSpanStyles.outlineWidth = (<parts.BorderX>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.BorderY) {\r\n\t\t\t\t\tcurrentSpanStyles.outlineHeight = (<parts.BorderY>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Shadow) {\r\n\t\t\t\t\tcurrentSpanStyles.shadowDepthX = (<parts.Shadow>part).value;\r\n\t\t\t\t\tcurrentSpanStyles.shadowDepthY = (<parts.Shadow>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.ShadowX) {\r\n\t\t\t\t\tcurrentSpanStyles.shadowDepthX = (<parts.ShadowX>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.ShadowY) {\r\n\t\t\t\t\tcurrentSpanStyles.shadowDepthY = (<parts.ShadowY>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Blur) {\r\n\t\t\t\t\tcurrentSpanStyles.blur = (<parts.Blur>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.GaussianBlur) {\r\n\t\t\t\t\tcurrentSpanStyles.gaussianBlur = (<parts.GaussianBlur>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.FontName) {\r\n\t\t\t\t\tcurrentSpanStyles.fontName = (<parts.FontName>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.FontSize) {\r\n\t\t\t\t\tcurrentSpanStyles.fontSize = (<parts.FontSize>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.FontSizePlus) {\r\n\t\t\t\t\tcurrentSpanStyles.fontSize += (<parts.FontSizePlus>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.FontSizeMinus) {\r\n\t\t\t\t\tcurrentSpanStyles.fontSize -= (<parts.FontSizeMinus>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.FontScaleX) {\r\n\t\t\t\t\tcurrentSpanStyles.fontScaleX = (<parts.FontScaleX>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.FontScaleY) {\r\n\t\t\t\t\tcurrentSpanStyles.fontScaleY = (<parts.FontScaleY>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.LetterSpacing) {\r\n\t\t\t\t\tcurrentSpanStyles.letterSpacing = (<parts.LetterSpacing>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.RotateX) {\r\n\t\t\t\t\tcurrentSpanStyles.rotationX = (<parts.RotateX>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.RotateY) {\r\n\t\t\t\t\tcurrentSpanStyles.rotationY = (<parts.RotateY>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.RotateZ) {\r\n\t\t\t\t\tcurrentSpanStyles.rotationZ = (<parts.RotateZ>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.SkewX) {\r\n\t\t\t\t\tcurrentSpanStyles.skewX = (<parts.SkewX>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.SkewY) {\r\n\t\t\t\t\tcurrentSpanStyles.skewY = (<parts.SkewY>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.PrimaryColor) {\r\n\t\t\t\t\tcurrentSpanStyles.primaryColor = (<parts.PrimaryColor>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.SecondaryColor) {\r\n\t\t\t\t\tcurrentSpanStyles.secondaryColor = (<parts.SecondaryColor>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.OutlineColor) {\r\n\t\t\t\t\tcurrentSpanStyles.outlineColor = (<parts.OutlineColor>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.ShadowColor) {\r\n\t\t\t\t\tcurrentSpanStyles.shadowColor = (<parts.ShadowColor>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Alpha) {\r\n\t\t\t\t\tcurrentSpanStyles.primaryAlpha = (<parts.Alpha>part).value;\r\n\t\t\t\t\tcurrentSpanStyles.secondaryAlpha = (<parts.Alpha>part).value;\r\n\t\t\t\t\tcurrentSpanStyles.outlineAlpha = (<parts.Alpha>part).value;\r\n\t\t\t\t\tcurrentSpanStyles.shadowAlpha = (<parts.Alpha>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.PrimaryAlpha) {\r\n\t\t\t\t\tcurrentSpanStyles.primaryAlpha = (<parts.PrimaryAlpha>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.SecondaryAlpha) {\r\n\t\t\t\t\tcurrentSpanStyles.secondaryAlpha = (<parts.SecondaryAlpha>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.OutlineAlpha) {\r\n\t\t\t\t\tcurrentSpanStyles.outlineAlpha = (<parts.OutlineAlpha>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.ShadowAlpha) {\r\n\t\t\t\t\tcurrentSpanStyles.shadowAlpha = (<parts.ShadowAlpha>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Alignment) {\r\n\t\t\t\t\t// Already handled in Dialogue\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.WrappingStyle) {\r\n\t\t\t\t\twrappingStyle = (<parts.WrappingStyle>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Reset) {\r\n\t\t\t\t\tvar newStyleName = (<parts.Reset>part).value;\r\n\t\t\t\t\tvar newStyle: Style = null;\r\n\t\t\t\t\tif (newStyleName !== null) {\r\n\t\t\t\t\t\tnewStyle = this.ass.styles.get(newStyleName);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrentSpanStyles.reset(newStyle);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Position) {\r\n\t\t\t\t\tvar positionPart = <parts.Position>part;\r\n\r\n\t\t\t\t\tsub.style.position = \"absolute\";\r\n\t\t\t\t\tsub.style.left = (this._scaleX * positionPart.x).toFixed(3) + \"px\";\r\n\t\t\t\t\tsub.style.top = (this._scaleY * positionPart.y).toFixed(3) + \"px\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Move) {\r\n\t\t\t\t\tvar movePart = <parts.Move>part;\r\n\r\n\t\t\t\t\tsub.style.position = \"absolute\";\r\n\t\t\t\t\tanimationCollection.add(\"linear\", [new Keyframe(0, new Map([\r\n\t\t\t\t\t\t[\"left\", (this._scaleX * movePart.x1).toFixed(3) + \"px\"],\r\n\t\t\t\t\t\t[\"top\", (this._scaleY * movePart.y1).toFixed(3) + \"px\"],\r\n\t\t\t\t\t])), new Keyframe(movePart.t1, new Map([\r\n\t\t\t\t\t\t[\"left\", (this._scaleX * movePart.x1).toFixed(3) + \"px\"],\r\n\t\t\t\t\t\t[\"top\", (this._scaleY * movePart.y1).toFixed(3) + \"px\"],\r\n\t\t\t\t\t])), new Keyframe(movePart.t2, new Map([\r\n\t\t\t\t\t\t[\"left\", (this._scaleX * movePart.x2).toFixed(3) + \"px\"],\r\n\t\t\t\t\t\t[\"top\", (this._scaleY * movePart.y2).toFixed(3) + \"px\"],\r\n\t\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start, new Map([\r\n\t\t\t\t\t\t[\"left\", (this._scaleX * movePart.x2).toFixed(3) + \"px\"],\r\n\t\t\t\t\t\t[\"top\", (this._scaleY * movePart.y2).toFixed(3) + \"px\"],\r\n\t\t\t\t\t]))]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Fade) {\r\n\t\t\t\t\tvar fadePart = <parts.Fade>part;\r\n\r\n\t\t\t\t\tanimationCollection.add(\"linear\", [new Keyframe(0, new Map([\r\n\t\t\t\t\t\t[\"opacity\", \"0\"],\r\n\t\t\t\t\t])), new Keyframe(fadePart.start, new Map([\r\n\t\t\t\t\t\t[\"opacity\", \"1\"],\r\n\t\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start - fadePart.end, new Map([\r\n\t\t\t\t\t\t[\"opacity\", \"1\"],\r\n\t\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start, new Map([\r\n\t\t\t\t\t\t[\"opacity\", \"0\"],\r\n\t\t\t\t\t]))]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.ComplexFade) {\r\n\t\t\t\t\tvar complexFadePart = <parts.ComplexFade>part;\r\n\r\n\t\t\t\t\tanimationCollection.add(\"linear\", [new Keyframe(0, new Map([\r\n\t\t\t\t\t\t[\"opacity\", complexFadePart.a1.toFixed(3)],\r\n\t\t\t\t\t])), new Keyframe(complexFadePart.t1, new Map([\r\n\t\t\t\t\t\t[\"opacity\", complexFadePart.a1.toFixed(3)],\r\n\t\t\t\t\t])), new Keyframe(complexFadePart.t2, new Map([\r\n\t\t\t\t\t\t[\"opacity\", complexFadePart.a2.toFixed(3)],\r\n\t\t\t\t\t])), new Keyframe(complexFadePart.t3, new Map([\r\n\t\t\t\t\t\t[\"opacity\", complexFadePart.a2.toFixed(3)],\r\n\t\t\t\t\t])), new Keyframe(complexFadePart.t4, new Map([\r\n\t\t\t\t\t\t[\"opacity\", complexFadePart.a3.toFixed(3)],\r\n\t\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start, new Map([\r\n\t\t\t\t\t\t[\"opacity\", complexFadePart.a3.toFixed(3)],\r\n\t\t\t\t\t]))]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.DrawingMode) {\r\n\t\t\t\t\tvar drawingModePart = <parts.DrawingMode>part;\r\n\t\t\t\t\tif (drawingModePart.scale !== 0) {\r\n\t\t\t\t\t\tcurrentDrawingStyles.scale = drawingModePart.scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.DrawingBaselineOffset) {\r\n\t\t\t\t\tcurrentDrawingStyles.baselineOffset = (<parts.DrawingBaselineOffset>part).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.DrawingInstructions) {\r\n\t\t\t\t\tcurrentSpan.appendChild(currentDrawingStyles.toSVG(<parts.DrawingInstructions>part, currentSpanStyles.primaryColor.withAlpha(currentSpanStyles.primaryAlpha)));\r\n\t\t\t\t\tstartNewSpan(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.Text) {\r\n\t\t\t\t\tcurrentSpan.appendChild(document.createTextNode((<parts.Text>part).value));\r\n\t\t\t\t\tstartNewSpan(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (libjass.debugMode && part instanceof parts.Comment) {\r\n\t\t\t\t\tcurrentSpan.appendChild(document.createTextNode((<parts.Comment>part).value));\r\n\t\t\t\t\tstartNewSpan(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (part instanceof parts.NewLine) {\r\n\t\t\t\t\tstartNewSpan(true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tdialogue.parts.some(part => {\r\n\t\t\t\tif (part instanceof parts.Position || part instanceof parts.Move) {\r\n\t\t\t\t\tvar transformOrigin = WebRenderer._transformOrigins[dialogue.alignment];\r\n\r\n\t\t\t\t\tvar divTransformStyle = \"translate(\" + (-transformOrigin[0]) + \"%, \" + (-transformOrigin[1]) + \"%) translate(-\" + sub.style.marginLeft + \", -\" + sub.style.marginTop + \")\";\r\n\t\t\t\t\tvar transformOriginString = transformOrigin[0] + \"% \" + transformOrigin[1] + \"%\";\r\n\r\n\t\t\t\t\tsub.style.webkitTransform = divTransformStyle;\r\n\t\t\t\t\tsub.style.webkitTransformOrigin = transformOriginString;\r\n\r\n\t\t\t\t\tsub.style.transform = divTransformStyle;\r\n\t\t\t\t\tsub.style.transformOrigin = transformOriginString;\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\r\n\t\t\tswitch (wrappingStyle) {\r\n\t\t\t\tcase WrappingStyle.SmartWrappingWithWiderTopLine:\r\n\t\t\t\tcase WrappingStyle.SmartWrappingWithWiderBottomLine:\r\n\t\t\t\t\tsub.style.whiteSpace = \"pre-wrap\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase WrappingStyle.EndOfLineWrapping:\r\n\t\t\t\tcase WrappingStyle.NoLineWrapping:\r\n\t\t\t\t\tsub.style.whiteSpace = \"pre\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (sub.style.position !== \"\") {\r\n\t\t\t\t// Explicitly set text alignment on absolutely-positioned subs because they'll go in a .an0 <div> and so won't get alignment CSS text-align.\r\n\t\t\t\tswitch (dialogue.alignment) {\r\n\t\t\t\t\tcase 1: case 4: case 7: sub.style.textAlign = \"left\"; break;\r\n\t\t\t\t\tcase 2: case 5: case 8: sub.style.textAlign = \"center\"; break;\r\n\t\t\t\t\tcase 3: case 6: case 9: sub.style.textAlign = \"right\"; break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._animationStyleElement === null) {\r\n\t\t\t\tthis._animationStyleElement = document.createElement(\"style\");\r\n\t\t\t\tthis._animationStyleElement.id = \"libjass-animation-styles-\" + this.id;\r\n\t\t\t\tthis._animationStyleElement.type = \"text/css\";\r\n\t\t\t\tdocument.querySelector(\"head\").appendChild(this._animationStyleElement);\r\n\t\t\t}\r\n\r\n\t\t\tthis._animationStyleElement.appendChild(document.createTextNode(animationCollection.cssText));\r\n\r\n\t\t\tsub.style.webkitAnimation = animationCollection.animationStyle;\r\n\t\t\tsub.style.animation = animationCollection.animationStyle;\r\n\r\n\t\t\tsub.setAttribute(\"data-dialogue-id\", this.id + \"-\" + dialogue.id);\r\n\r\n\t\t\tthis._preRenderedSubs.set(dialogue.id, { sub: sub, animationDelays: animationCollection.animationDelays });\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the subtitle div for display. The {@link libjass.renderers.WebRenderer.currentTime} is used to shift the animations appropriately, so that at the time the\r\n\t\t * div is inserted into the DOM and the animations begin, they are in sync with the clock time.\r\n\t\t *\r\n\t\t * @param {!libjass.Dialogue} dialogue\r\n\t\t */\r\n\t\tdraw(dialogue: Dialogue): void {\r\n\t\t\tif (this._currentSubs.has(dialogue)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (libjass.debugMode) {\r\n\t\t\t\tconsole.log(dialogue.toString());\r\n\t\t\t}\r\n\r\n\t\t\tvar preRenderedSub = this._preRenderedSubs.get(dialogue.id);\r\n\r\n\t\t\tif (preRenderedSub === undefined) {\r\n\t\t\t\tif (libjass.debugMode) {\r\n\t\t\t\t\tconsole.warn(\"This dialogue was not pre-rendered. Call preRender() before calling draw() so that draw() is faster.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.preRender(dialogue);\r\n\t\t\t\tpreRenderedSub = this._preRenderedSubs.get(dialogue.id);\r\n\r\n\t\t\t\tif (libjass.debugMode) {\r\n\t\t\t\t\tconsole.log(dialogue.toString());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar result = <HTMLDivElement>preRenderedSub.sub.cloneNode(true);\r\n\r\n\t\t\tvar animationDelay = preRenderedSub.animationDelays.map(delay => ((delay + dialogue.start - this.clock.currentTime) / this.clock.rate).toFixed(3) + \"s\").join(\", \");\r\n\t\t\tresult.style.webkitAnimationDelay = animationDelay;\r\n\t\t\tresult.style.animationDelay = animationDelay;\r\n\r\n\t\t\tvar layer = dialogue.layer;\r\n\t\t\tvar alignment = (result.style.position === \"absolute\") ? 0 : dialogue.alignment; // Alignment 0 is for absolutely-positioned subs\r\n\r\n\t\t\t// Create the layer wrapper div and the alignment div inside it if not already created\r\n\t\t\tif (this._layerWrappers[layer] === undefined) {\r\n\t\t\t\tvar layerWrapper = document.createElement(\"div\");\r\n\t\t\t\tlayerWrapper.className = \"layer layer\" + layer;\r\n\r\n\t\t\t\t// Find the next greater layer div and insert this div before that one\r\n\t\t\t\tvar insertBeforeElement: HTMLDivElement = null;\r\n\t\t\t\tfor (var insertBeforeLayer = layer + 1; insertBeforeLayer < this._layerWrappers.length && insertBeforeElement === null; insertBeforeLayer++) {\r\n\t\t\t\t\tif (this._layerWrappers[insertBeforeLayer] !== undefined) {\r\n\t\t\t\t\t\tinsertBeforeElement = this._layerWrappers[insertBeforeLayer];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._subsWrapper.insertBefore(layerWrapper, insertBeforeElement);\r\n\r\n\t\t\t\tthis._layerWrappers[layer] = layerWrapper;\r\n\t\t\t\tthis._layerAlignmentWrappers[layer] = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (this._layerAlignmentWrappers[layer][alignment] === undefined) {\r\n\t\t\t\tvar layerAlignmentWrapper = document.createElement(\"div\");\r\n\t\t\t\tlayerAlignmentWrapper.className = \"an an\" + alignment;\r\n\r\n\t\t\t\t// Find the next greater layer,alignment div and insert this div before that one\r\n\t\t\t\tvar layerWrapper = this._layerWrappers[layer];\r\n\t\t\t\tvar insertBeforeElement: HTMLDivElement = null;\r\n\t\t\t\tfor (var insertBeforeAlignment = alignment + 1; insertBeforeAlignment < this._layerAlignmentWrappers[layer].length && insertBeforeElement === null; insertBeforeAlignment++) {\r\n\t\t\t\t\tif (this._layerAlignmentWrappers[layer][insertBeforeAlignment] !== undefined) {\r\n\t\t\t\t\t\tinsertBeforeElement = this._layerAlignmentWrappers[layer][insertBeforeAlignment];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlayerWrapper.insertBefore(layerAlignmentWrapper, insertBeforeElement);\r\n\r\n\t\t\t\tthis._layerAlignmentWrappers[layer][alignment] = layerAlignmentWrapper;\r\n\t\t\t}\r\n\r\n\t\t\tthis._layerAlignmentWrappers[layer][alignment].appendChild(result);\r\n\r\n\t\t\tthis._currentSubs.set(dialogue, result);\r\n\t\t}\r\n\r\n\t\tprotected _onClockPlay(): void {\r\n\t\t\tsuper._onClockPlay();\r\n\r\n\t\t\tthis._removeAllSubs();\r\n\r\n\t\t\tthis._subsWrapper.style.display = \"\";\r\n\r\n\t\t\tthis._subsWrapper.classList.remove(\"paused\");\r\n\t\t}\r\n\r\n\t\tprotected _onClockTick(): void {\r\n\t\t\t// Remove dialogues that should be removed before adding new ones via super._onClockTick()\r\n\r\n\t\t\tvar currentTime = this.clock.currentTime;\r\n\r\n\t\t\tthis._currentSubs.forEach((sub: HTMLDivElement, dialogue: Dialogue) => {\r\n\t\t\t\tif (dialogue.start > currentTime || dialogue.end < currentTime) {\r\n\t\t\t\t\tthis._currentSubs.delete(dialogue);\r\n\t\t\t\t\tthis._removeSub(sub);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsuper._onClockTick();\r\n\t\t}\r\n\r\n\t\tprotected _onClockPause(): void {\r\n\t\t\tsuper._onClockPause();\r\n\r\n\t\t\tthis._subsWrapper.classList.add(\"paused\");\r\n\t\t}\r\n\r\n\t\tprotected _onClockStop(): void {\r\n\t\t\tsuper._onClockStop();\r\n\r\n\t\t\tthis._subsWrapper.style.display = \"none\";\r\n\t\t}\r\n\r\n\t\tprotected _onClockRateChange(): void {\r\n\t\t\tsuper._onClockRateChange();\r\n\r\n\t\t\t// Any dialogues which have been pre-rendered will need to be pre-rendered again.\r\n\t\t\tthis._preRenderedSubs.clear();\r\n\r\n\t\t\tif (this._animationStyleElement !== null) {\r\n\t\t\t\twhile (this._animationStyleElement.firstChild !== null) {\r\n\t\t\t\t\tthis._animationStyleElement.removeChild(this._animationStyleElement.firstChild);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile (this._svgDefsElement.firstChild !== null) {\r\n\t\t\t\tthis._svgDefsElement.removeChild(this._svgDefsElement.firstChild);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprotected _ready(): void {\r\n\t\t\tthis._dispatchEvent(\"ready\", []);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!HTMLDivElement} sub\r\n\t\t */\r\n\t\tprivate _removeSub(sub: HTMLDivElement): void {\r\n\t\t\tsub.parentNode.removeChild(sub);\r\n\t\t}\r\n\r\n\t\tprivate _removeAllSubs(): void {\r\n\t\t\tthis._currentSubs.forEach((sub: HTMLDivElement) => this._removeSub(sub));\r\n\t\t\tthis._currentSubs.clear();\r\n\t\t}\r\n\r\n\t\tprivate static _transformOrigins: number[][] = [\r\n\t\t\tnull,\r\n\t\t\t[0, 100], [50, 100], [100, 100],\r\n\t\t\t[0, 50], [50, 50], [100, 50],\r\n\t\t\t[0, 0], [50, 0], [100, 0]\r\n\t\t];\r\n\r\n\t\t// EventSource members\r\n\r\n\t\t/**\r\n\t\t * @type {!Map.<T, !Array.<Function>>}\r\n\t\t */\r\n\t\t_eventListeners: Map<string, Function[]> = new Map<string, Function[]>();\r\n\r\n\t\t/**\r\n\t\t * @type {function(number, !Function)}\r\n\t\t */\r\n\t\taddEventListener: (type: string, listener: Function) => void;\r\n\r\n\t\t/**\r\n\t\t * @type {function(number, Array.<*>)}\r\n\t\t */\r\n\t\t_dispatchEvent: (type: string, args: Object[]) => void;\r\n\t}\r\n\tmixin(WebRenderer, [EventSource]);\r\n\r\n\t/**\r\n\t * This class represents the style attribute of a span.\r\n\t * As a Dialogue's div is rendered, individual parts are added to span's, and this class is used to maintain the style attribute of those.\r\n\t *\r\n\t * @param {!libjass.renderers.NullRenderer} renderer The renderer that this set of styles is associated with\r\n\t * @param {!libjass.Dialogue} dialogue The Dialogue that this set of styles is associated with\r\n\t * @param {number} scaleX The horizontal scaling of the subtitles\r\n\t * @param {number} scaleY The vertical scaling of the subtitles\r\n\t * @param {!libjass.renderers.RendererSettings} settings The renderer settings\r\n\t * @param {!HTMLDivElement} fontSizeElement A <div> element to measure font sizes with\r\n\t * @param {!SVGDefsElement} svgDefsElement An SVG <defs> element to append filter definitions to\r\n\t */\r\n\tclass SpanStyles {\r\n\t\tprivate static _fontSizeCache: Map<string, Map<number, number>> = new Map<string, Map<number, number>>();\r\n\r\n\t\tprivate _id: string;\r\n\t\tprivate _defaultStyle: Style;\r\n\r\n\t\tprivate _italic: boolean;\r\n\t\tprivate _bold: Object;\r\n\t\tprivate _underline: boolean;\r\n\t\tprivate _strikeThrough: boolean;\r\n\r\n\t\tprivate _outlineWidth: number;\r\n\t\tprivate _outlineHeight: number;\r\n\r\n\t\tprivate _shadowDepthX: number;\r\n\t\tprivate _shadowDepthY: number;\r\n\r\n\t\tprivate _fontName: string;\r\n\t\tprivate _fontSize: number;\r\n\r\n\t\tprivate _fontScaleX: number;\r\n\t\tprivate _fontScaleY: number;\r\n\r\n\t\tprivate _letterSpacing: number;\r\n\r\n\t\tprivate _rotationX: number;\r\n\t\tprivate _rotationY: number;\r\n\t\tprivate _rotationZ: number;\r\n\r\n\t\tprivate _skewX: number;\r\n\t\tprivate _skewY: number;\r\n\r\n\t\tprivate _primaryColor: parts.Color;\r\n\t\tprivate _secondaryColor: parts.Color;\r\n\t\tprivate _outlineColor: parts.Color;\r\n\t\tprivate _shadowColor: parts.Color;\r\n\r\n\t\tprivate _primaryAlpha: number;\r\n\t\tprivate _secondaryAlpha: number;\r\n\t\tprivate _outlineAlpha: number;\r\n\t\tprivate _shadowAlpha: number;\r\n\r\n\t\tprivate _blur: number;\r\n\t\tprivate _gaussianBlur: number;\r\n\r\n\t\tprivate _nextFilterId = 0;\r\n\r\n\t\tconstructor(renderer: WebRenderer, dialogue: Dialogue, private _scaleX: number, private _scaleY: number, private _settings: RendererSettings, private _fontSizeElement: HTMLDivElement, private _svgDefsElement: SVGDefsElement) {\r\n\t\t\tthis._id = renderer.id + \"-\" + dialogue.id;\r\n\t\t\tthis._defaultStyle = dialogue.style;\r\n\r\n\t\t\tthis.reset(null);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Resets the styles to the defaults provided by the argument.\r\n\t\t *\r\n\t\t * @param {libjass.Style} newStyle The new defaults to reset the style to. If null, the styles are reset to the default style of the Dialogue.\r\n\t\t */\r\n\t\treset(newStyle: Style): void {\r\n\t\t\tif (newStyle === undefined || newStyle === null) {\r\n\t\t\t\tnewStyle = this._defaultStyle;\r\n\t\t\t}\r\n\r\n\t\t\tthis.italic = newStyle.italic;\r\n\t\t\tthis.bold = newStyle.bold;\r\n\t\t\tthis.underline = newStyle.underline;\r\n\t\t\tthis.strikeThrough = newStyle.strikeThrough;\r\n\r\n\t\t\tthis.outlineWidth = newStyle.outlineThickness;\r\n\t\t\tthis.outlineHeight = newStyle.outlineThickness;\r\n\r\n\t\t\tthis.shadowDepthX = newStyle.shadowDepth;\r\n\t\t\tthis.shadowDepthY = newStyle.shadowDepth;\r\n\r\n\t\t\tthis.fontName = newStyle.fontName;\r\n\t\t\tthis.fontSize = newStyle.fontSize;\r\n\r\n\t\t\tthis.fontScaleX = newStyle.fontScaleX;\r\n\t\t\tthis.fontScaleY = newStyle.fontScaleY;\r\n\r\n\t\t\tthis.letterSpacing = newStyle.letterSpacing;\r\n\r\n\t\t\tthis._rotationX = null;\r\n\t\t\tthis._rotationY = null;\r\n\t\t\tthis._rotationZ = newStyle.rotationZ;\r\n\r\n\t\t\tthis._skewX = null;\r\n\t\t\tthis._skewY = null;\r\n\r\n\t\t\tthis.primaryColor = newStyle.primaryColor;\r\n\t\t\tthis.secondaryColor = newStyle.secondaryColor;\r\n\t\t\tthis.outlineColor = newStyle.outlineColor;\r\n\t\t\tthis.shadowColor = newStyle.shadowColor;\r\n\r\n\t\t\tthis.primaryAlpha = null;\r\n\t\t\tthis.secondaryAlpha = null;\r\n\t\t\tthis.outlineAlpha = null;\r\n\t\t\tthis.shadowAlpha = null;\r\n\r\n\t\t\tthis.blur = null;\r\n\t\t\tthis.gaussianBlur = null;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the style attribute on the given span element.\r\n\t\t *\r\n\t\t * @param {!HTMLSpanElement} span\r\n\t\t * @return {!HTMLSpanElement} The resulting <span> with the CSS styles applied. This may be a wrapper around the input <span> if the styles were applied using SVG filters.\r\n\t\t */\r\n\t\tsetStylesOnSpan(span: HTMLSpanElement): HTMLSpanElement {\r\n\t\t\tvar isTextOnlySpan = span.childNodes[0] instanceof Text;\r\n\r\n\t\t\tvar fontStyleOrWeight = \"\";\r\n\t\t\tif (this._italic) {\r\n\t\t\t\tfontStyleOrWeight += \"italic \";\r\n\t\t\t}\r\n\t\t\tif (this._bold === true) {\r\n\t\t\t\tfontStyleOrWeight += \"bold \";\r\n\t\t\t}\r\n\t\t\telse if (this._bold !== false) {\r\n\t\t\t\tfontStyleOrWeight += (<string>this._bold + \" \");\r\n\t\t\t}\r\n\t\t\tvar fontSize: string;\r\n\t\t\tif (isTextOnlySpan) {\r\n\t\t\t\tfontSize = (this._scaleY * SpanStyles._getFontSize(this._fontName, this._fontSize * this._fontScaleY, this._fontSizeElement)).toFixed(3);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfontSize = (this._scaleY * SpanStyles._getFontSize(this._fontName, this._fontSize, this._fontSizeElement)).toFixed(3);\r\n\t\t\t}\r\n\t\t\tvar lineHeight = (this._scaleY * this._fontSize).toFixed(3);\r\n\t\t\tspan.style.font = fontStyleOrWeight + fontSize + \"px/\" + lineHeight + \"px \\\"\" + this._fontName + \"\\\"\";\r\n\r\n\t\t\tvar textDecoration = \"\";\r\n\t\t\tif (this._underline) {\r\n\t\t\t\ttextDecoration = \"underline\";\r\n\t\t\t}\r\n\t\t\tif (this._strikeThrough) {\r\n\t\t\t\ttextDecoration += \" line-through\";\r\n\t\t\t}\r\n\t\t\tspan.style.textDecoration = textDecoration.trim();\r\n\r\n\t\t\tvar transform = \"\";\r\n\t\t\tif (isTextOnlySpan) {\r\n\t\t\t\tif (this._fontScaleY !== this._fontScaleX) {\r\n\t\t\t\t\ttransform += \"scaleY(\" + (this._fontScaleY / this._fontScaleX).toFixed(3) + \") \";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._fontScaleX !== 1) {\r\n\t\t\t\t\ttransform += \"scaleX(\" + this._fontScaleX + \") \";\r\n\t\t\t\t}\r\n\t\t\t\tif (this._fontScaleY !== 1) {\r\n\t\t\t\t\ttransform += \"scaleY(\" + this._fontScaleY + \") \";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this._rotationY !== null) {\r\n\t\t\t\ttransform += \"rotateY(\" + this._rotationY + \"deg) \";\r\n\t\t\t}\r\n\t\t\tif (this._rotationX !== null) {\r\n\t\t\t\ttransform += \"rotateX(\" + this._rotationX + \"deg) \";\r\n\t\t\t}\r\n\t\t\tif (this._rotationZ !== 0) {\r\n\t\t\t\ttransform += \"rotateZ(\" + (-1 * this._rotationZ) + \"deg) \";\r\n\t\t\t}\r\n\t\t\tif (this._skewX !== null || this._skewY !== null) {\r\n\t\t\t\tvar skewX = SpanStyles._valueOrDefault(this._skewX, 0);\r\n\t\t\t\tvar skewY = SpanStyles._valueOrDefault(this._skewY, 0);\r\n\t\t\t\ttransform += \"matrix(1, \" + skewY + \", \" + skewX + \", 1, 0, 0) \";\r\n\t\t\t}\r\n\t\t\tif (transform !== \"\") {\r\n\t\t\t\tspan.style.webkitTransform = transform;\r\n\t\t\t\tspan.style.webkitTransformOrigin = \"50% 50%\";\r\n\t\t\t\tspan.style.transform = transform;\r\n\t\t\t\tspan.style.transformOrigin = \"50% 50%\";\r\n\t\t\t\tspan.style.display = \"inline-block\";\r\n\t\t\t}\r\n\r\n\t\t\tspan.style.letterSpacing = (this._scaleX * this._letterSpacing).toFixed(3) + \"px\";\r\n\r\n\t\t\tvar primaryColor = this._primaryColor.withAlpha(this._primaryAlpha);\r\n\t\t\tspan.style.color = primaryColor.toString();\r\n\r\n\t\t\tvar outlineColor = this._outlineColor.withAlpha(this._outlineAlpha);\r\n\r\n\t\t\tvar outlineWidth = this._scaleX * this._outlineWidth;\r\n\t\t\tvar outlineHeight = this._scaleY * this._outlineHeight;\r\n\r\n\t\t\tvar outlineFilter = '';\r\n\t\t\tvar blurFilter = '';\r\n\r\n\t\t\tif (this._settings.enableSvg) {\r\n\t\t\t\tvar filterId = \"svg-filter-\" + this._id + \"-\" + this._nextFilterId++;\r\n\r\n\t\t\t\tif (outlineWidth > 0 || outlineHeight > 0) {\r\n\t\t\t\t\t/* Construct an elliptical border by merging together many rectangles. The border is creating using dilate morphology filters, but these only support\r\n\t\t\t\t\t * generating rectangles.   http://lists.w3.org/Archives/Public/public-fx/2012OctDec/0003.html\r\n\t\t\t\t\t */\r\n\r\n\t\t\t\t\tvar mergeOutlinesFilter = '';\r\n\r\n\t\t\t\t\tvar outlineNumber = 0;\r\n\r\n\t\t\t\t\tvar increment = (!this._settings.preciseOutlines && this._gaussianBlur > 0) ? this._gaussianBlur : 1;\r\n\r\n\t\t\t\t\t((addOutline: (x: number, y: number) => void) => {\r\n\t\t\t\t\t\tif (outlineWidth <= outlineHeight) {\r\n\t\t\t\t\t\t\tif (outlineWidth > 0) {\r\n\t\t\t\t\t\t\t\tfor (var x = 0; x <= outlineWidth; x += increment) {\r\n\t\t\t\t\t\t\t\t\taddOutline(x, outlineHeight / outlineWidth * Math.sqrt(outlineWidth * outlineWidth - x * x));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (x !== outlineWidth + increment) {\r\n\t\t\t\t\t\t\t\t\taddOutline(outlineWidth, 0);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\taddOutline(0, outlineHeight);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (outlineHeight > 0) {\r\n\t\t\t\t\t\t\t\tfor (var y = 0; y <= outlineHeight; y += increment) {\r\n\t\t\t\t\t\t\t\t\taddOutline(outlineWidth / outlineHeight * Math.sqrt(outlineHeight * outlineHeight - y * y), y);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (y !== outlineHeight + increment) {\r\n\t\t\t\t\t\t\t\t\taddOutline(0, outlineHeight);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\taddOutline(outlineWidth, 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})((x: number, y: number): void => {\r\n\t\t\t\t\t\toutlineFilter +=\r\n\t\t\t\t\t\t\t'\\t<feMorphology in=\"SourceAlpha\" operator=\"dilate\" radius=\"' + x.toFixed(3) + ' ' + y.toFixed(3) + '\" result=\"outline' + outlineNumber + '\" />\\n';\r\n\r\n\t\t\t\t\t\tmergeOutlinesFilter +=\r\n\t\t\t\t\t\t\t'\\t\\t<feMergeNode in=\"outline' + outlineNumber + '\" />\\n';\r\n\r\n\t\t\t\t\t\toutlineNumber++;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\toutlineFilter +=\r\n\t\t\t\t\t\t'\\t<feMerge result=\"outline\">\\n' +\r\n\t\t\t\t\t\tmergeOutlinesFilter +\r\n\t\t\t\t\t\t'\\t</feMerge>\\n' +\r\n\t\t\t\t\t\t'\\t<feFlood flood-color=\"' + outlineColor.toString() + '\" />' +\r\n\t\t\t\t\t\t'\\t<feComposite operator=\"in\" in2=\"outline\" />';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._gaussianBlur > 0) {\r\n\t\t\t\t\tblurFilter +=\r\n\t\t\t\t\t\t'\\t<feGaussianBlur stdDeviation=\"' + this._gaussianBlur + '\" />\\n';\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0; i < this._blur; i++) {\r\n\t\t\t\t\tblurFilter +=\r\n\t\t\t\t\t\t'\\t<feConvolveMatrix kernelMatrix=\"1 2 1 2 4 2 1 2 1\" edgeMode=\"none\" />\\n';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (outlineWidth > 0 || outlineHeight > 0) {\r\n\t\t\t\t\tvar outlineCssString = \"\";\r\n\r\n\t\t\t\t\t((addOutline: (x: number, y: number) => void) => {\r\n\t\t\t\t\t\tfor (var x = 0; x <= outlineWidth; x++) {\r\n\t\t\t\t\t\t\tvar maxY = (outlineWidth === 0) ? outlineHeight : outlineHeight * Math.sqrt(1 - ((x * x) / (outlineWidth * outlineWidth)));\r\n\t\t\t\t\t\t\tfor (var y = 0; y <= maxY; y++) {\r\n\t\t\t\t\t\t\t\taddOutline(x, y);\r\n\r\n\t\t\t\t\t\t\t\tif (x !== 0) {\r\n\t\t\t\t\t\t\t\t\taddOutline(-x, y);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (y !== 0) {\r\n\t\t\t\t\t\t\t\t\taddOutline(x, -y);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (x !== 0 && y !== 0) {\r\n\t\t\t\t\t\t\t\t\taddOutline(-x, -y);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})((x: number, y: number): void => {\r\n\t\t\t\t\t\toutlineCssString += \", \" + outlineColor.toString() + \" \" + x + \"px \" + y + \"px \" + this._gaussianBlur.toFixed(3) + \"px\";\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tspan.style.textShadow = outlineCssString.substr(\", \".length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar filterWrapperSpan = document.createElement(\"span\");\r\n\t\t\tfilterWrapperSpan.appendChild(span);\r\n\r\n\t\t\tif (outlineFilter !== '' || blurFilter !== '') {\r\n\t\t\t\tvar filterString =\r\n\t\t\t\t\t'<filter xmlns=\"http://www.w3.org/2000/svg\" id=\"' + filterId + '\" x=\"-50%\" width=\"200%\" y=\"-50%\" height=\"200%\">\\n' +\r\n\t\t\t\t\toutlineFilter +\r\n\t\t\t\t\tblurFilter +\r\n\t\t\t\t\t'\\t<feMerge>\\n' +\r\n\t\t\t\t\t'\\t\\t<feMergeNode />\\n' +\r\n\t\t\t\t\t'\\t\\t<feMergeNode in=\"SourceGraphic\" />\\n' +\r\n\t\t\t\t\t'\\t</feMerge>\\n' +\r\n\t\t\t\t\t'</filter>\\n';\r\n\r\n\t\t\t\tvar filterElement = domParser.parseFromString(filterString, \"image/svg+xml\").childNodes[0];\r\n\r\n\t\t\t\tthis._svgDefsElement.appendChild(filterElement);\r\n\r\n\t\t\t\tfilterWrapperSpan.style.webkitFilter = 'url(\"#' + filterId + '\")';\r\n\t\t\t\tfilterWrapperSpan.style.filter = 'url(\"#' + filterId + '\")';\r\n\t\t\t}\r\n\r\n\t\t\tif (this._shadowDepthX !== 0 || this._shadowDepthY !== 0) {\r\n\t\t\t\tvar shadowColor = this._shadowColor.withAlpha(this._shadowAlpha);\r\n\t\t\t\tvar shadowCssString = shadowColor.toString() + \" \" + (this._shadowDepthX * this._scaleX / this._fontScaleX).toFixed(3) + \"px \" + (this._shadowDepthY * this._scaleY / this._fontScaleY).toFixed(3) + \"px 0px\";\r\n\t\t\t\tif (span.style.textShadow === \"\") {\r\n\t\t\t\t\tspan.style.textShadow = shadowCssString;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tspan.style.textShadow += \", \" + shadowCssString;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._rotationX !== 0 || this._rotationY !== 0) {\r\n\t\t\t\t// Perspective needs to be set on a \"transformable element\"\r\n\t\t\t\tfilterWrapperSpan.style.display = \"inline-block\";\r\n\t\t\t}\r\n\r\n\t\t\treturn filterWrapperSpan;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {!HTMLBRElement}\r\n\t\t */\r\n\t\tmakeNewLine(): HTMLBRElement {\r\n\t\t\tvar result = document.createElement(\"br\");\r\n\t\t\tresult.style.lineHeight = (this._scaleY * this._fontSize).toFixed(3) + \"px\";\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the italic property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {?boolean}\r\n\t\t */\r\n\t\tset italic(value: boolean) {\r\n\t\t\tthis._italic = SpanStyles._valueOrDefault(value, this._defaultStyle.italic);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the bold property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {(?number|?boolean)}\r\n\t\t */\r\n\t\tset bold(value: Object) {\r\n\t\t\tthis._bold = SpanStyles._valueOrDefault(value, this._defaultStyle.bold);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the underline property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {?boolean}\r\n\t\t */\r\n\t\tset underline(value: boolean) {\r\n\t\t\tthis._underline = SpanStyles._valueOrDefault(value, this._defaultStyle.underline);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the strike-through property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {?boolean}\r\n\t\t */\r\n\t\tset strikeThrough(value: boolean) {\r\n\t\t\tthis._strikeThrough = SpanStyles._valueOrDefault(value, this._defaultStyle.strikeThrough);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the outline width property. null defaults it to the style's original outline width value.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset outlineWidth(value: number) {\r\n\t\t\tthis._outlineWidth = SpanStyles._valueOrDefault(value, this._defaultStyle.outlineThickness);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the outline height property. null defaults it to the style's original outline height value.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset outlineHeight(value: number) {\r\n\t\t\tthis._outlineHeight = SpanStyles._valueOrDefault(value, this._defaultStyle.outlineThickness);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the outline width property. null defaults it to the style's original shadow depth X value.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset shadowDepthX(value: number) {\r\n\t\t\tthis._shadowDepthX = SpanStyles._valueOrDefault(value, this._defaultStyle.shadowDepth);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the shadow height property. null defaults it to the style's original shadow depth Y value.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset shadowDepthY(value: number) {\r\n\t\t\tthis._shadowDepthY = SpanStyles._valueOrDefault(value, this._defaultStyle.shadowDepth);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the blur property. null defaults it to 0.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset blur(value: number) {\r\n\t\t\tthis._blur = SpanStyles._valueOrDefault(value, 0);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the Gaussian blur property. null defaults it to 0.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset gaussianBlur(value: number) {\r\n\t\t\tthis._gaussianBlur = SpanStyles._valueOrDefault(value, 0);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the font name property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {?string}\r\n\t\t */\r\n\t\tset fontName(value: string) {\r\n\t\t\tthis._fontName = SpanStyles._valueOrDefault(value, this._defaultStyle.fontName);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the font size property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset fontSize(value: number) {\r\n\t\t\tthis._fontSize = SpanStyles._valueOrDefault(value, this._defaultStyle.fontSize);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the horizontal font scaling property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset fontScaleX(value: number) {\r\n\t\t\tthis._fontScaleX = SpanStyles._valueOrDefault(value, this._defaultStyle.fontScaleX);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the vertical font scaling property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset fontScaleY(value: number) {\r\n\t\t\tthis._fontScaleY = SpanStyles._valueOrDefault(value, this._defaultStyle.fontScaleY);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the letter spacing property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset letterSpacing(value: number) {\r\n\t\t\tthis._letterSpacing = SpanStyles._valueOrDefault(value, this._defaultStyle.letterSpacing);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the X-axis rotation property.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset rotationX(value: number) {\r\n\t\t\tthis._rotationX = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the Y-axis rotation property.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset rotationY(value: number) {\r\n\t\t\tthis._rotationY = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the Z-axis rotation property.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset rotationZ(value: number) {\r\n\t\t\tthis._rotationZ = SpanStyles._valueOrDefault(value, this._defaultStyle.rotationZ);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the X-axis skew property.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset skewX(value: number) {\r\n\t\t\tthis._skewX = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the Y-axis skew property.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset skewY(value: number) {\r\n\t\t\tthis._skewY = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the primary color property.\r\n\t\t *\r\n\t\t * @type {!libjass.parts.Color}\r\n\t\t */\r\n\t\tget primaryColor(): parts.Color {\r\n\t\t\treturn this._primaryColor;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the primary color property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {libjass.parts.Color}\r\n\t\t */\r\n\t\tset primaryColor(value: parts.Color) {\r\n\t\t\tthis._primaryColor = SpanStyles._valueOrDefault(value, this._defaultStyle.primaryColor);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the secondary color property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {libjass.parts.Color}\r\n\t\t */\r\n\t\tset secondaryColor(value: parts.Color) {\r\n\t\t\tthis._secondaryColor = SpanStyles._valueOrDefault(value, this._defaultStyle.secondaryColor);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the outline color property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {libjass.parts.Color}\r\n\t\t */\r\n\t\tset outlineColor(value: parts.Color) {\r\n\t\t\tthis._outlineColor = SpanStyles._valueOrDefault(value, this._defaultStyle.outlineColor);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the shadow color property. null defaults it to the default style's value.\r\n\t\t *\r\n\t\t * @type {libjass.parts.Color}\r\n\t\t */\r\n\t\tset shadowColor(value: parts.Color) {\r\n\t\t\tthis._shadowColor = SpanStyles._valueOrDefault(value, this._defaultStyle.shadowColor);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the primary alpha property.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tget primaryAlpha(): number {\r\n\t\t\treturn this._primaryAlpha;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the primary alpha property.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset primaryAlpha(value: number) {\r\n\t\t\tthis._primaryAlpha = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the secondary alpha property.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset secondaryAlpha(value: number) {\r\n\t\t\tthis._secondaryAlpha = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the outline alpha property.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset outlineAlpha(value: number) {\r\n\t\t\tthis._outlineAlpha = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the shadow alpha property.\r\n\t\t *\r\n\t\t * @type {?number}\r\n\t\t */\r\n\t\tset shadowAlpha(value: number) {\r\n\t\t\tthis._shadowAlpha = value;\r\n\t\t}\r\n\r\n\t\tprivate static _valueOrDefault = <T>(newValue: T, defaultValue: T): T => ((newValue !== null) ? newValue : defaultValue);\r\n\r\n\t\t/**\r\n\t\t * @param {string} fontFamily\r\n\t\t * @param {number} lineHeight\r\n\t\t * @param {!HTMLDivElement} fontSizeElement\r\n\t\t * @return {number}\r\n\t\t */\r\n\t\tprivate static _getFontSize(fontFamily: string, lineHeight: number, fontSizeElement: HTMLDivElement): number {\r\n\t\t\tvar existingFontSizeMap = SpanStyles._fontSizeCache.get(fontFamily);\r\n\t\t\tif (existingFontSizeMap === undefined) {\r\n\t\t\t\tSpanStyles._fontSizeCache.set(fontFamily, existingFontSizeMap = new Map<number, number>());\r\n\t\t\t}\r\n\r\n\t\t\tvar existingFontSize = existingFontSizeMap.get(lineHeight);\r\n\t\t\tif (existingFontSize === undefined) {\r\n\t\t\t\tfontSizeElement.style.fontFamily = fontFamily;\r\n\t\t\t\tfontSizeElement.style.fontSize = lineHeight + \"px\";\r\n\t\t\t\texistingFontSizeMap.set(lineHeight, existingFontSize = lineHeight * lineHeight / fontSizeElement.offsetHeight);\r\n\t\t\t}\r\n\r\n\t\t\treturn existingFontSize;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This class represents a collection of animations. Each animation contains one or more keyframes.\r\n\t * The collection can then be converted to a CSS3 representation.\r\n\t *\r\n\t * @param {!libjass.renderers.NullRenderer} renderer The renderer that this collection is associated with\r\n\t * @param {!libjass.Dialogue} dialogue The Dialogue that this collection is associated with\r\n\t */\r\n\tclass AnimationCollection {\r\n\t\tprivate _id: string;\r\n\t\tprivate _start: number;\r\n\t\tprivate _end: number;\r\n\t\tprivate _rate: number;\r\n\r\n\t\tprivate _cssText: string = \"\";\r\n\t\tprivate _animationStyle: string = \"\";\r\n\t\tprivate _animationDelays: number[] = [];\r\n\t\tprivate _numAnimations: number = 0;\r\n\r\n\t\tconstructor(renderer: NullRenderer, dialogue: Dialogue) {\r\n\t\t\tthis._id = renderer.id + \"-\" + dialogue.id;\r\n\t\t\tthis._start = dialogue.start;\r\n\t\t\tthis._end = dialogue.end;\r\n\t\t\tthis._rate = renderer.clock.rate;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * This string contains the animation definitions and should be inserted into a <style> element.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tget cssText(): string {\r\n\t\t\treturn this._cssText;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * This string should be set as the \"animation\" CSS property of the target element.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tget animationStyle(): string {\r\n\t\t\treturn this._animationStyle;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * This array should be used to set the \"animation-delay\" CSS property of the target element.\r\n\t\t *\r\n\t\t * @type {!Array.<number>}\r\n\t\t */\r\n\t\tget animationDelays(): number[] {\r\n\t\t\treturn this._animationDelays;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Add an animation to this collection. The given keyframes together make one animation.\r\n\t\t *\r\n\t\t * @param {string} timingFunction One of the acceptable values for the \"animation-timing-function\" CSS property\r\n\t\t * @param {Array.<!{time: number, properties: !Object.<string, string>}>} keyframes\r\n\t\t */\r\n\t\tadd(timingFunction: string, keyframes: Keyframe[]): void {\r\n\t\t\tvar startTime: number = null;\r\n\t\t\tvar endTime: number = null;\r\n\r\n\t\t\tvar ruleCssText = \"\";\r\n\r\n\t\t\tkeyframes.forEach(keyframe => {\r\n\t\t\t\tif (startTime === null) {\r\n\t\t\t\t\tstartTime = keyframe.time;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tendTime = keyframe.time;\r\n\r\n\t\t\t\truleCssText += \"\\t\" + (100 * keyframe.time / (this._end - this._start)).toFixed(3) + \"% {\\n\";\r\n\r\n\t\t\t\tkeyframe.properties.forEach((value, name) => {\r\n\t\t\t\t\truleCssText += \"\\t\\t\" + name + \": \" + value + \";\\n\";\r\n\t\t\t\t});\r\n\r\n\t\t\t\truleCssText += \"\\t}\\n\";\r\n\t\t\t});\r\n\r\n\t\t\tvar animationName = \"dialogue-\" + this._id + \"-\" + this._numAnimations++;\r\n\r\n\t\t\tthis._cssText +=\r\n\t\t\t\t\"@-webkit-keyframes \" + animationName + \" {\\n\" + ruleCssText + \"}\\n\\n\" +\r\n\t\t\t\t\"@keyframes \" + animationName + \" {\\n\" + ruleCssText + \"}\\n\\n\";\r\n\r\n\t\t\tif (this._animationStyle !== \"\") {\r\n\t\t\t\tthis._animationStyle += \",\";\r\n\t\t\t}\r\n\r\n\t\t\tthis._animationStyle += animationName + \" \" + ((endTime - startTime) / this._rate).toFixed(3) + \"s \" + timingFunction;\r\n\t\t\tthis._animationDelays.push(startTime);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This class represents a single keyframe. It has a list of CSS properties (names and values) associated with a point in time. Multiple keyframes make up an animation.\r\n\t *\r\n\t * @param {number} time\r\n\t * @param {!Object.<string, string>} properties\r\n\t */\r\n\tclass Keyframe {\r\n\t\tconstructor(private _time: number, private _properties: Map<string, string>) { }\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget time(): number {\r\n\t\t\treturn this._time;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {!Object.<string, string>}\r\n\t\t */\r\n\t\tget properties(): Map<string, string> {\r\n\t\t\treturn this._properties;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This class represents an ASS drawing - a set of drawing instructions between {\\p} tags.\r\n\t *\r\n\t * @param {number} outputScaleX\r\n\t * @param {number} outputScaleY\r\n\t */\r\n\tclass DrawingStyles {\r\n\t\tprivate _scale: number = 1;\r\n\t\tprivate _baselineOffset: number = 0;\r\n\r\n\t\tconstructor(private _outputScaleX: number, private _outputScaleY: number) { }\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tset scale(value: number) {\r\n\t\t\tthis._scale = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tset baselineOffset(value: number) {\r\n\t\t\tthis._baselineOffset = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Converts this drawing to an <svg> element.\r\n\t\t *\r\n\t\t * @param {!libjass.parts.DrawingInstructions} drawingInstructions\r\n\t\t * @param {!libjass.parts.Color} fillColor\r\n\t\t * @return {!SVGSVGElement}\r\n\t\t */\r\n\t\ttoSVG(drawingInstructions: parts.DrawingInstructions, fillColor: parts.Color): SVGElement {\r\n\t\t\tvar scaleFactor = Math.pow(2, this._scale - 1);\r\n\t\t\tvar scaleX = this._outputScaleX / scaleFactor;\r\n\t\t\tvar scaleY = this._outputScaleY / scaleFactor;\r\n\r\n\t\t\tvar path = \"\";\r\n\t\t\tvar bboxWidth = 0;\r\n\t\t\tvar bboxHeight = 0;\r\n\r\n\t\t\tdrawingInstructions.instructions.forEach(instruction => {\r\n\t\t\t\tif (instruction instanceof parts.drawing.MoveInstruction) {\r\n\t\t\t\t\tvar movePart = <parts.drawing.MoveInstruction>instruction;\r\n\t\t\t\t\tpath += \" M \" + movePart.x + \" \" + (movePart.y + this._baselineOffset);\r\n\t\t\t\t\tbboxWidth = Math.max(bboxWidth, movePart.x);\r\n\t\t\t\t\tbboxHeight = Math.max(bboxHeight, movePart.y + this._baselineOffset);\r\n\t\t\t\t}\r\n\t\t\t\telse if (instruction instanceof parts.drawing.LineInstruction) {\r\n\t\t\t\t\tvar linePart = <parts.drawing.LineInstruction>instruction;\r\n\t\t\t\t\tpath += \" L \" + linePart.x + \" \" + (linePart.y + this._baselineOffset);\r\n\t\t\t\t\tbboxWidth = Math.max(bboxWidth, linePart.x);\r\n\t\t\t\t\tbboxHeight = Math.max(bboxHeight, linePart.y + this._baselineOffset);\r\n\t\t\t\t}\r\n\t\t\t\telse if (instruction instanceof parts.drawing.CubicBezierCurveInstruction) {\r\n\t\t\t\t\tvar cubicBezierCurvePart = <parts.drawing.CubicBezierCurveInstruction>instruction;\r\n\t\t\t\t\tpath += \" C \" + cubicBezierCurvePart.x1 + \" \" + (cubicBezierCurvePart.y1 + this._baselineOffset) + \", \" + cubicBezierCurvePart.x2 + \" \" + (cubicBezierCurvePart.y2 + this._baselineOffset) + \", \" + cubicBezierCurvePart.x3 + \" \" + (cubicBezierCurvePart.y3 + this._baselineOffset);\r\n\t\t\t\t\tbboxWidth = Math.max(bboxWidth, cubicBezierCurvePart.x1, cubicBezierCurvePart.x2, cubicBezierCurvePart.x3);\r\n\t\t\t\t\tbboxHeight = Math.max(bboxHeight, cubicBezierCurvePart.y1 + this._baselineOffset, cubicBezierCurvePart.y2 + this._baselineOffset, cubicBezierCurvePart.y3 + this._baselineOffset);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar result =\r\n\t\t\t\t'<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"' + (bboxWidth * scaleX).toFixed(3) + 'px\" height=\"' + (bboxHeight * scaleY).toFixed(3) + 'px\">\\n' +\r\n\t\t\t\t'\\t<g transform=\"scale(' + scaleX.toFixed(3) + ' ' + scaleY.toFixed(3) + ')\">\\n' +\r\n\t\t\t\t'\\t\\t<path d=\"' + path + '\" fill=\"' + fillColor.toString() + '\" />\\n' +\r\n\t\t\t\t'\\t</g>\\n' +\r\n\t\t\t\t'</svg>';\r\n\r\n\t\t\treturn <SVGSVGElement>domParser.parseFromString(result, \"image/svg+xml\").childNodes[0];\r\n\t\t}\r\n\t}\r\n\r\n\tvar domParser: DOMParser;\r\n\tif (typeof DOMParser !== \"undefined\") {\r\n\t\tdomParser = new DOMParser();\r\n\t}\r\n}\r\n","/**\r\n * libjass\r\n *\r\n * https://github.com/Arnavion/libjass\r\n *\r\n * Copyright 2013 Arnav Singh\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n///<reference path=\"libjass.ts\" />\r\n\r\ninterface Document {\r\n\t/**\r\n\t * @type {Element}\r\n\t */\r\n\tfullscreenElement: Element;\r\n\r\n\t/**\r\n\t * @type {Element}\r\n\t */\r\n\tmozFullScreenElement: Element;\r\n\r\n\t/**\r\n\t * @type {Element}\r\n\t */\r\n\twebkitFullscreenElement: Element;\r\n}\r\n\r\nmodule libjass.renderers {\r\n\t/**\r\n\t * A default renderer implementation.\r\n\t *\r\n\t * @param {!HTMLVideoElement} video\r\n\t * @param {!libjass.ASS} ass\r\n\t * @param {libjass.renderers.RendererSettings} settings\r\n\t */\r\n\texport class DefaultRenderer extends WebRenderer {\r\n\t\tprivate _videoIsFullScreen: boolean = false;\r\n\r\n\t\tconstructor(private _video: HTMLVideoElement, ass: ASS, settings?: RendererSettings) {\r\n\t\t\tsuper(ass, new VideoClock(_video), document.createElement(\"div\"), settings);\r\n\r\n\t\t\tthis._video.parentElement.replaceChild(this.libjassSubsWrapper, this._video);\r\n\t\t\tthis.libjassSubsWrapper.insertBefore(this._video, this.libjassSubsWrapper.firstElementChild);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @deprecated\r\n\t\t *\r\n\t\t * @param {number} width\r\n\t\t * @param {number} height\r\n\t\t */\r\n\t\tresizeVideo(width: number, height: number): void {\r\n\t\t\tconsole.warn(\"`DefaultRenderer.resizeVideo(width, height)` has been deprecated. Use `DefaultRenderer.resize(width, height)` instead.\");\r\n\t\t\tthis.resize(width, height);\r\n\t\t}\r\n\r\n\t\tprotected _ready(): void {\r\n\t\t\tdocument.addEventListener(\"mozfullscreenchange\", event => this._onFullScreenChange(document.mozFullScreenElement), false);\r\n\t\t\tdocument.addEventListener(\"webkitfullscreenchange\", event => this._onFullScreenChange(document.webkitFullscreenElement), false);\r\n\t\t\tdocument.addEventListener(\"fullscreenchange\", event => this._onFullScreenChange(document.fullscreenElement), false);\r\n\r\n\t\t\tthis.resize(this._video.offsetWidth, this._video.offsetHeight);\r\n\r\n\t\t\tsuper._ready();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {!Element} fullScreenElement\r\n\t\t */\r\n\t\tprivate _onFullScreenChange(fullScreenElement: Element): void {\r\n\t\t\tif (fullScreenElement === undefined) {\r\n\t\t\t\tfullScreenElement = document.msFullscreenElement;\r\n\t\t\t}\r\n\r\n\t\t\tif (fullScreenElement === this._video) {\r\n\t\t\t\tthis.libjassSubsWrapper.classList.add(\"libjass-full-screen\");\r\n\r\n\t\t\t\tthis.resize(screen.width, screen.height);\r\n\r\n\t\t\t\tthis._videoIsFullScreen = true;\r\n\r\n\t\t\t\tthis._dispatchEvent(\"fullScreenChange\", [this._videoIsFullScreen]);\r\n\t\t\t}\r\n\t\t\telse if (fullScreenElement === null && this._videoIsFullScreen) {\r\n\t\t\t\tthis.libjassSubsWrapper.classList.remove(\"libjass-full-screen\");\r\n\r\n\t\t\t\tthis._videoIsFullScreen = false;\r\n\r\n\t\t\t\tthis._dispatchEvent(\"fullScreenChange\", [this._videoIsFullScreen]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * libjass\r\n *\r\n * https://github.com/Arnavion/libjass\r\n *\r\n * Copyright 2013 Arnav Singh\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n///<reference path=\"libjass.ts\" />\r\n\r\nmodule libjass {\r\n\t/**\r\n\t * This class represents an ASS script. It contains the {@link libjass.ScriptProperties}, an array of {@link libjass.Style}s, and an array of {@link libjass.Dialogue}s.\r\n\t */\r\n\texport class ASS {\r\n\t\tprivate _properties: ScriptProperties = new ScriptProperties();\r\n\t\tprivate _styles: Map<string, Style> = new Map<string, Style>();\r\n\t\tprivate _dialogues: Dialogue[] = [];\r\n\r\n\t\tprivate _stylesFormatSpecifier: string[] = null;\r\n\t\tprivate _dialoguesFormatSpecifier: string[] = null;\r\n\r\n\t\t/**\r\n\t\t * The properties of this script.\r\n\t\t *\r\n\t\t * @type {!libjass.ScriptProperties}\r\n\t\t */\r\n\t\tget properties(): ScriptProperties {\r\n\t\t\treturn this._properties;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The styles in this script.\r\n\t\t *\r\n\t\t * @type {!Map.<string, !libjass.Style>}\r\n\t\t */\r\n\t\tget styles(): Map<string, Style> {\r\n\t\t\treturn this._styles;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The dialogues in this script.\r\n\t\t *\r\n\t\t * @type {!Array.<!libjass.Dialogue>}\r\n\t\t */\r\n\t\tget dialogues(): Dialogue[] {\r\n\t\t\treturn this._dialogues;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The format specifier for the styles section.\r\n\t\t *\r\n\t\t * @type {!Array.<string>}\r\n\t\t */\r\n\t\tget stylesFormatSpecifier(): string[] {\r\n\t\t\treturn this._stylesFormatSpecifier;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The format specifier for the styles section.\r\n\t\t *\r\n\t\t * @type {!Array.<string>}\r\n\t\t */\r\n\t\tget dialoguesFormatSpecifier(): string[] {\r\n\t\t\treturn this._dialoguesFormatSpecifier;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The format specifier for the events section.\r\n\t\t *\r\n\t\t * @type {!Array.<string>}\r\n\t\t */\r\n\t\tset stylesFormatSpecifier(value: string[]) {\r\n\t\t\tthis._stylesFormatSpecifier = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The format specifier for the events section.\r\n\t\t *\r\n\t\t * @type {!Array.<string>}\r\n\t\t */\r\n\t\tset dialoguesFormatSpecifier(value: string[]) {\r\n\t\t\tthis._dialoguesFormatSpecifier = value;\r\n\t\t}\r\n\r\n\t\tconstructor() {\r\n\t\t\t// Deprecated constructor argument\r\n\t\t\tif (arguments.length === 1) {\r\n\t\t\t\tthrow new Error(\"Constructor `new ASS(rawASS)` has been deprecated. Use `ASS.fromString(rawASS)` instead.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Add a style to this ASS script.\r\n\t\t *\r\n\t\t * @param {string} line The line from the script that contains the new style.\r\n\t\t */\r\n\t\taddStyle(line: string): void {\r\n\t\t\tvar styleLine = parser.parseLineIntoTypedTemplate(line, this._stylesFormatSpecifier);\r\n\t\t\tif (styleLine === null || styleLine.type !== \"Style\") {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar styleTemplate = styleLine.template;\r\n\r\n\t\t\tif (libjass.verboseMode) {\r\n\t\t\t\tvar repr = \"\";\r\n\t\t\t\tstyleTemplate.forEach((value, key) => repr += key + \" = \" + value + \", \");\r\n\t\t\t\tconsole.log(\"Read style: \" + repr);\r\n\t\t\t}\r\n\r\n\t\t\t// Create the dialogue and add it to the dialogues array\r\n\t\t\tvar style = new Style(styleTemplate);\r\n\t\t\tthis._styles.set(style.name, style);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Add an event to this ASS script.\r\n\t\t *\r\n\t\t * @param {string} line The line from the script that contains the new event.\r\n\t\t */\r\n\t\taddEvent(line: string): void {\r\n\t\t\tvar dialogueLine = parser.parseLineIntoTypedTemplate(line, this._dialoguesFormatSpecifier);\r\n\t\t\tif (dialogueLine === null || dialogueLine.type !== \"Dialogue\") {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar dialogueTemplate = dialogueLine.template;\r\n\r\n\t\t\tif (libjass.verboseMode) {\r\n\t\t\t\tvar repr = \"\";\r\n\t\t\t\tdialogueTemplate.forEach((value, key) => repr += key + \" = \" + value + \", \");\r\n\t\t\t\tconsole.log(\"Read dialogue: \" + repr);\r\n\t\t\t}\r\n\r\n\t\t\t// Create the dialogue and add it to the dialogues array\r\n\t\t\tthis.dialogues.push(new Dialogue(dialogueTemplate, this));\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Creates an ASS object from the raw text of an ASS script.\r\n\t\t *\r\n\t\t * @param {string} raw The raw text of the script.\r\n\t\t * @param {number=0} type The type of the script. One of the {@link libjass.Format} constants.\r\n\t\t * @return {!Promise.<!libjass.ASS>}\r\n\t\t */\r\n\t\tstatic fromString(raw: string, type: Format = Format.ASS): Promise<ASS> {\r\n\t\t\tif ((<{ [index: string]: any }><any>Format)[Format[type]] !== type) {\r\n\t\t\t\tthrow new Error(\"Illegal value of type: \" + type);\r\n\t\t\t}\r\n\r\n\t\t\treturn ASS.fromStream(new parser.StringStream(raw), type);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Creates an ASS object from the given {@link libjass.parser.Stream}.\r\n\t\t *\r\n\t\t * @param {!libjass.parser.Stream} stream The stream to parse the script from\r\n\t\t * @param {number=0} type The type of the script. One of the {@link libjass.Format} constants.\r\n\t\t * @return {!Promise.<!libjass.ASS>} A promise that will be resolved with the ASS object when it has been fully parsed\r\n\t\t */\r\n\t\tstatic fromStream(stream: parser.Stream, type: Format = Format.ASS): Promise<ASS> {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Format.ASS:\r\n\t\t\t\t\treturn new parser.StreamParser(stream).ass;\r\n\t\t\t\tcase Format.SRT:\r\n\t\t\t\t\treturn new parser.SrtStreamParser(stream).ass;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Illegal value of type: \" + type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Creates an ASS object from the given URL.\r\n\t\t *\r\n\t\t * @param {string} url The URL of the script.\r\n\t\t * @param {number=0} type The type of the script. One of the {@link libjass.Format} constants.\r\n\t\t * @return {!Promise.<!libjass.ASS>} A promise that will be resolved with the ASS object when it has been fully parsed\r\n\t\t */\r\n\t\tstatic fromUrl(url: string, type: Format = Format.ASS): Promise<ASS> {\r\n\t\t\tif ((<{ [index: string]: any }><any>Format)[Format[type]] !== type) {\r\n\t\t\t\tthrow new Error(\"Illegal value of type: \" + type);\r\n\t\t\t}\r\n\r\n\t\t\tvar xhr = new XMLHttpRequest();\r\n\t\t\tvar result = ASS.fromStream(new parser.XhrStream(xhr), type);\r\n\t\t\txhr.open(\"GET\", url, true);\r\n\t\t\txhr.send();\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The format of the string passed to {@link libjass.ASS.fromString}\r\n\t */\r\n\texport enum Format {\r\n\t\tASS,\r\n\t\tSRT\r\n\t}\r\n\r\n\t/**\r\n\t * The wrapping style defined in the {@link libjass.ScriptProperties}\r\n\t */\r\n\texport enum WrappingStyle {\r\n\t\tSmartWrappingWithWiderTopLine = 0,\r\n\t\tSmartWrappingWithWiderBottomLine = 3,\r\n\t\tEndOfLineWrapping = 1,\r\n\t\tNoLineWrapping = 2,\r\n\t}\r\n\r\n\t/**\r\n\t * This class represents the properties of a {@link libjass.ASS} script.\r\n\t */\r\n\texport class ScriptProperties {\r\n\t\tprivate _resolutionX: number;\r\n\t\tprivate _resolutionY: number;\r\n\t\tprivate _wrappingStyle: WrappingStyle;\r\n\t\tprivate _scaleBorderAndShadow: boolean;\r\n\r\n\t\t/**\r\n\t\t * The horizontal script resolution.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget resolutionX(): number {\r\n\t\t\treturn this._resolutionX;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The horizontal script resolution.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tset resolutionX(value: number) {\r\n\t\t\tthis._resolutionX = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The vertical script resolution.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget resolutionY(): number {\r\n\t\t\treturn this._resolutionY;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The vertical script resolution.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tset resolutionY(value: number) {\r\n\t\t\tthis._resolutionY = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The wrap style. One of the {@link libjass.WrappingStyle} constants.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget wrappingStyle(): WrappingStyle {\r\n\t\t\treturn this._wrappingStyle;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The wrap style. One of the {@link libjass.WrappingStyle} constants.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tset wrappingStyle(value: WrappingStyle) {\r\n\t\t\tthis._wrappingStyle = value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Whether to scale outline widths and shadow depths from script resolution to video resolution or not. If true, widths and depths are scaled.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tget scaleBorderAndShadow(): boolean {\r\n\t\t\treturn this._scaleBorderAndShadow;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Whether to scale outline widths and shadow depths from script resolution to video resolution or not. If true, widths and depths are scaled.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tset scaleBorderAndShadow(value: boolean) {\r\n\t\t\tthis._scaleBorderAndShadow = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The border style defined in the {@link libjass.Style} properties.\r\n\t */\r\n\texport enum BorderStyle {\r\n\t\tOutline = 1,\r\n\t\tOpaqueBox = 3,\r\n\t}\r\n\r\n\t/**\r\n\t * This class represents a single global style declaration in a {@link libjass.ASS} script. The styles can be obtained via the {@link libjass.ASS.styles} property.\r\n\t *\r\n\t * @param {!Map.<string, string>} template The template object that contains the style's properties. It is a map of the string values read from the ASS file.\r\n\t * @param {string} template[\"Name\"] The name of the style\r\n\t * @param {string} template[\"Italic\"] -1 if the style is italicized\r\n\t * @param {string} template[\"Bold\"] -1 if the style is bold\r\n\t * @param {string} template[\"Underline\"] -1 if the style is underlined\r\n\t * @param {string} template[\"StrikeOut\"] -1 if the style is struck-through\r\n\t * @param {string} template[\"Fontname\"] The name of the font\r\n\t * @param {string} template[\"Fontsize\"] The size of the font\r\n\t * @param {string} template[\"ScaleX\"] The horizontal scaling of the font\r\n\t * @param {string} template[\"ScaleY\"] The vertical scaling of the font\r\n\t * @param {string} template[\"Spacing\"] The letter spacing of the font\r\n\t * @param {string} template[\"PrimaryColour\"] The primary color\r\n\t * @param {string} template[\"OutlineColour\"] The outline color\r\n\t * @param {string} template[\"BackColour\"] The shadow color\r\n\t * @param {string} template[\"Outline\"] The outline thickness\r\n\t * @param {string} template[\"Shadow\"] The shadow depth\r\n\t * @param {string} template[\"Alignment\"] The alignment number\r\n\t * @param {string} template[\"MarginL\"] The left margin\r\n\t * @param {string} template[\"MarginR\"] The right margin\r\n\t * @param {string} template[\"MarginV\"] The vertical margin\r\n\t */\r\n\texport class Style {\r\n\t\tprivate _name: string;\r\n\r\n\t\tprivate _italic: boolean;\r\n\t\tprivate _bold: boolean;\r\n\t\tprivate _underline: boolean;\r\n\t\tprivate _strikeThrough: boolean;\r\n\r\n\t\tprivate _fontName: string;\r\n\t\tprivate _fontSize: number;\r\n\r\n\t\tprivate _fontScaleX: number;\r\n\t\tprivate _fontScaleY: number;\r\n\r\n\t\tprivate _letterSpacing: number;\r\n\r\n\t\tprivate _rotationZ: number;\r\n\r\n\t\tprivate _primaryColor: parts.Color;\r\n\t\tprivate _secondaryColor: parts.Color;\r\n\t\tprivate _outlineColor: parts.Color;\r\n\t\tprivate _shadowColor: parts.Color;\r\n\r\n\t\tprivate _outlineThickness: number;\r\n\t\tprivate _borderStyle: BorderStyle;\r\n\r\n\t\tprivate _shadowDepth: number;\r\n\r\n\t\tprivate _alignment: number;\r\n\r\n\t\tprivate _marginLeft: number;\r\n\t\tprivate _marginRight: number;\r\n\t\tprivate _marginVertical: number;\r\n\r\n\t\tconstructor(template: Map<string, string>) {\r\n\t\t\tthis._name = template.get(\"Name\");\r\n\t\t\tif (this._name === undefined || this._name === null || this._name.constructor !== String) {\r\n\t\t\t\tthrow new Error(\"Style doesn't have a name.\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._italic = template.get(\"Italic\") === \"-1\";\r\n\t\t\tthis._bold = template.get(\"Bold\") === \"-1\";\r\n\t\t\tthis._underline = template.get(\"Underline\") === \"-1\";\r\n\t\t\tthis._strikeThrough = template.get(\"StrikeOut\") === \"-1\";\r\n\r\n\t\t\tthis._fontName = template.get(\"Fontname\");\r\n\t\t\tthis._fontSize = _valueOrDefault(template, \"Fontsize\", parseFloat, value => !isNaN(value), \"50\");\r\n\r\n\t\t\tthis._fontScaleX = _valueOrDefault(template, \"ScaleX\", parseFloat, value => !isNaN(value), \"100\") / 100;\r\n\t\t\tthis._fontScaleY = _valueOrDefault(template, \"ScaleY\", parseFloat, value => !isNaN(value), \"100\") / 100;\r\n\r\n\t\t\tthis._letterSpacing = _valueOrDefault(template, \"Spacing\", parseFloat, value => !isNaN(value), \"0\");\r\n\r\n\t\t\tthis._rotationZ = _valueOrDefault(template, \"Angle\", parseFloat, value => !isNaN(value), \"0\");\r\n\r\n\t\t\tthis._primaryColor = _valueOrDefault(template, \"PrimaryColour\", str => <parts.Color>parser.parse(str, \"colorWithAlpha\"), null, \"&H0000FFFF\");\r\n\t\t\tthis._secondaryColor = _valueOrDefault(template, \"SecondaryColour\", str => <parts.Color>parser.parse(str, \"colorWithAlpha\"), null, \"&H00000000\");\r\n\t\t\tthis._outlineColor = _valueOrDefault(template, \"OutlineColour\", str => <parts.Color>parser.parse(str, \"colorWithAlpha\"), null, \"&H00000000\");\r\n\t\t\tthis._shadowColor = _valueOrDefault(template, \"BackColour\", str => <parts.Color>parser.parse(str, \"colorWithAlpha\"), null, \"&H00000000\");\r\n\r\n\t\t\tthis._outlineThickness = _valueOrDefault(template, \"Outline\", parseFloat, value => !isNaN(value), \"1\");\r\n\t\t\tthis._borderStyle = _valueOrDefault(template, \"BorderStyle\", parseInt, value => !isNaN(value), \"1\");\r\n\r\n\t\t\tthis._shadowDepth = _valueOrDefault(template, \"Shadow\", parseFloat, value => !isNaN(value), \"1\");\r\n\r\n\t\t\tthis._alignment = _valueOrDefault(template, \"Alignment\", parseInt, value => !isNaN(value), \"2\");\r\n\r\n\t\t\tthis._marginLeft = _valueOrDefault(template, \"MarginL\", parseFloat, value => !isNaN(value), \"80\");\r\n\t\t\tthis._marginRight = _valueOrDefault(template, \"MarginR\", parseFloat, value => !isNaN(value), \"80\");\r\n\t\t\tthis._marginVertical = _valueOrDefault(template, \"MarginV\", parseFloat, value => !isNaN(value), \"35\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The name of this style.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tget name(): string {\r\n\t\t\treturn this._name;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Whether this style is italicized or not.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tget italic(): boolean {\r\n\t\t\treturn this._italic;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Whether this style is bold or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tget bold(): boolean {\r\n\t\t\treturn this._bold;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Whether this style is underlined or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tget underline(): boolean {\r\n\t\t\treturn this._underline;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Whether this style is struck-through or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tget strikeThrough(): boolean {\r\n\t\t\treturn this._strikeThrough;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The name of this style's font.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tget fontName(): string {\r\n\t\t\treturn this._fontName;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The size of this style's font.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget fontSize(): number {\r\n\t\t\treturn this._fontSize;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The horizontal scaling of this style's font.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget fontScaleX(): number {\r\n\t\t\treturn this._fontScaleX;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The vertical scaling of this style's font.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget fontScaleY(): number {\r\n\t\t\treturn this._fontScaleY;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The letter spacing scaling of this style's font.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget letterSpacing(): number {\r\n\t\t\treturn this._letterSpacing;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The default Z-rotation of this style.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget rotationZ(): number {\r\n\t\t\treturn this._rotationZ;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The color of this style's font.\r\n\t\t *\r\n\t\t * @type {!libjass.parts.Color}\r\n\t\t */\r\n\t\tget primaryColor(): parts.Color {\r\n\t\t\treturn this._primaryColor;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The alternate color of this style's font, used in karaoke.\r\n\t\t *\r\n\t\t * @type {!libjass.parts.Color}\r\n\t\t */\r\n\t\tget secondaryColor(): parts.Color {\r\n\t\t\treturn this._secondaryColor;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The color of this style's outline.\r\n\t\t *\r\n\t\t * @type {!libjass.parts.Color}\r\n\t\t */\r\n\t\tget outlineColor(): parts.Color {\r\n\t\t\treturn this._outlineColor;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The color of this style's shadow.\r\n\t\t *\r\n\t\t * @type {!libjass.parts.Color}\r\n\t\t */\r\n\t\tget shadowColor(): parts.Color {\r\n\t\t\treturn this._shadowColor;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The thickness of this style's outline.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget outlineThickness(): number {\r\n\t\t\treturn this._outlineThickness;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The border style of this style.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget borderStyle(): BorderStyle {\r\n\t\t\treturn this._borderStyle;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The depth of this style's shadow.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget shadowDepth(): number {\r\n\t\t\treturn this._shadowDepth;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The alignment of dialogues of this style.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget alignment(): number {\r\n\t\t\treturn this._alignment;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The left margin of dialogues of this style.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget marginLeft(): number {\r\n\t\t\treturn this._marginLeft;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The right margin of dialogues of this style.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget marginRight(): number {\r\n\t\t\treturn this._marginRight;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The vertical margin of dialogues of this style.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget marginVertical(): number {\r\n\t\t\treturn this._marginVertical;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This class represents a dialogue in a {@link libjass.ASS} script.\r\n\t *\r\n\t * @param {!Map.<string, string>} template The template object that contains the dialogue's properties. It is a map of the string values read from the ASS file.\r\n\t * @param {string} template[\"Style\"] The name of the default style of this dialogue\r\n\t * @param {string} template[\"Start\"] The start time\r\n\t * @param {string} template[\"End\"] The end time\r\n\t * @param {string} template[\"Layer\"] The layer number\r\n\t * @param {string} template[\"Text\"] The text of this dialogue\r\n\t * @param {ASS} ass The ASS object to which this dialogue belongs\r\n\t */\r\n\texport class Dialogue {\r\n\t\tprivate static _lastDialogueId = -1;\r\n\r\n\t\tprivate _id: number;\r\n\r\n\t\tprivate _style: Style;\r\n\r\n\t\tprivate _start: number;\r\n\t\tprivate _end: number;\r\n\r\n\t\tprivate _layer: number;\r\n\t\tprivate _alignment: number;\r\n\r\n\t\tprivate _rawPartsString: string;\r\n\t\tprivate _parts: parts.Part[] = null;\r\n\r\n\t\tprivate _sub: HTMLDivElement = null;\r\n\r\n\t\tconstructor(template: Map<string, string>, ass: ASS) {\r\n\t\t\tthis._id = ++Dialogue._lastDialogueId;\r\n\r\n\t\t\tvar style = template.get(\"Style\");\r\n\t\t\tthis._style = ass.styles.get(style);\r\n\t\t\tif (this._style === undefined) {\r\n\t\t\t\tthrow new Error(\"Unrecognized style \" + style);\r\n\t\t\t}\r\n\r\n\t\t\tthis._start = Dialogue._toTime(template.get(\"Start\"));\r\n\t\t\tthis._end = Dialogue._toTime(template.get(\"End\"));\r\n\r\n\t\t\tthis._layer = Math.max(_valueOrDefault(template, \"Layer\", parseInt, value => !isNaN(value), \"0\"), 0);\r\n\r\n\t\t\tthis._rawPartsString = template.get(\"Text\");\r\n\t\t\tif (this._rawPartsString === undefined || this._rawPartsString === null || this._rawPartsString.constructor !== String) {\r\n\t\t\t\tthrow new Error(\"Dialogue doesn't have any text.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The unique ID of this dialogue. Auto-generated.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget id(): number {\r\n\t\t\treturn this._id;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The start time of this dialogue.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget start(): number {\r\n\t\t\treturn this._start;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The end time of this dialogue.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget end(): number {\r\n\t\t\treturn this._end;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The default style of this dialogue.\r\n\t\t *\r\n\t\t * @type {!libjass.Style}\r\n\t\t */\r\n\t\tget style(): Style {\r\n\t\t\treturn this._style;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The alignment number of this dialogue.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget alignment(): number {\r\n\t\t\tif (this._parts === null) {\r\n\t\t\t\tthis._parsePartsString();\r\n\t\t\t}\r\n\r\n\t\t\treturn this._alignment;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The layer number of this dialogue.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tget layer(): number {\r\n\t\t\treturn this._layer;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The {@link libjass.parts} of this dialogue.\r\n\t\t *\r\n\t\t * @type {!Array.<!libjass.parts.Part>}\r\n\t\t */\r\n\t\tget parts(): parts.Part[] {\r\n\t\t\tif (this._parts === null) {\r\n\t\t\t\tthis._parsePartsString();\r\n\t\t\t}\r\n\r\n\t\t\treturn this._parts;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return {string} A simple representation of this dialogue's properties and parts.\r\n\t\t */\r\n\t\ttoString(): string {\r\n\t\t\treturn \"#\" + this._id + \" [\" + this._start.toFixed(3) + \"-\" + this._end.toFixed(3) + \"] \" + ((this._parts !== null) ? this._parts.join(\", \") : this._rawPartsString);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Parses this dialogue's parts from the raw parts string.\r\n\t\t */\r\n\t\tprivate _parsePartsString(): void {\r\n\t\t\tthis._parts = <parts.Part[]>parser.parse(this._rawPartsString, \"dialogueParts\");\r\n\r\n\t\t\tthis._alignment = this._style.alignment;\r\n\r\n\t\t\tthis._parts.forEach((part, index) => {\r\n\t\t\t\tif (part instanceof parts.Alignment) {\r\n\t\t\t\t\tthis._alignment = (<parts.Alignment>part).value;\r\n\t\t\t\t}\r\n\t\t\t\telse if (part instanceof parts.Move) {\r\n\t\t\t\t\tvar movePart = <parts.Move>part;\r\n\r\n\t\t\t\t\tif (movePart.t1 === null || movePart.t2 === null) {\r\n\t\t\t\t\t\tthis._parts[index] =\r\n\t\t\t\t\t\t\tnew parts.Move(\r\n\t\t\t\t\t\t\t\tmovePart.x1, movePart.y1, movePart.x2, movePart.y2,\r\n\t\t\t\t\t\t\t\t0, this._end - this._start\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (part instanceof parts.Transform) {\r\n\t\t\t\t\tvar transformPart = <parts.Transform>part;\r\n\r\n\t\t\t\t\tif (transformPart.start === null || transformPart.end === null || transformPart.accel === null) {\r\n\t\t\t\t\t\tthis._parts[index] =\r\n\t\t\t\t\t\t\tnew parts.Transform(\r\n\t\t\t\t\t\t\t\t(transformPart.start === null) ? 0 : transformPart.start,\r\n\t\t\t\t\t\t\t\t(transformPart.end === null) ? (this._end - this._start) : transformPart.end,\r\n\t\t\t\t\t\t\t\t(transformPart.accel === null) ? 1 : transformPart.accel,\r\n\t\t\t\t\t\t\t\ttransformPart.tags\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (libjass.debugMode) {\r\n\t\t\t\tvar possiblyIncorrectParses = this._parts.filter(part => part instanceof parts.Comment && (<parts.Comment>part).value.indexOf(\"\\\\\") !== -1);\r\n\t\t\t\tif (possiblyIncorrectParses.length > 0) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\"Possible incorrect parse:\\n\" +\r\n\t\t\t\t\t\tthis._rawPartsString + \"\\n\" +\r\n\t\t\t\t\t\t\"was parsed as\\n\" +\r\n\t\t\t\t\t\tthis.toString() + \"\\n\" +\r\n\t\t\t\t\t\t\"The possibly incorrect parses are:\\n\" +\r\n\t\t\t\t\t\tpossiblyIncorrectParses.join(\"\\n\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Converts this string into the number of seconds it represents. This string must be in the form of hh:mm:ss.MMM\r\n\t\t *\r\n\t\t * @param {string} str\r\n\t\t * @return {number}\r\n\t\t */\r\n\t\tprivate static _toTime(str: string): number {\r\n\t\t\treturn str.split(\":\").reduce<number>((previousValue, currentValue) => previousValue * 60 + parseFloat(currentValue), 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A property.\r\n\t */\r\n\texport interface Property {\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tname: string;\r\n\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tvalue: string;\r\n\t}\r\n\r\n\t/**\r\n\t * A template object with a particular type.\r\n\t */\r\n\texport interface TypedTemplate {\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\ttype: string;\r\n\r\n\t\t/**\r\n\t\t * @type {!Map.<string, string>}\r\n\t\t */\r\n\t\ttemplate: Map<string, string>;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {!Map.<string, string>} template\r\n\t * @param {string} key\r\n\t * @param {function(string):T} converter\r\n\t * @param {?function(T):boolean} validator\r\n\t * @param {T} defaultValue\r\n\t * @return {T}\r\n\t */\r\n\tfunction _valueOrDefault<T>(template: Map<string, string>, key: string, converter: (str: string) => T, validator: (value: T) => boolean, defaultValue: string): T {\r\n\t\tvar value = template.get(key);\r\n\t\tif (value === undefined) {\r\n\t\t\treturn converter(defaultValue);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tvar numValue = converter(value);\r\n\r\n\t\t\tif (validator !== null && !validator(numValue)) {\r\n\t\t\t\tthrow new Error(\"Validation failed.\");\r\n\t\t\t}\r\n\r\n\t\t\treturn numValue;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tthrow new Error(\"Property \" + key + \" has invalid value \" + value + \" - \" + ex.stack);\r\n\t\t}\r\n\t}\r\n}\r\n"]}